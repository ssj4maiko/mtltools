{"version":3,"file":"src_app_dashboard_index_ts.js","mappings":"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","sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dictionary/dictionary.component.html","./src/app/dashboard/dictionary/dictionary.component.ts","./src/app/dashboard/index.ts","./src/app/dashboard/index/index.component.ts","./src/app/dashboard/index/index.component.html","./src/app/dashboard/novel/novel.component.html","./src/app/dashboard/novel/novel.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexComponent } from './index/index.component';\n\nconst routes: Routes = [\n  {\n    path: ''\n    , component: IndexComponent\n    , data: { title: 'Dashboard', breadcrumb: 'Dashboard' }\n  },\n  {\n    path: '**'\n    , redirectTo: ''\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { IndexComponent } from './index/index.component';\nimport { DictionaryComponent } from './dictionary/dictionary.component';\nimport { NovelComponent } from './novel/novel.component';\n\n@NgModule({\n  declarations: [IndexComponent, DictionaryComponent, NovelComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n","<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Language</th>\n\t\t\t\t<th style=\"width: 200px;\"># of Categories</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let dictionary of dictionaries\" >\n\t\t\t\t<tr [routerLink]=\"['/dictionary/', dictionary.id]\">\n                    <td>{{ dictionary.name }}</td>\n                    <td>{{ dictionary.countCategories() }}</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { Dictionary } from '../../_models/dictionary';\nimport { Novel } from '../../_models/novel';\n\n\n@Component({\n  selector: 'app-dashboard-dictionary',\n  templateUrl: './dictionary.component.html',\n  styleUrls: ['./dictionary.component.scss']\n})\nexport class DictionaryComponent implements OnInit {\n\n  dictionaries: Dictionary[] = [];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.dictionaryList();\n  }\n  private dictionaryList() {\n    this.api.Dictionary.getAll()\n      .then(dictionaries => {\n        if (dictionaries) {\n          this.dictionaries = Object.values(dictionaries);\n        }\n      }, err => {\n        console.log(err);\n      });\n  }\n\n}\n","export * from './dashboard.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"subarea\">\n\t<h1 [routerLink]=\"['/novel']\">Novel</h1>\n    <app-dashboard-novel></app-dashboard-novel>\n</div>\n<div class=\"subarea\">\n\t<h1 [routerLink]=\"['/dictionary']\">Dictionary</h1>\n    <app-dashboard-dictionary></app-dashboard-dictionary>\n</div>","<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Code</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Chapters</th>\n\t\t\t\t<th>Finished</th>\n\t\t\t\t<th>R18</th>\n\t\t\t\t<th>Update Chapters</th>\n\t\t\t\t<th>Edit</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let novel of novels\" >\n\t\t\t\t<tr title=\"{{ novel.nameOriginal }}\" *ngIf=\"novel.show\">\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.code }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameCustom }}</td>\n\t\t\t\t\t<td>{{ novel.numberChapters }}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ng-container *ngIf=\"novel.completed == 1; then success else danger\"></ng-container>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ng-container *ngIf=\"novel.flagR18 == 1; then success else danger\"></ng-container>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td (click)=\"updateChapters(novel.id)\"><a>Update</a></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/edit', novel.id]\"><i class=\"fas fa-edit\"></i></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t\t<ng-template #success>\n\t\t\t\t<a class='button is-success'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t\t<ng-template #danger>\n\t\t\t\t<a class='button is-danger'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api';\nimport { CacheService } from '../../cache.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Novel } from '../../_models/novel';\n\n@Component({\n  selector: 'app-dashboard-novel',\n  templateUrl: './novel.component.html',\n  styleUrls: ['./novel.component.scss']\n})\nexport class NovelComponent implements OnInit {\n\n  novels: Novel[] = [];\n\n  constructor(\n    private api: ApiService,\n    private cacheService: CacheService\n  ) { }\n\n  ngOnInit() {\n    // Get list of novels\n    this.api.Novel.getAll()\n      .then(novels => {\n        // Always take from the updated api.Novels()\n        this.novels = Object.values(novels);\n      }, err => {\n        console.log(err);\n      }\n      );\n  }\n\n  updateChapters(idNovel: number) {\n    this.api.Chapter.autoUpdate({ idNovel })\n      .then(res => {\n        console.log('Novel updated', res);\n        /**\n         * Auto update on the list too\n         */\n        this.api.Novel.get({ id: idNovel })\n          .then((novel) => {\n            let updated = false;\n            for (const i in this.novels) {\n              if (this.novels[i].id === novel.id) {\n                this.novels[i] = novel;\n                updated = true;\n                break;\n              }\n            }\n            if (!updated) {\n              console.log('The novel was not found on the list? Impossible...');\n            }\n\n          });\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n"],"names":["RouterModule","IndexComponent","routes","path","component","data","title","breadcrumb","redirectTo","DashboardRoutingModule","forChild","imports","exports","CommonModule","DictionaryComponent","NovelComponent","DashboardModule","declarations","i0","constructor","router","route","api","ngOnInit","dictionaryList","Dictionary","getAll","then","dictionaries","Object","values","err","console","log","selectors","decls","vars","consts","template","ctx_r9","_r1","_r3","cacheService","Novel","novels","updateChapters","idNovel","Chapter","autoUpdate","res","get","id","novel","updated","i"],"sourceRoot":"webpack:///"}