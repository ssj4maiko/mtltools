{"version":3,"file":"src_app_dashboard_index_ts.js","mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyF,YAAT,CAAsB+M,QAAtB,EAAgCC,eAAhC,EAAiD;AAC7C,SAAOf,WAAW,CAACjM,YAAZ,CAAyB+M,QAAzB,EAAmCC,eAAnC,EAAoD,IAApD,CAAP;AACH;;AACDlV,oBAAA,GAAuBkI,YAAvB;;;;;;;;;;;AC5Ca;;AACblH,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2F,UAAT,CAAoB8M,eAApB,EAAqC;AACjC,SAAOf,WAAW,CAAC/L,UAAZ,CAAuB8M,eAAvB,EAAwC,IAAxC,CAAP;AACH;;AACDlV,kBAAA,GAAqBoI,UAArB;;;;;;;;;;;ACvCa;;AACbpH,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8F,MAAT,CAAgB4M,QAAhB,EAA0B;AACtB,SAAOhB,WAAW,CAACiB,UAAZ,CAAuBD,QAAvB,EAAiC,IAAjC,CAAP;AACH;;AACDnV,cAAA,GAAiBuI,MAAjB;;;;;;;;;;;ACjEa;;AACbvH,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgG,UAAT,CAAoB4M,OAApB,EAA6B;AACzB,SAAOlB,WAAW,CAAC1L,UAAZ,CAAuB4M,OAAvB,EAAgC,IAAhC,CAAP;AACH;;AACDrV,kBAAA,GAAqByI,UAArB;;;;;;;;;;;AC9Ca;;AACbzH,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIuE,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;;AACA,IAAIC,wBAAwB,GAAGD,mBAAO,CAAC,wCAAD,CAAtC;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiD,aAAT,GAAyB;AACrB,MAAI4P,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC5V,MAAhC,EAAwCwW,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,WAAW,CAACC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,MAAIF,OAAO,GAAG,IAAd;;AACA,MAAI,OAAOC,WAAW,CAACA,WAAW,CAACvW,MAAZ,GAAqB,CAAtB,CAAlB,KAA+C,UAAnD,EAA+D;AAC3DsW,IAAAA,OAAO,GAAGC,WAAW,CAACE,GAAZ,EAAV;AACH,GARoB,CASrB;AACA;;;AACA,MAAIF,WAAW,CAACvW,MAAZ,KAAuB,CAAvB,IAA4B2D,wBAAwB,CAAC+S,OAAzB,CAAiCH,WAAW,CAAC,CAAD,CAA5C,CAAhC,EAAkF;AAC9EA,IAAAA,WAAW,GAAGA,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,EAAd;AACH;;AACD,SAAO,KAAKC,IAAL,CAAUC,IAAV,CAAepT,MAAM,CAACzE,EAAP,CAAU8X,KAAV,CAAgB,KAAK,CAArB,EAAwB,CAAC,IAAD,EAAOlQ,MAAP,CAAc2P,WAAd,CAAxB,CAAf,EAAoE,IAAI5S,wBAAwB,CAACoT,qBAA7B,CAAmDT,OAAnD,CAApE,CAAP;AACH;;AACDrV,qBAAA,GAAwB0F,aAAxB;;;;;;;;;;;AChEa;;AACb1E,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIuE,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkD,MAAT,GAAkB;AACd,MAAI2P,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC5V,MAAhC,EAAwCwW,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,WAAW,CAACC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,SAAO,KAAKI,IAAL,CAAUC,IAAV,CAAepT,MAAM,CAACmD,MAAP,CAAckQ,KAAd,CAAoB,KAAK,CAAzB,EAA4B,CAAC,IAAD,EAAOlQ,MAAP,CAAc2P,WAAd,CAA5B,CAAf,CAAP;AACH;;AACDtV,cAAA,GAAiB2F,MAAjB;;;;;;;;;;;AC5Da;;AACb3E,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoG,SAAT,GAAqB;AACjB,SAAOsL,WAAW,CAACtL,SAAZ,GAAwB,IAAxB,CAAP;AACH;;AACD7I,iBAAA,GAAoB6I,SAApB;;;;;;;;;;;ACtDa;;AACb7H,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsG,SAAT,CAAmBsM,OAAnB,EAA4B;AACxB,SAAOlB,WAAW,CAACpL,SAAZ,CAAsBsM,OAAtB,EAA+B,IAA/B,CAAP;AACH;;AACDrV,iBAAA,GAAoB+I,SAApB;;;;;;;;;;;ACzDa;;AACb/H,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwG,WAAT,CAAqB8M,eAArB,EAAsC;AAClC,SAAO5B,WAAW,CAAClL,WAAZ,CAAwB8M,eAAxB,EAAyC,IAAzC,CAAP;AACH;;AACD/V,mBAAA,GAAsBiJ,WAAtB;;;;;;;;;;;ACtDa;;AACbjI,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0G,KAAT,CAAe6M,SAAf,EAA0B;AACtB,SAAO7B,WAAW,CAAChL,KAAZ,CAAkB6M,SAAlB,EAA6B,IAA7B,CAAP;AACH;;AACDhW,aAAA,GAAgBmJ,KAAhB;;;;;;;;;;;ACtDa;;AACbnI,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4G,QAAT,CAAkB+K,gBAAlB,EAAoC;AAChC,SAAOD,WAAW,CAAC9K,QAAZ,CAAqB+K,gBAArB,EAAuC,IAAvC,CAAP;AACH;;AACDpU,gBAAA,GAAmBqJ,QAAnB;;;;;;;;;;;AChDa;;AACbrI,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIuE,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;;AACA,IAAI0R,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8G,YAAT,CAAsB0M,OAAtB,EAA+B3B,SAA/B,EAA0C;AACtC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG9R,MAAM,CAAC2C,cAAnB;AAAoC;;AAChE,SAAOgP,WAAW,CAAC5K,YAAZ,CAAyB0M,OAAzB,EAAkC3B,SAAlC,EAA6C,IAA7C,CAAP;AACH;;AACDtU,oBAAA,GAAuBuJ,YAAvB;;;;;;;;;;;ACtDa;;AACbvI,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgH,cAAT,CAAwByM,YAAxB,EAAsC;AAClC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,IAAf;AAAsB;;AACrD,SAAO/B,WAAW,CAAC1K,cAAZ,CAA2ByM,YAA3B,EAAyC,IAAzC,CAAP;AACH;;AACDlW,sBAAA,GAAyByJ,cAAzB;;;;;;;;;;;ACtCa;;AACbzI,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIuE,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;;AACA,IAAI0R,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkH,KAAT,CAAeA,KAAf,EAAsB2K,SAAtB,EAAiC;AAC7B,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG9R,MAAM,CAAC2C,cAAnB;AAAoC;;AAChE,SAAOgP,WAAW,CAACxK,KAAZ,CAAkBA,KAAlB,EAAyB2K,SAAzB,EAAoC,IAApC,CAAP;AACH;;AACDtU,aAAA,GAAgB2J,KAAhB;;;;;;;;;;;AC/Ca;;AACb3I,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoH,SAAT,CAAmBsM,qBAAnB,EAA0CC,iBAA1C,EAA6D;AACzD,SAAOjC,WAAW,CAACtK,SAAZ,CAAsBsM,qBAAtB,EAA6CC,iBAA7C,EAAgE,IAAhE,CAAP;AACH;;AACDpW,iBAAA,GAAoB6J,SAApB;;;;;;;;;;;ACnDa;;AACb7I,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsH,aAAT,GAAyB;AACrB,SAAOoK,WAAW,CAACpK,aAAZ,GAA4B,IAA5B,CAAP;AACH;;AACD/J,qBAAA,GAAwB+J,aAAxB;;;;;;;;;;;AC9Ca;;AACb/I,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwH,QAAT,CAAkBoM,WAAlB,EAA+BC,OAA/B,EAAwC;AACpC,SAAOnC,WAAW,CAAClK,QAAZ,CAAqBoM,WAArB,EAAkCC,OAAlC,EAA2C,IAA3C,CAAP;AACH;;AACDtW,gBAAA,GAAmBiK,QAAnB;;;;;;;;;;;ACnDa;;AACbjJ,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0H,oBAAT,CAA8BoM,OAA9B,EAAuCF,WAAvC,EAAoD;AAChD,SAAOlC,WAAW,CAAChK,oBAAZ,CAAiCoM,OAAjC,EAA0CF,WAA1C,EAAuD,IAAvD,CAAP;AACH;;AACDrW,4BAAA,GAA+BmK,oBAA/B;;;;;;;;;;;AC9Ca;;AACbnJ,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4H,uBAAT,CAAiC5M,GAAjC,EAAsC8Y,OAAtC,EAA+C;AAC3C,SAAOpC,WAAW,CAAC9J,uBAAZ,CAAoC5M,GAApC,EAAyC8Y,OAAzC,EAAkD,IAAlD,CAAP;AACH;;AACDvW,+BAAA,GAAkCqK,uBAAlC;;;;;;;;;;;ACjEa;;AACbrJ,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8H,GAAT,CAAaiM,cAAb,EAA6BC,KAA7B,EAAoCxX,QAApC,EAA8C;AAC1C,SAAOkV,WAAW,CAACuC,GAAZ,CAAgBF,cAAhB,EAAgCC,KAAhC,EAAuCxX,QAAvC,EAAiD,IAAjD,CAAP;AACH;;AACDe,WAAA,GAAcuK,GAAd;;;;;;;;;;;AClDa;;AACbvJ,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,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AAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0I,MAAT,CAAgB6K,SAAhB,EAA2Ba,OAA3B,EAAoC;AAChC,SAAO1C,WAAW,CAAChJ,MAAZ,CAAmB6K,SAAnB,EAA8Ba,OAA9B,EAAuC,IAAvC,CAAP;AACH;;AACD7W,cAAA,GAAiBmL,MAAjB;;;;;;;;;;;AC9Ca;;AACbnK,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6I,QAAT,CAAkByL,QAAlB,EAA4B;AACxB,SAAO5C,WAAW,CAAC6C,QAAZ,CAAqBD,QAArB,EAA+B,IAA/B,CAAP;AACH;;AACD/W,gBAAA,GAAmBsL,QAAnB;;;;;;;;;;;AC5Ea;;AACbtK,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+I,IAAT,CAAcwK,SAAd,EAAyBa,OAAzB,EAAkC;AAC9B,SAAO1C,WAAW,CAAC3I,IAAZ,CAAiBwK,SAAjB,EAA4Ba,OAA5B,EAAqC,IAArC,CAAP;AACH;;AACD7W,YAAA,GAAewL,IAAf;;;;;;;;;;;ACxCa;;AACbxK,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiJ,SAAT,CAAmBsK,SAAnB,EAA8Ba,OAA9B,EAAuC;AACnC,SAAO1C,WAAW,CAACzI,SAAZ,CAAsBsK,SAAtB,EAAiCa,OAAjC,EAA0C,IAA1C,CAAP;AACH;;AACD7W,iBAAA,GAAoB0L,SAApB;;;;;;;;;;;ACxCa;;AACb1K,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmJ,KAAT,GAAiB;AACb,MAAIqL,IAAI,GAAG,EAAX;;AACA,OAAK,IAAI1B,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC5V,MAAhC,EAAwCwW,EAAE,EAA1C,EAA8C;AAC1C0B,IAAAA,IAAI,CAAC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,SAASiK,GAAT,CAAa2I,OAAb,EAAsBwB,OAAtB,EAA+B;AAC3B,SAAO1C,WAAW,CAACzH,GAAZ,CAAgB2I,OAAhB,EAAyBwB,OAAzB,EAAkC,IAAlC,CAAP;AACH;;AACD7W,WAAA,GAAc0M,GAAd;;;;;;;;;;;ACvCa;;AACb1L,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmK,KAAT,CAAe3O,KAAf,EAAsB;AAClB,SAAOkW,WAAW,CAACvH,KAAZ,CAAkB3O,KAAlB,EAAyB,IAAzB,CAAP;AACH;;AACD+B,aAAA,GAAgB4M,KAAhB;;;;;;;;;;;AChCa;;AACb5L,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqK,WAAT,GAAuB;AACnB,SAAOqH,WAAW,CAACrH,WAAZ,GAA0B,IAA1B,CAAP;AACH;;AACD9M,mBAAA,GAAsB8M,WAAtB;;;;;;;;;;;AClDa;;AACb9L,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuK,GAAT,CAAaqK,QAAb,EAAuB;AACnB,SAAOlD,WAAW,CAACnH,GAAZ,CAAgBqK,QAAhB,EAA0B,IAA1B,CAAP;AACH;;AACDrX,WAAA,GAAcgN,GAAd;;;;;;;;;;;ACrCa;;AACbhM,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIuE,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiE,KAAT,GAAiB;AACb,MAAI4O,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC5V,MAAhC,EAAwCwW,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,WAAW,CAACC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,SAAO,KAAKI,IAAL,CAAUC,IAAV,CAAepT,MAAM,CAACkE,KAAP,CAAamP,KAAb,CAAmB,KAAK,CAAxB,EAA2B,CAAC,IAAD,EAAOlQ,MAAP,CAAc2P,WAAd,CAA3B,CAAf,CAAP;AACH;;AACDtV,aAAA,GAAgB0G,KAAhB;;;;;;;;;;;ACzDa;;AACb1F,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0K,QAAT,CAAkB2J,UAAlB,EAA8B;AAC1B,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAChH,QAAZ,CAAqB2J,UAArB,EAAiC,IAAjC,CAAP;AACH;;AACD9W,gBAAA,GAAmBmN,QAAnB;;;;;;;;;;;ACnDa;;AACbnM,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4K,QAAT,CAAkBgI,OAAlB,EAA2ByB,UAA3B,EAAuC;AACnC,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAC9G,QAAZ,CAAqBgI,OAArB,EAA8ByB,UAA9B,EAA0C,IAA1C,CAAP;AACH;;AACD9W,gBAAA,GAAmBqN,QAAnB;;;;;;;;;;;ACzDa;;AACbrM,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgL,UAAT,CAAoBsI,eAApB,EAAqCe,UAArC,EAAiD;AAC7C,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAC1G,UAAZ,CAAuBsI,eAAvB,EAAwCe,UAAxC,EAAoD,IAApD,CAAP;AACH;;AACD9W,kBAAA,GAAqByN,UAArB;;;;;;;;;;;ACzCa;;AACbzM,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkL,SAAT,CAAmB2J,WAAnB,EAAgCC,IAAhC,EAAsCT,UAAtC,EAAkD;AAC9C,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAACxG,SAAZ,CAAsB2J,WAAtB,EAAmCC,IAAnC,EAAyCT,UAAzC,EAAqD,IAArD,CAAP;AACH;;AACD9W,iBAAA,GAAoB2N,SAApB;;;;;;;;;;;ACtCa;;AACb3M,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoL,GAAT,CAAawJ,QAAb,EAAuB;AACnB,SAAOlD,WAAW,CAACtG,GAAZ,CAAgBwJ,QAAhB,EAA0B,IAA1B,CAAP;AACH;;AACDrX,WAAA,GAAc6N,GAAd;;;;;;;;;;;ACrCa;;AACb7M,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsL,SAAT,CAAmByJ,uBAAnB,EAA4CrC,QAA5C,EAAsD;AAClD,SAAOhB,WAAW,CAACpG,SAAZ,CAAsByJ,uBAAtB,EAA+CrC,QAA/C,EAAyD,IAAzD,CAAP;AACH;;AACDnV,iBAAA,GAAoB+N,SAApB;;;;;;;;;;;ACrGa;;AACb/M,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwL,SAAT,CAAmBqG,SAAnB,EAA8B3K,KAA9B,EAAqC;AACjC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,CAAR;AAAY;;AACpC,SAAOwK,WAAW,CAAClG,SAAZ,CAAsBqG,SAAtB,EAAiC3K,KAAjC,EAAwC,IAAxC,CAAP;AACH;;AACD3J,iBAAA,GAAoBiO,SAApB;;;;;;;;;;;ACrDa;;AACbjN,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqE,iBAAT,GAA6B;AACzB,MAAI2Q,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIlC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC5V,MAAhC,EAAwCwW,EAAE,EAA1C,EAA8C;AAC1CkC,IAAAA,WAAW,CAAClC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,SAAOpB,WAAW,CAACrN,iBAAZ,CAA8B+O,KAA9B,CAAoC,KAAK,CAAzC,EAA4C4B,WAA5C,EAAyD,IAAzD,CAAP;AACH;;AACDzX,yBAAA,GAA4B8G,iBAA5B;;;;;;;;;;;ACxEa;;AACb9F,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2L,QAAT,GAAoB;AAChB,SAAO+F,WAAW,CAAC/F,QAAZ,GAAuB,IAAvB,CAAP;AACH;;AACDpO,gBAAA,G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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwN,IAAT,CAAcqH,WAAd,EAA2BC,IAA3B,EAAiC;AAC7B,MAAI5C,SAAS,CAAC5V,MAAV,IAAoB,CAAxB,EAA2B;AACvB,WAAOoV,WAAW,CAAClE,IAAZ,CAAiBqH,WAAjB,EAA8BC,IAA9B,EAAoC,IAApC,CAAP;AACH;;AACD,SAAOpD,WAAW,CAAClE,IAAZ,CAAiBqH,WAAjB,EAA8B,IAA9B,CAAP;AACH;;AACDtX,YAAA,GAAeiQ,IAAf;;;;;;;;;;;AC/Ca;;AACbjP,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0N,aAAT,CAAuB2H,SAAvB,EAAkCC,QAAlC,EAA4C;AACxC,SAAO5D,WAAW,CAAChE,aAAZ,CAA0B2H,SAA1B,EAAqCC,QAArC,EAA+C,IAA/C,CAAP;AACH;;AACD/X,qBAAA,GAAwBmQ,aAAxB;;;;;;;;;;;AC1Da;;AACbnP,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4N,KAAT,GAAiB;AACb,SAAO8D,WAAW,CAAC9D,KAAZ,GAAoB,I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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiP,SAAT,CAAmB2D,OAAnB,EAA4B;AACxB,SAAOlB,WAAW,CAACzC,SAAZ,CAAsB2D,OAAtB,EAA+B,IAA/B,CAAP;AACH;;AACDrV,iBAAA,GAAoB0R,SAApB;;;;;;;;;;;AC7Ca;;AACb1Q,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmP,WAAT,CAAqBmE,eAArB,EAAsC;AAClC,SAAO5B,WAAW,CAACvC,WAAZ,CAAwBmE,eAAxB,EAAyC,IAAzC,CAAP;AACH;;AACD/V,mBAAA,GAAsB4R,WAAtB;;;;;;;;;;;ACzCa;;AACb5Q,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqP,IAAT,CAAc3I,KAAd,EAAqB;AACjB,SAAOgL,WAAW,CAACrC,IAAZ,CAAiB3I,KAAjB,EAAwB,IAAxB,CAAP;AACH;;AACDnJ,YAAA,GAAe8R,IAAf;;;;;;;;;;;ACvCa;;AACb9Q,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuP,QAAT,CAAkB7I,KAAlB,EAAyB;AACrB,SAAOgL,WAAW,CAACnC,QAAZ,CAAqB7I,KAArB,EAA4B,IAA5B,CAAP;AACH;;AACDnJ,gBAAA,GAAmBgS,QAAnB;;;;;;;;;;;AC1Ca;;AACbhR,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyP,SAAT,CAAmB0F,QAAnB,EAA6B;AACzB,SAAOzD,WAAW,CAACjC,SAAZ,CAAsB0F,QAAtB,EAAgC,IAAhC,CAAP;AACH;;AACD5X,iBAAA,GAAoBkS,SAApB;;;;;;;;;;;ACxCa;;AACblR,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2P,SAAT,CAAmB4D,SAAnB,EAA8B;AAC1B,SAAO7B,WAAW,CAAC/B,SAAZ,CAAsB4D,SAAtB,EAAiC,IAAjC,CAAP;AACH;;AACDhW,iBAAA,GAAoBoS,SAApB;;;;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oBgT,SAApB;;;;;;;;;;;ACda;;AACbhS,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyQ,OAAT,GAAmB;AACf,SAAOiB,WAAW,CAACjB,OAAZ,GAAsB,IAAtB,CAAP;AACH;;AACDlT,eAAA,GAAkBkT,OAAlB;;;;;;;;;;;AC7Ba;;AACblS,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2Q,MAAT,CAAgBkF,gBAAhB,EAAkC;AAC9B,SAAOnE,WAAW,CAACf,MAAZ,CAAmBkF,gBAAnB,EAAqC,IAArC,CAAP;AACH;;AACDtY,cAAA,GAAiBoT,MAAjB;;;;;;;;;;;AC1Ca;;AACbpS,8CAA6C;AAAE/C,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIkW,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6Q,WAAT,CAAqBiF,UAArB,EAAiCC,gBAAjC,EAAmD;AAC/C,MAAIA,gBAAgB,KAAK,KAA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","sources":["./src/app/cache.service.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dictionary/dictionary.component.html","./src/app/dashboard/dictionary/dictionary.component.ts","./src/app/dashboard/index.ts","./src/app/dashboard/index/index.component.ts","./src/app/dashboard/index/index.component.html","./src/app/dashboard/novel/novel.component.html","./src/app/dashboard/novel/novel.component.ts","./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs-compat/Rx.js","./node_modules/rxjs-compat/add/observable/bindCallback.js","./node_modules/rxjs-compat/add/observable/bindNodeCallback.js","./node_modules/rxjs-compat/add/observable/combineLatest.js","./node_modules/rxjs-compat/add/observable/concat.js","./node_modules/rxjs-compat/add/observable/defer.js","./node_modules/rxjs-compat/add/observable/dom/ajax.js","./node_modules/rxjs-compat/add/observable/dom/webSocket.js","./node_modules/rxjs-compat/add/observable/empty.js","./node_modules/rxjs-compat/add/observable/forkJoin.js","./node_modules/rxjs-compat/add/observable/from.js","./node_modules/rxjs-compat/add/observable/fromEvent.js","./node_modules/rxjs-compat/add/observable/fromEventPattern.js","./node_modules/rxjs-compat/add/observable/fromPromise.js","./node_modules/rxjs-compat/add/observable/generate.js","./node_modules/rxjs-compat/add/observable/if.js","./node_modules/rxjs-compat/add/observable/interval.js","./node_modules/rxjs-compat/add/observable/merge.js","./node_modules/rxjs-compat/add/observable/never.js","./node_modules/rxjs-compat/add/observable/of.js","./node_modules/rxjs-compat/add/observable/onErrorResumeNext.js","./node_modules/rxjs-compat/add/observable/pairs.js","./node_modules/rxjs-compat/add/observable/race.js","./node_modules/rxjs-compat/add/observable/range.js","./node_modules/rxjs-compat/add/observable/throw.js","./node_modules/rxjs-compat/add/observable/timer.js","./node_modules/rxjs-compat/add/observable/using.js","./node_modules/rxjs-compat/add/observable/zip.js","./node_modules/rxjs-compat/add/operator/audit.js","./node_modules/rxjs-compat/add/operator/auditTime.js","./node_modules/rxjs-compat/add/operator/buffer.js","./node_modules/rxjs-compat/add/operator/bufferCount.js","./node_modules/rxjs-compat/add/operator/bufferTime.js","./node_modules/rxjs-compat/add/operator/bufferToggle.js","./node_modules/rxjs-compat/add/operator/bufferWhen.js","./node_modules/rxjs-compat/add/operator/catch.js","./node_modules/rxjs-compat/add/operator/combineAll.js","./node_modules/rxjs-compat/add/operator/combineLatest.js","./node_modules/rxjs-compat/add/operator/concat.js","./node_modules/rxjs-compat/add/operator/concatAll.js","./node_modules/rxjs-compat/add/operator/concatMap.js","./node_modules/rxjs-compat/add/operator/concatMapTo.js","./node_modules/rxjs-compat/add/operator/count.js","./node_modules/rxjs-compat/add/operator/debounce.js","./node_modules/rxjs-compat/add/operator/debounceTime.js","./node_modules/rxjs-compat/add/operator/defaultIfEmpty.js","./node_modules/rxjs-compat/add/operator/delay.js","./node_modules/rxjs-compat/add/operator/delayWhen.js","./node_modules/rxjs-compat/add/operator/dematerialize.js","./node_modules/rxjs-compat/add/operator/distinct.js","./node_modules/rxjs-compat/add/operator/distinctUntilChanged.js","./node_modules/rxjs-compat/add/operator/distinctUntilKeyChanged.js","./node_modules/rxjs-compat/add/operator/do.js","./node_modules/rxjs-compat/add/operator/elementAt.js","./node_modules/rxjs-compat/add/operator/every.js","./node_modules/rxjs-compat/add/operator/exhaust.js","./node_modules/rxjs-compat/add/operator/exhaustMap.js","./node_modules/rxjs-compat/add/operator/expand.js","./node_modules/rxjs-compat/add/operator/filter.js","./node_modules/rxjs-compat/add/operator/finally.js","./node_modules/rxjs-compat/add/operator/find.js","./node_modules/rxjs-compat/add/operator/findIndex.js","./node_modules/rxjs-compat/add/operator/first.js","./node_modules/rxjs-compat/add/operator/groupBy.js","./node_modules/rxjs-compat/add/operator/ignoreElements.js","./node_modules/rxjs-compat/add/operator/isEmpty.js","./node_modules/rxjs-compat/add/operator/last.js","./node_modules/rxjs-compat/add/operator/let.js","./node_modules/rxjs-compat/add/operator/map.js","./node_modules/rxjs-compat/add/operator/mapTo.js","./node_modules/rxjs-compat/add/operator/materialize.js","./node_modules/rxjs-compat/add/operator/max.js","./node_modules/rxjs-compat/add/operator/merge.js","./node_modules/rxjs-compat/add/operator/mergeAll.js","./node_modules/rxjs-compat/add/operator/mergeMap.js","./node_modules/rxjs-compat/add/operator/mergeMapTo.js","./node_modules/rxjs-compat/add/operator/mergeScan.js","./node_modules/rxjs-compat/add/operator/min.js","./node_modules/rxjs-compat/add/operator/multicast.js","./node_modules/rxjs-compat/add/operator/observeOn.js","./node_modules/rxjs-compat/add/operator/onErrorResumeNext.js","./node_modules/rxjs-compat/add/operator/pairwise.js","./node_modules/rxjs-compat/add/operator/partition.js","./node_modules/rxjs-compat/add/operator/pluck.js","./node_modules/rxjs-compat/add/operator/publish.js","./node_modules/rxjs-compat/add/operator/publishBehavior.js","./node_modules/rxjs-compat/add/operator/publishLast.js","./node_modules/rxjs-compat/add/operator/publishReplay.js","./node_modules/rxjs-compat/add/operator/race.js","./node_modules/rxjs-compat/add/operator/reduce.js","./node_modules/rxjs-compat/add/operator/repeat.js","./node_modules/rxjs-compat/add/operator/repeatWhen.js","./node_modules/rxjs-compat/add/operator/retry.js","./node_modules/rxjs-compat/add/operator/retryWhen.js","./node_modules/rxjs-compat/add/operator/sample.js","./node_modules/rxjs-compat/add/operator/sampleTime.js","./node_modules/rxjs-compat/add/operator/scan.js","./node_modules/rxjs-compat/add/operator/sequenceEqual.js","./node_modules/rxjs-compat/add/operator/share.js","./node_modules/rxjs-compat/add/operator/shareReplay.js","./node_modules/rxjs-compat/add/operator/single.js","./node_modules/rxjs-compat/add/operator/skip.js","./node_modules/rxjs-compat/add/operator/skipLast.js","./node_modules/rxjs-compat/add/operator/skipUntil.js","./node_modules/rxjs-compat/add/operator/skipWhile.js","./node_modules/rxjs-compat/add/operator/startWith.js","./node_modules/rxjs-compat/add/operator/subscribeOn.js","./node_modules/rxjs-compat/add/operator/switch.js","./node_modules/rxjs-compat/add/operator/switchMap.js","./node_modules/rxjs-compat/add/operator/switchMapTo.js","./node_modules/rxjs-compat/add/operator/take.js","./node_modules/rxjs-compat/add/operator/takeLast.js","./node_modules/rxjs-compat/add/operator/takeUntil.js","./node_modules/rxjs-compat/add/operator/takeWhile.js","./node_modules/rxjs-compat/add/operator/throttle.js","./node_modules/rxjs-compat/add/operator/throttleTime.js","./node_modules/rxjs-compat/add/operator/timeInterval.js","./node_modules/rxjs-compat/add/operator/timeout.js","./node_modules/rxjs-compat/add/operator/timeoutWith.js","./node_modules/rxjs-compat/add/operator/timestamp.js","./node_modules/rxjs-compat/add/operator/toArray.js","./node_modules/rxjs-compat/add/operator/toPromise.js","./node_modules/rxjs-compat/add/operator/window.js","./node_modules/rxjs-compat/add/operator/windowCount.js","./node_modules/rxjs-compat/add/operator/windowTime.js","./node_modules/rxjs-compat/add/operator/windowToggle.js","./node_modules/rxjs-compat/add/operator/windowWhen.js","./node_modules/rxjs-compat/add/operator/withLatestFrom.js","./node_modules/rxjs-compat/add/operator/zip.js","./node_modules/rxjs-compat/add/operator/zipAll.js","./node_modules/rxjs-compat/operator/audit.js","./node_modules/rxjs-compat/operator/auditTime.js","./node_modules/rxjs-compat/operator/buffer.js","./node_modules/rxjs-compat/operator/bufferCount.js","./node_modules/rxjs-compat/operator/bufferTime.js","./node_modules/rxjs-compat/operator/bufferToggle.js","./node_modules/rxjs-compat/operator/bufferWhen.js","./node_modules/rxjs-compat/operator/catch.js","./node_modules/rxjs-compat/operator/combineAll.js","./node_modules/rxjs-compat/operator/combineLatest.js","./node_modules/rxjs-compat/operator/concat.js","./node_modules/rxjs-compat/operator/concatAll.js","./node_modules/rxjs-compat/operator/concatMap.js","./node_modules/rxjs-compat/operator/concatMapTo.js","./node_modules/rxjs-compat/operator/count.js","./node_modules/rxjs-compat/operator/debounce.js","./node_modules/rxjs-compat/operator/debounceTime.js","./node_modules/rxjs-compat/operator/defaultIfEmpty.js","./node_modules/rxjs-compat/operator/delay.js","./node_modules/rxjs-compat/operator/delayWhen.js","./node_modules/rxjs-compat/operator/dematerialize.js","./node_modules/rxjs-compat/operator/distinct.js","./node_modules/rxjs-compat/operator/distinctUntilChanged.js","./node_modules/rxjs-compat/operator/distinctUntilKeyChanged.js","./node_modules/rxjs-compat/operator/do.js","./node_modules/rxjs-compat/operator/elementAt.js","./node_modules/rxjs-compat/operator/every.js","./node_modules/rxjs-compat/operator/exhaust.js","./node_modules/rxjs-compat/operator/exhaustMap.js","./node_modules/rxjs-compat/operator/expand.js","./node_modules/rxjs-compat/operator/filter.js","./node_modules/rxjs-compat/operator/finally.js","./node_modules/rxjs-compat/operator/find.js","./node_modules/rxjs-compat/operator/findIndex.js","./node_modules/rxjs-compat/operator/first.js","./node_modules/rxjs-compat/operator/groupBy.js","./node_modules/rxjs-compat/operator/ignoreElements.js","./node_modules/rxjs-compat/operator/isEmpty.js","./node_modules/rxjs-compat/operator/last.js","./node_modules/rxjs-compat/operator/let.js","./node_modules/rxjs-compat/operator/map.js","./node_modules/rxjs-compat/operator/mapTo.js","./node_modules/rxjs-compat/operator/materialize.js","./node_modules/rxjs-compat/operator/max.js","./node_modules/rxjs-compat/operator/merge.js","./node_modules/rxjs-compat/operator/mergeAll.js","./node_modules/rxjs-compat/operator/mergeMap.js","./node_modules/rxjs-compat/operator/mergeMapTo.js","./node_modules/rxjs-compat/operator/mergeScan.js","./node_modules/rxjs-compat/operator/min.js","./node_modules/rxjs-compat/operator/multicast.js","./node_modules/rxjs-compat/operator/observeOn.js","./node_modules/rxjs-compat/operator/onErrorResumeNext.js","./node_modules/rxjs-compat/operator/pairwise.js","./node_modules/rxjs-compat/operator/partition.js","./node_modules/rxjs-compat/operator/pluck.js","./node_modules/rxjs-compat/operator/publish.js","./node_modules/rxjs-compat/operator/publishBehavior.js","./node_modules/rxjs-compat/operator/publishLast.js","./node_modules/rxjs-compat/operator/publishReplay.js","./node_modules/rxjs-compat/operator/race.js","./node_modules/rxjs-compat/operator/reduce.js","./node_modules/rxjs-compat/operator/repeat.js","./node_modules/rxjs-compat/operator/repeatWhen.js","./node_modules/rxjs-compat/operator/retry.js","./node_modules/rxjs-compat/operator/retryWhen.js","./node_modules/rxjs-compat/operator/sample.js","./node_modules/rxjs-compat/operator/sampleTime.js","./node_modules/rxjs-compat/operator/scan.js","./node_modules/rxjs-compat/operator/sequenceEqual.js","./node_modules/rxjs-compat/operator/share.js","./node_modules/rxjs-compat/operator/shareReplay.js","./node_modules/rxjs-compat/operator/single.js","./node_modules/rxjs-compat/operator/skip.js","./node_modules/rxjs-compat/operator/skipLast.js","./node_modules/rxjs-compat/operator/skipUntil.js","./node_modules/rxjs-compat/operator/skipWhile.js","./node_modules/rxjs-compat/operator/startWith.js","./node_modules/rxjs-compat/operator/subscribeOn.js","./node_modules/rxjs-compat/operator/switch.js","./node_modules/rxjs-compat/operator/switchMap.js","./node_modules/rxjs-compat/operator/switchMapTo.js","./node_modules/rxjs-compat/operator/take.js","./node_modules/rxjs-compat/operator/takeLast.js","./node_modules/rxjs-compat/operator/takeUntil.js","./node_modules/rxjs-compat/operator/takeWhile.js","./node_modules/rxjs-compat/operator/throttle.js","./node_modules/rxjs-compat/operator/throttleTime.js","./node_modules/rxjs-compat/operator/timeInterval.js","./node_modules/rxjs-compat/operator/timeout.js","./node_modules/rxjs-compat/operator/timeoutWith.js","./node_modules/rxjs-compat/operator/timestamp.js","./node_modules/rxjs-compat/operator/toArray.js","./node_modules/rxjs-compat/operator/window.js","./node_modules/rxjs-compat/operator/windowCount.js","./node_modules/rxjs-compat/operator/windowTime.js","./node_modules/rxjs-compat/operator/windowToggle.js","./node_modules/rxjs-compat/operator/windowWhen.js","./node_modules/rxjs-compat/operator/withLatestFrom.js","./node_modules/rxjs-compat/operator/zip.js","./node_modules/rxjs-compat/operator/zipAll.js","./node_modules/rxjs/Observable.js","./node_modules/rxjs/Rx.js","./node_modules/rxjs/_esm2015/ajax/index.js","./node_modules/rxjs/_esm2015/index.js","./node_modules/rxjs/_esm2015/internal-compatibility/index.js","./node_modules/rxjs/_esm2015/internal/AsyncSubject.js","./node_modules/rxjs/_esm2015/internal/Notification.js","./node_modules/rxjs/_esm2015/internal/ReplaySubject.js","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js","./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js","./node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js","./node_modules/rxjs/_esm2015/internal/observable/dom/WebSocketSubject.js","./node_modules/rxjs/_esm2015/internal/observable/dom/ajax.js","./node_modules/rxjs/_esm2015/internal/observable/dom/webSocket.js","./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js","./node_modules/rxjs/_esm2015/internal/observable/fromIterable.js","./node_modules/rxjs/_esm2015/internal/observable/fromPromise.js","./node_modules/rxjs/_esm2015/internal/observable/generate.js","./node_modules/rxjs/_esm2015/internal/observable/iif.js","./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/observable/never.js","./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/observable/pairs.js","./node_modules/rxjs/_esm2015/internal/observable/partition.js","./node_modules/rxjs/_esm2015/internal/observable/race.js","./node_modules/rxjs/_esm2015/internal/observable/range.js","./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./node_modules/rxjs/_esm2015/internal/observable/using.js","./node_modules/rxjs/_esm2015/internal/observable/zip.js","./node_modules/rxjs/_esm2015/internal/operators/audit.js","./node_modules/rxjs/_esm2015/internal/operators/auditTime.js","./node_modules/rxjs/_esm2015/internal/operators/buffer.js","./node_modules/rxjs/_esm2015/internal/operators/bufferCount.js","./node_modules/rxjs/_esm2015/internal/operators/bufferTime.js","./node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js","./node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js","./node_modules/rxjs/_esm2015/internal/operators/combineAll.js","./node_modules/rxjs/_esm2015/internal/operators/combineLatest.js","./node_modules/rxjs/_esm2015/internal/operators/concat.js","./node_modules/rxjs/_esm2015/internal/operators/concatMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/count.js","./node_modules/rxjs/_esm2015/internal/operators/debounce.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/delayWhen.js","./node_modules/rxjs/_esm2015/internal/operators/dematerialize.js","./node_modules/rxjs/_esm2015/internal/operators/distinct.js","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./node_modules/rxjs/_esm2015/internal/operators/elementAt.js","./node_modules/rxjs/_esm2015/internal/operators/endWith.js","./node_modules/rxjs/_esm2015/internal/operators/every.js","./node_modules/rxjs/_esm2015/internal/operators/exhaust.js","./node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js","./node_modules/rxjs/_esm2015/internal/operators/expand.js","./node_modules/rxjs/_esm2015/internal/operators/find.js","./node_modules/rxjs/_esm2015/internal/operators/findIndex.js","./node_modules/rxjs/_esm2015/internal/operators/groupBy.js","./node_modules/rxjs/_esm2015/internal/operators/ignoreElements.js","./node_modules/rxjs/_esm2015/internal/operators/isEmpty.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/operators/materialize.js","./node_modules/rxjs/_esm2015/internal/operators/max.js","./node_modules/rxjs/_esm2015/internal/operators/merge.js","./node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/mergeScan.js","./node_modules/rxjs/_esm2015/internal/operators/min.js","./node_modules/rxjs/_esm2015/internal/operators/observeOn.js","./node_modules/rxjs/_esm2015/internal/operators/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/operators/pairwise.js","./node_modules/rxjs/_esm2015/internal/operators/partition.js","./node_modules/rxjs/_esm2015/internal/operators/pluck.js","./node_modules/rxjs/_esm2015/internal/operators/publish.js","./node_modules/rxjs/_esm2015/internal/operators/publishBehavior.js","./node_modules/rxjs/_esm2015/internal/operators/publishLast.js","./node_modules/rxjs/_esm2015/internal/operators/publishReplay.js","./node_modules/rxjs/_esm2015/internal/operators/race.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/rxjs/_esm2015/internal/operators/repeat.js","./node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js","./node_modules/rxjs/_esm2015/internal/operators/retry.js","./node_modules/rxjs/_esm2015/internal/operators/retryWhen.js","./node_modules/rxjs/_esm2015/internal/operators/sample.js","./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js","./node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js","./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","./node_modules/rxjs/_esm2015/internal/operators/single.js","./node_modules/rxjs/_esm2015/internal/operators/skip.js","./node_modules/rxjs/_esm2015/internal/operators/skipLast.js","./node_modules/rxjs/_esm2015/internal/operators/skipUntil.js","./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js","./node_modules/rxjs/_esm2015/internal/operators/switchAll.js","./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./node_modules/rxjs/_esm2015/internal/operators/timeInterval.js","./node_modules/rxjs/_esm2015/internal/operators/timeout.js","./node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js","./node_modules/rxjs/_esm2015/internal/operators/timestamp.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./node_modules/rxjs/_esm2015/internal/operators/window.js","./node_modules/rxjs/_esm2015/internal/operators/windowCount.js","./node_modules/rxjs/_esm2015/internal/operators/windowTime.js","./node_modules/rxjs/_esm2015/internal/operators/windowToggle.js","./node_modules/rxjs/_esm2015/internal/operators/windowWhen.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/rxjs/_esm2015/internal/operators/zip.js","./node_modules/rxjs/_esm2015/internal/operators/zipAll.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","./node_modules/rxjs/_esm2015/internal/scheduler/asap.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/scheduler/queue.js","./node_modules/rxjs/_esm2015/internal/testing/ColdObservable.js","./node_modules/rxjs/_esm2015/internal/testing/HotObservable.js","./node_modules/rxjs/_esm2015/internal/testing/SubscriptionLog.js","./node_modules/rxjs/_esm2015/internal/testing/SubscriptionLoggable.js","./node_modules/rxjs/_esm2015/internal/testing/TestScheduler.js","./node_modules/rxjs/_esm2015/internal/util/Immediate.js","./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js","./node_modules/rxjs/_esm2015/internal/util/applyMixins.js","./node_modules/rxjs/_esm2015/internal/util/errorObject.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/util/isObservable.js","./node_modules/rxjs/_esm2015/internal/util/not.js","./node_modules/rxjs/_esm2015/internal/util/root.js","./node_modules/rxjs/_esm2015/internal/util/tryCatch.js","./node_modules/rxjs/_esm2015/operators/index.js","./node_modules/rxjs/_esm2015/testing/index.js","./node_modules/rxjs/_esm2015/webSocket/index.js"],"sourcesContent":["// https://hackernoon.com/angular-simple-in-memory-cache-service-on-the-ui-with-rxjs-77f167387e39\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Rx';\nimport { throwError } from 'rxjs';\n\ninterface CacheContent {\n  expiry: number;\n  value: any;\n}\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Cache Service is an observables based in-memory cache implementation\n * Keeps track of in-flight observables and sets a default expiry for cached values\n * @export\n * @class CacheService\n */\nexport class CacheService {\n  private cache: Map<string, CacheContent> = new Map<string, CacheContent>();\n  private inFlightObservables: Map<string, Subject<any>> = new Map<string, Subject<any>>();\n  readonly DEFAULT_MAX_AGE: number = 300000;\n\n  /**\n   * Gets the value from cache if the key is provided.\n   * If no value exists in cache, then check if the same call exists\n   * in flight, if so return the subject. If not create a new\n   * Subject inFlightObservable and return the source observable.\n   */\n  get(key: string, fallback?: Observable<any>, maxAge?: number): Observable<any> | Subject<any> {\n\n    if (this.hasValidCachedValue(key)) {\n      console.log(`%cGetting from cache ${key}`, 'color: green');\n      return Observable.of(this.cache.get(key).value);\n    }\n\n    if (!maxAge) {\n      maxAge = this.DEFAULT_MAX_AGE;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key);\n    } else if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n      console.log(`%c Calling api for ${key}`, 'color: purple');\n      return fallback.do((value) => { this.set(key, value, maxAge); });\n    } else {\n      return throwError('Requested key is not available in Cache');\n    }\n\n  }\n\n  /**\n   * Sets the value with key in the cache\n   * Notifies all observers of the new value\n   */\n  set(key: string, value: any, maxAge: number = this.DEFAULT_MAX_AGE): void {\n    this.cache.set(key, { value, expiry: Date.now() + maxAge });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  /**\n   * Checks if the a key exists in cache\n   */\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  /**\n   * Cleans cache\n   */\n  delete(key: string): boolean {\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Publishes the value to all observers of the given\n   * in progress observables if observers exist.\n   */\n  private notifyInFlightObservers(key: string, value: any): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n      if (observersCount) {\n        console.log(`%cNotifying ${inFlight.observers.length} flight subscribers for ${key}`, 'color: blue');\n        inFlight.next(value);\n      }\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  /**\n   * Checks if the key exists and   has not expired.\n   */\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry < Date.now()) {\n        this.cache.delete(key);\n        return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexComponent } from './index/index.component';\n\nconst routes: Routes = [\n  {\n    path: ''\n    , component: IndexComponent\n    , data: { title: 'Dashboard', breadcrumb: 'Dashboard' }\n  },\n  {\n    path: '**'\n    , redirectTo: ''\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { IndexComponent } from './index/index.component';\nimport { DictionaryComponent } from './dictionary/dictionary.component';\nimport { NovelComponent } from './novel/novel.component';\n\n@NgModule({\n  declarations: [IndexComponent, DictionaryComponent, NovelComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n","<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Language</th>\n\t\t\t\t<th style=\"width: 200px;\"># of Categories</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let dictionary of dictionaries\" >\n\t\t\t\t<tr [routerLink]=\"['/dictionary/', dictionary.id]\">\n                    <td>{{ dictionary.name }}</td>\n                    <td>{{ dictionary.countCategories() }}</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { Dictionary } from '../../_models/dictionary';\nimport { Novel } from '../../_models/novel';\n\n\n@Component({\n  selector: 'app-dashboard-dictionary',\n  templateUrl: './dictionary.component.html',\n  styleUrls: ['./dictionary.component.scss']\n})\nexport class DictionaryComponent implements OnInit {\n\n  dictionaries: Dictionary[] = [];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.dictionaryList();\n  }\n  private dictionaryList() {\n    this.api.Dictionary.getAll()\n      .then(dictionaries => {\n        if (dictionaries) {\n          this.dictionaries = Object.values(dictionaries);\n        }\n      }, err => {\n        console.log(err);\n      });\n  }\n\n}\n","export * from './dashboard.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"subarea\">\n\t<h1 [routerLink]=\"['/novel']\">Novel</h1>\n    <app-dashboard-novel></app-dashboard-novel>\n</div>\n<div class=\"subarea\">\n\t<h1 [routerLink]=\"['/dictionary']\">Dictionary</h1>\n    <app-dashboard-dictionary></app-dashboard-dictionary>\n</div>","<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Code</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Chapters</th>\n\t\t\t\t<th>Finished</th>\n\t\t\t\t<th>R18</th>\n\t\t\t\t<th>Update Chapters</th>\n\t\t\t\t<th>Edit</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let novel of novels\" >\n\t\t\t\t<tr title=\"{{ novel.nameOriginal }}\" *ngIf=\"novel.show\">\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.code }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameCustom }}</td>\n\t\t\t\t\t<td>{{ novel.numberChapters }}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ng-container *ngIf=\"novel.completed == 1; then success else danger\"></ng-container>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ng-container *ngIf=\"novel.flagR18 == 1; then success else danger\"></ng-container>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td (click)=\"updateChapters(novel.id)\"><a>Update</a></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/edit', novel.id]\"><i class=\"fas fa-edit\"></i></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t\t<ng-template #success>\n\t\t\t\t<a class='button is-success'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t\t<ng-template #danger>\n\t\t\t\t<a class='button is-danger'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api';\nimport { CacheService } from '../../cache.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Novel } from '../../_models/novel';\n\n@Component({\n  selector: 'app-dashboard-novel',\n  templateUrl: './novel.component.html',\n  styleUrls: ['./novel.component.scss']\n})\nexport class NovelComponent implements OnInit {\n\n  novels: Novel[] = [];\n\n  constructor(\n    private api: ApiService,\n    private cacheService: CacheService\n  ) { }\n\n  ngOnInit() {\n    // Get list of novels\n    this.api.Novel.getAll()\n      .then(novels => {\n        // Always take from the updated api.Novels()\n        this.novels = Object.values(novels);\n      }, err => {\n        console.log(err);\n      }\n      );\n  }\n\n  updateChapters(idNovel: number) {\n    this.api.Chapter.autoUpdate({ idNovel })\n      .then(res => {\n        console.log('updateChapters', res);\n        /**\n         * Auto update on the list too\n         */\n        this.api.Novel.get({ id: idNovel })\n          .then((novel) => {\n            let updated = false;\n            for (const i in this.novels) {\n              if (this.novels[i].id === novel.id) {\n                this.novels[i] = novel;\n                updated = true;\n                break;\n              }\n            }\n            if (!updated) {\n              console.log('The novel was not found on the list? Impossible...');\n            }\n\n          });\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\nexports.Subject = rxjs_1.Subject;\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nexports.AnonymousSubject = internal_compatibility_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar internal_compatibility_2 = require(\"rxjs/internal-compatibility\");\nexports.config = internal_compatibility_2.config;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire(\"./add/observable/bindCallback\");\nrequire(\"./add/observable/bindNodeCallback\");\nrequire(\"./add/observable/combineLatest\");\nrequire(\"./add/observable/concat\");\nrequire(\"./add/observable/defer\");\nrequire(\"./add/observable/empty\");\nrequire(\"./add/observable/forkJoin\");\nrequire(\"./add/observable/from\");\nrequire(\"./add/observable/fromEvent\");\nrequire(\"./add/observable/fromEventPattern\");\nrequire(\"./add/observable/fromPromise\");\nrequire(\"./add/observable/generate\");\nrequire(\"./add/observable/if\");\nrequire(\"./add/observable/interval\");\nrequire(\"./add/observable/merge\");\nrequire(\"./add/observable/race\");\nrequire(\"./add/observable/never\");\nrequire(\"./add/observable/of\");\nrequire(\"./add/observable/onErrorResumeNext\");\nrequire(\"./add/observable/pairs\");\nrequire(\"./add/observable/range\");\nrequire(\"./add/observable/using\");\nrequire(\"./add/observable/throw\");\nrequire(\"./add/observable/timer\");\nrequire(\"./add/observable/zip\");\n//dom\nrequire(\"./add/observable/dom/ajax\");\nrequire(\"./add/observable/dom/webSocket\");\n//internal/operators\nrequire(\"./add/operator/buffer\");\nrequire(\"./add/operator/bufferCount\");\nrequire(\"./add/operator/bufferTime\");\nrequire(\"./add/operator/bufferToggle\");\nrequire(\"./add/operator/bufferWhen\");\nrequire(\"./add/operator/catch\");\nrequire(\"./add/operator/combineAll\");\nrequire(\"./add/operator/combineLatest\");\nrequire(\"./add/operator/concat\");\nrequire(\"./add/operator/concatAll\");\nrequire(\"./add/operator/concatMap\");\nrequire(\"./add/operator/concatMapTo\");\nrequire(\"./add/operator/count\");\nrequire(\"./add/operator/dematerialize\");\nrequire(\"./add/operator/debounce\");\nrequire(\"./add/operator/debounceTime\");\nrequire(\"./add/operator/defaultIfEmpty\");\nrequire(\"./add/operator/delay\");\nrequire(\"./add/operator/delayWhen\");\nrequire(\"./add/operator/distinct\");\nrequire(\"./add/operator/distinctUntilChanged\");\nrequire(\"./add/operator/distinctUntilKeyChanged\");\nrequire(\"./add/operator/do\");\nrequire(\"./add/operator/exhaust\");\nrequire(\"./add/operator/exhaustMap\");\nrequire(\"./add/operator/expand\");\nrequire(\"./add/operator/elementAt\");\nrequire(\"./add/operator/filter\");\nrequire(\"./add/operator/finally\");\nrequire(\"./add/operator/find\");\nrequire(\"./add/operator/findIndex\");\nrequire(\"./add/operator/first\");\nrequire(\"./add/operator/groupBy\");\nrequire(\"./add/operator/ignoreElements\");\nrequire(\"./add/operator/isEmpty\");\nrequire(\"./add/operator/audit\");\nrequire(\"./add/operator/auditTime\");\nrequire(\"./add/operator/last\");\nrequire(\"./add/operator/let\");\nrequire(\"./add/operator/every\");\nrequire(\"./add/operator/map\");\nrequire(\"./add/operator/mapTo\");\nrequire(\"./add/operator/materialize\");\nrequire(\"./add/operator/max\");\nrequire(\"./add/operator/merge\");\nrequire(\"./add/operator/mergeAll\");\nrequire(\"./add/operator/mergeMap\");\nrequire(\"./add/operator/mergeMapTo\");\nrequire(\"./add/operator/mergeScan\");\nrequire(\"./add/operator/min\");\nrequire(\"./add/operator/multicast\");\nrequire(\"./add/operator/observeOn\");\nrequire(\"./add/operator/onErrorResumeNext\");\nrequire(\"./add/operator/pairwise\");\nrequire(\"./add/operator/partition\");\nrequire(\"./add/operator/pluck\");\nrequire(\"./add/operator/publish\");\nrequire(\"./add/operator/publishBehavior\");\nrequire(\"./add/operator/publishReplay\");\nrequire(\"./add/operator/publishLast\");\nrequire(\"./add/operator/race\");\nrequire(\"./add/operator/reduce\");\nrequire(\"./add/operator/repeat\");\nrequire(\"./add/operator/repeatWhen\");\nrequire(\"./add/operator/retry\");\nrequire(\"./add/operator/retryWhen\");\nrequire(\"./add/operator/sample\");\nrequire(\"./add/operator/sampleTime\");\nrequire(\"./add/operator/scan\");\nrequire(\"./add/operator/sequenceEqual\");\nrequire(\"./add/operator/share\");\nrequire(\"./add/operator/shareReplay\");\nrequire(\"./add/operator/single\");\nrequire(\"./add/operator/skip\");\nrequire(\"./add/operator/skipLast\");\nrequire(\"./add/operator/skipUntil\");\nrequire(\"./add/operator/skipWhile\");\nrequire(\"./add/operator/startWith\");\nrequire(\"./add/operator/subscribeOn\");\nrequire(\"./add/operator/switch\");\nrequire(\"./add/operator/switchMap\");\nrequire(\"./add/operator/switchMapTo\");\nrequire(\"./add/operator/take\");\nrequire(\"./add/operator/takeLast\");\nrequire(\"./add/operator/takeUntil\");\nrequire(\"./add/operator/takeWhile\");\nrequire(\"./add/operator/throttle\");\nrequire(\"./add/operator/throttleTime\");\nrequire(\"./add/operator/timeInterval\");\nrequire(\"./add/operator/timeout\");\nrequire(\"./add/operator/timeoutWith\");\nrequire(\"./add/operator/timestamp\");\nrequire(\"./add/operator/toArray\");\nrequire(\"./add/operator/toPromise\");\nrequire(\"./add/operator/window\");\nrequire(\"./add/operator/windowCount\");\nrequire(\"./add/operator/windowTime\");\nrequire(\"./add/operator/windowToggle\");\nrequire(\"./add/operator/windowWhen\");\nrequire(\"./add/operator/withLatestFrom\");\nrequire(\"./add/operator/zip\");\nrequire(\"./add/operator/zipAll\");\n/* tslint:disable:no-unused-variable */\nvar rxjs_2 = require(\"rxjs\");\nexports.Subscription = rxjs_2.Subscription;\nexports.ReplaySubject = rxjs_2.ReplaySubject;\nexports.BehaviorSubject = rxjs_2.BehaviorSubject;\nexports.Notification = rxjs_2.Notification;\nexports.EmptyError = rxjs_2.EmptyError;\nexports.ArgumentOutOfRangeError = rxjs_2.ArgumentOutOfRangeError;\nexports.ObjectUnsubscribedError = rxjs_2.ObjectUnsubscribedError;\nexports.UnsubscriptionError = rxjs_2.UnsubscriptionError;\nexports.pipe = rxjs_2.pipe;\nvar testing_1 = require(\"rxjs/testing\");\nexports.TestScheduler = testing_1.TestScheduler;\nvar rxjs_3 = require(\"rxjs\");\nexports.Subscriber = rxjs_3.Subscriber;\nexports.AsyncSubject = rxjs_3.AsyncSubject;\nexports.ConnectableObservable = rxjs_3.ConnectableObservable;\nexports.TimeoutError = rxjs_3.TimeoutError;\nexports.VirtualTimeScheduler = rxjs_3.VirtualTimeScheduler;\nvar ajax_1 = require(\"rxjs/ajax\");\nexports.AjaxResponse = ajax_1.AjaxResponse;\nexports.AjaxError = ajax_1.AjaxError;\nexports.AjaxTimeoutError = ajax_1.AjaxTimeoutError;\nvar rxjs_4 = require(\"rxjs\");\nvar internal_compatibility_3 = require(\"rxjs/internal-compatibility\");\nvar internal_compatibility_4 = require(\"rxjs/internal-compatibility\");\nexports.TimeInterval = internal_compatibility_4.TimeInterval;\nexports.Timestamp = internal_compatibility_4.Timestamp;\nvar _operators = require(\"rxjs/operators\");\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which is the same\n * queue used for promises. Basically after the current job, but before the next\n * job. Use this for asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: rxjs_4.asapScheduler,\n    queue: rxjs_4.queueScheduler,\n    animationFrame: rxjs_4.animationFrameScheduler,\n    async: rxjs_4.asyncScheduler\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: internal_compatibility_3.rxSubscriber,\n    observable: internal_compatibility_3.observable,\n    iterator: internal_compatibility_3.iterator\n};\nexports.Symbol = Symbol;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindCallback = rxjs_1.bindCallback;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindNodeCallback = rxjs_1.bindNodeCallback;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.combineLatest = rxjs_1.combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.concat = rxjs_1.concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.defer = rxjs_1.defer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ajax_1 = require(\"rxjs/ajax\");\nrxjs_1.Observable.ajax = ajax_1.ajax;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar webSocket_1 = require(\"rxjs/webSocket\");\nrxjs_1.Observable.webSocket = webSocket_1.webSocket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.empty = rxjs_1.empty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.forkJoin = rxjs_1.forkJoin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.from = rxjs_1.from;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEvent = rxjs_1.fromEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEventPattern = rxjs_1.fromEventPattern;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromPromise = rxjs_1.from;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.generate = rxjs_1.generate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.if = rxjs_1.iif;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.interval = rxjs_1.interval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.merge = rxjs_1.merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nfunction staticNever() {\n    return rxjs_1.NEVER;\n}\nexports.staticNever = staticNever;\nrxjs_1.Observable.never = staticNever;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.of = rxjs_1.of;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.onErrorResumeNext = rxjs_1.onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.pairs = rxjs_1.pairs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.race = rxjs_1.race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.range = rxjs_1.range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.throw = rxjs_1.throwError;\nrxjs_1.Observable.throwError = rxjs_1.throwError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.timer = rxjs_1.timer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.using = rxjs_1.using;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.zip = rxjs_1.zip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar audit_1 = require(\"../../operator/audit\");\nrxjs_1.Observable.prototype.audit = audit_1.audit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar auditTime_1 = require(\"../../operator/auditTime\");\nrxjs_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar buffer_1 = require(\"../../operator/buffer\");\nrxjs_1.Observable.prototype.buffer = buffer_1.buffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferCount_1 = require(\"../../operator/bufferCount\");\nrxjs_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferTime_1 = require(\"../../operator/bufferTime\");\nrxjs_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferToggle_1 = require(\"../../operator/bufferToggle\");\nrxjs_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferWhen_1 = require(\"../../operator/bufferWhen\");\nrxjs_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar catch_1 = require(\"../../operator/catch\");\nrxjs_1.Observable.prototype.catch = catch_1._catch;\nrxjs_1.Observable.prototype._catch = catch_1._catch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineAll_1 = require(\"../../operator/combineAll\");\nrxjs_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineLatest_1 = require(\"../../operator/combineLatest\");\nrxjs_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concat_1 = require(\"../../operator/concat\");\nrxjs_1.Observable.prototype.concat = concat_1.concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatAll_1 = require(\"../../operator/concatAll\");\nrxjs_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMap_1 = require(\"../../operator/concatMap\");\nrxjs_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMapTo_1 = require(\"../../operator/concatMapTo\");\nrxjs_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar count_1 = require(\"../../operator/count\");\nrxjs_1.Observable.prototype.count = count_1.count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounce_1 = require(\"../../operator/debounce\");\nrxjs_1.Observable.prototype.debounce = debounce_1.debounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounceTime_1 = require(\"../../operator/debounceTime\");\nrxjs_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar defaultIfEmpty_1 = require(\"../../operator/defaultIfEmpty\");\nrxjs_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delay_1 = require(\"../../operator/delay\");\nrxjs_1.Observable.prototype.delay = delay_1.delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delayWhen_1 = require(\"../../operator/delayWhen\");\nrxjs_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar dematerialize_1 = require(\"../../operator/dematerialize\");\nrxjs_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinct_1 = require(\"../../operator/distinct\");\nrxjs_1.Observable.prototype.distinct = distinct_1.distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilChanged_1 = require(\"../../operator/distinctUntilChanged\");\nrxjs_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilKeyChanged_1 = require(\"../../operator/distinctUntilKeyChanged\");\nrxjs_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar do_1 = require(\"../../operator/do\");\nrxjs_1.Observable.prototype.do = do_1._do;\nrxjs_1.Observable.prototype._do = do_1._do;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar elementAt_1 = require(\"../../operator/elementAt\");\nrxjs_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar every_1 = require(\"../../operator/every\");\nrxjs_1.Observable.prototype.every = every_1.every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaust_1 = require(\"../../operator/exhaust\");\nrxjs_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaustMap_1 = require(\"../../operator/exhaustMap\");\nrxjs_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar expand_1 = require(\"../../operator/expand\");\nrxjs_1.Observable.prototype.expand = expand_1.expand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar filter_1 = require(\"../../operator/filter\");\nrxjs_1.Observable.prototype.filter = filter_1.filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar finally_1 = require(\"../../operator/finally\");\nrxjs_1.Observable.prototype.finally = finally_1._finally;\nrxjs_1.Observable.prototype._finally = finally_1._finally;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar find_1 = require(\"../../operator/find\");\nrxjs_1.Observable.prototype.find = find_1.find;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar findIndex_1 = require(\"../../operator/findIndex\");\nrxjs_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar first_1 = require(\"../../operator/first\");\nrxjs_1.Observable.prototype.first = first_1.first;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar groupBy_1 = require(\"../../operator/groupBy\");\nrxjs_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ignoreElements_1 = require(\"../../operator/ignoreElements\");\nrxjs_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar isEmpty_1 = require(\"../../operator/isEmpty\");\nrxjs_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar last_1 = require(\"../../operator/last\");\nrxjs_1.Observable.prototype.last = last_1.last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar let_1 = require(\"../../operator/let\");\nrxjs_1.Observable.prototype.let = let_1.letProto;\nrxjs_1.Observable.prototype.letBind = let_1.letProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar map_1 = require(\"../../operator/map\");\nrxjs_1.Observable.prototype.map = map_1.map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mapTo_1 = require(\"../../operator/mapTo\");\nrxjs_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar materialize_1 = require(\"../../operator/materialize\");\nrxjs_1.Observable.prototype.materialize = materialize_1.materialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar max_1 = require(\"../../operator/max\");\nrxjs_1.Observable.prototype.max = max_1.max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar merge_1 = require(\"../../operator/merge\");\nrxjs_1.Observable.prototype.merge = merge_1.merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeAll_1 = require(\"../../operator/mergeAll\");\nrxjs_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMap_1 = require(\"../../operator/mergeMap\");\nrxjs_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nrxjs_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMapTo_1 = require(\"../../operator/mergeMapTo\");\nrxjs_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nrxjs_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeScan_1 = require(\"../../operator/mergeScan\");\nrxjs_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar min_1 = require(\"../../operator/min\");\nrxjs_1.Observable.prototype.min = min_1.min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar multicast_1 = require(\"../../operator/multicast\");\nrxjs_1.Observable.prototype.multicast = multicast_1.multicast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar observeOn_1 = require(\"../../operator/observeOn\");\nrxjs_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar onErrorResumeNext_1 = require(\"../../operator/onErrorResumeNext\");\nrxjs_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pairwise_1 = require(\"../../operator/pairwise\");\nrxjs_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar partition_1 = require(\"../../operator/partition\");\nrxjs_1.Observable.prototype.partition = partition_1.partition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pluck_1 = require(\"../../operator/pluck\");\nrxjs_1.Observable.prototype.pluck = pluck_1.pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publish_1 = require(\"../../operator/publish\");\nrxjs_1.Observable.prototype.publish = publish_1.publish;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishBehavior_1 = require(\"../../operator/publishBehavior\");\nrxjs_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishLast_1 = require(\"../../operator/publishLast\");\nrxjs_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishReplay_1 = require(\"../../operator/publishReplay\");\nrxjs_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar race_1 = require(\"../../operator/race\");\nrxjs_1.Observable.prototype.race = race_1.race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar reduce_1 = require(\"../../operator/reduce\");\nrxjs_1.Observable.prototype.reduce = reduce_1.reduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeat_1 = require(\"../../operator/repeat\");\nrxjs_1.Observable.prototype.repeat = repeat_1.repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeatWhen_1 = require(\"../../operator/repeatWhen\");\nrxjs_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retry_1 = require(\"../../operator/retry\");\nrxjs_1.Observable.prototype.retry = retry_1.retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retryWhen_1 = require(\"../../operator/retryWhen\");\nrxjs_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sample_1 = require(\"../../operator/sample\");\nrxjs_1.Observable.prototype.sample = sample_1.sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sampleTime_1 = require(\"../../operator/sampleTime\");\nrxjs_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar scan_1 = require(\"../../operator/scan\");\nrxjs_1.Observable.prototype.scan = scan_1.scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sequenceEqual_1 = require(\"../../operator/sequenceEqual\");\nrxjs_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar share_1 = require(\"../../operator/share\");\nrxjs_1.Observable.prototype.share = share_1.share;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar shareReplay_1 = require(\"../../operator/shareReplay\");\nrxjs_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar single_1 = require(\"../../operator/single\");\nrxjs_1.Observable.prototype.single = single_1.single;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skip_1 = require(\"../../operator/skip\");\nrxjs_1.Observable.prototype.skip = skip_1.skip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipLast_1 = require(\"../../operator/skipLast\");\nrxjs_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipUntil_1 = require(\"../../operator/skipUntil\");\nrxjs_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipWhile_1 = require(\"../../operator/skipWhile\");\nrxjs_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar startWith_1 = require(\"../../operator/startWith\");\nrxjs_1.Observable.prototype.startWith = startWith_1.startWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar subscribeOn_1 = require(\"../../operator/subscribeOn\");\nrxjs_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switch_1 = require(\"../../operator/switch\");\nrxjs_1.Observable.prototype.switch = switch_1._switch;\nrxjs_1.Observable.prototype._switch = switch_1._switch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMap_1 = require(\"../../operator/switchMap\");\nrxjs_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMapTo_1 = require(\"../../operator/switchMapTo\");\nrxjs_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar take_1 = require(\"../../operator/take\");\nrxjs_1.Observable.prototype.take = take_1.take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeLast_1 = require(\"../../operator/takeLast\");\nrxjs_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeUntil_1 = require(\"../../operator/takeUntil\");\nrxjs_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeWhile_1 = require(\"../../operator/takeWhile\");\nrxjs_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttle_1 = require(\"../../operator/throttle\");\nrxjs_1.Observable.prototype.throttle = throttle_1.throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttleTime_1 = require(\"../../operator/throttleTime\");\nrxjs_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeInterval_1 = require(\"../../operator/timeInterval\");\nrxjs_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeout_1 = require(\"../../operator/timeout\");\nrxjs_1.Observable.prototype.timeout = timeout_1.timeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeoutWith_1 = require(\"../../operator/timeoutWith\");\nrxjs_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timestamp_1 = require(\"../../operator/timestamp\");\nrxjs_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar toArray_1 = require(\"../../operator/toArray\");\nrxjs_1.Observable.prototype.toArray = toArray_1.toArray;\n","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar window_1 = require(\"../../operator/window\");\nrxjs_1.Observable.prototype.window = window_1.window;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowCount_1 = require(\"../../operator/windowCount\");\nrxjs_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowTime_1 = require(\"../../operator/windowTime\");\nrxjs_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowToggle_1 = require(\"../../operator/windowToggle\");\nrxjs_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowWhen_1 = require(\"../../operator/windowWhen\");\nrxjs_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar withLatestFrom_1 = require(\"../../operator/withLatestFrom\");\nrxjs_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zip_1 = require(\"../../operator/zip\");\nrxjs_1.Observable.prototype.zip = zip_1.zipProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zipAll_1 = require(\"../../operator/zipAll\");\nrxjs_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return operators_1.audit(durationSelector)(this);\n}\nexports.audit = audit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.auditTime(duration, scheduler)(this);\n}\nexports.auditTime = auditTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return operators_1.buffer(closingNotifier)(this);\n}\nexports.buffer = buffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return operators_1.bufferCount(bufferSize, startBufferEvery)(this);\n}\nexports.bufferCount = bufferCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=asyncScheduler] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = rxjs_1.asyncScheduler;\n    if (internal_compatibility_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return operators_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nexports.bufferTime = bufferTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return operators_1.bufferToggle(openings, closingSelector)(this);\n}\nexports.bufferToggle = bufferToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return operators_1.bufferWhen(closingSelector)(this);\n}\nexports.bufferWhen = bufferWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return operators_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return operators_1.combineAll(project)(this);\n}\nexports.combineAll = combineAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && internal_compatibility_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return this.lift.call(rxjs_1.of.apply(void 0, [this].concat(observables)), new internal_compatibility_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.concat.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return operators_1.concatAll()(this);\n}\nexports.concatAll = concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project) {\n    return operators_1.concatMap(project)(this);\n}\nexports.concatMap = concatMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable) {\n    return operators_1.concatMapTo(innerObservable)(this);\n}\nexports.concatMapTo = concatMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return operators_1.count(predicate)(this);\n}\nexports.count = count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return operators_1.debounce(durationSelector)(this);\n}\nexports.debounce = debounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.debounceTime(dueTime, scheduler)(this);\n}\nexports.debounceTime = debounceTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return operators_1.defaultIfEmpty(defaultValue)(this);\n}\nexports.defaultIfEmpty = defaultIfEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=asyncScheduler] The SchedulerLike to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.delay(delay, scheduler)(this);\n}\nexports.delay = delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    return operators_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);\n}\nexports.delayWhen = delayWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return operators_1.dematerialize()(this);\n}\nexports.dematerialize = dematerialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return operators_1.distinct(keySelector, flushes)(this);\n}\nexports.distinct = distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return operators_1.distinctUntilChanged(compare, keySelector)(this);\n}\nexports.distinctUntilChanged = distinctUntilChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\n// tslint:disable-next-line:max-line-length\nfunction distinctUntilKeyChanged(key, compare) {\n    return operators_1.distinctUntilKeyChanged(key, compare)(this);\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return operators_1.tap(nextOrObserver, error, complete)(this);\n}\nexports._do = _do;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return operators_1.elementAt.apply(undefined, arguments)(this);\n}\nexports.elementAt = elementAt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return operators_1.every(predicate, thisArg)(this);\n}\nexports.every = every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n */\nfunction exhaust() {\n    return operators_1.exhaust()(this);\n}\nexports.exhaust = exhaust;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = fromEvent(document, 'click');\n * var result = clicks.pipe(exhaustMap((ev) => Rx.Observable.interval(1000).take(5)));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n */\nfunction exhaustMap(project) {\n    return operators_1.exhaustMap(project)(this);\n}\nexports.exhaustMap = exhaustMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return operators_1.expand(project, concurrent, scheduler)(this);\n}\nexports.expand = expand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return operators_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete, error or unsubscribe.\n *\n * <span class=\"informal\">Ensure a given function will be called when a stream ends, no matter why it ended.</span>\n *\n * `finally` method accepts as a single parameter a function. This function does not accept any parameters and\n * should not return anything. It will be called whenever source Observable completes, errors or is unsubscribed,\n * which makes it good candidate to perform any necessary clean up or side effects when Observable terminates,\n * no matter how or why it terminated.\n *\n * Observable returned by `finally` will simply mirror source Observable - each time it is subscribed, source\n * Observable will be subscribed underneath.\n *\n * Note that behavior of `finally` will be repeated per every subscription, so if resulting Observable has\n * many subscribers, function passed to `finally` might be potentially called multiple times.\n *\n * Remember also that `finally` differs quite a lot from passing complete or error handler to {@link subscribe}. It will\n * return an Observable which can be further chained, while `subscribe` returns Subscription, basically ending Observable\n * chain. Function passed to `finally` will be called also when consumer of resulting Observable unsubscribes from it,\n * while handlers passed to `subscribe` will not (even complete handler). But most importantly, `finally` does not start\n * an execution of source Observable, like `subscribe` does, allowing you to set up all necessary hooks before\n * passing Observable further, even without specific knowledge how or when it will be used.\n *\n *\n * @example <caption>Call finally after complete notification</caption>\n * Rx.Observable.of(1, 2, 3)\n * .finally(() => console.log('I was finalized!'))\n * .map(x => x * 2) // `finally` returns an Observable, so we still can chain operators.\n * .subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('I completed!')\n * );\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // \"I completed!\"\n * // \"I was finalized!\"\n *\n *\n *\n * @example <caption>Call finally after consumer unsubscribes</caption>\n * const o = Rx.Observable.interval(1000)\n * .finally(() => console.log('Timer stopped'));\n *\n * const subscription = o.subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('Complete!') // Will not be called, since complete handler\n * );                               // does not react to unsubscription, just to\n *                                  // complete notification sent by the Observable itself.\n *\n * setTimeout(() => subscription.unsubscribe(), 2500);\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // \"Timer stopped\" after 2.5s\n *\n * @see {@link using}\n *\n * @param {function} callback Function to be called when source terminates (completes, errors or is unsubscribed).\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @name finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return operators_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    return operators_1.find(predicate, thisArg)(this);\n}\nexports.find = find;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return operators_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {T} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.first.apply(void 0, args)(this);\n}\nexports.first = first;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return operators_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\nexports.groupBy = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return operators_1.ignoreElements()(this);\n}\nexports.ignoreElements = ignoreElements;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return operators_1.isEmpty()(this);\n}\nexports.isEmpty = isEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - The default value to use if the predicate isn't\n * satisfied, or no values were emitted (if no predicate).\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.last.apply(void 0, args)(this);\n}\nexports.last = last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return operators_1.map(project, thisArg)(this);\n}\nexports.map = map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return operators_1.mapTo(value)(this);\n}\nexports.mapTo = mapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return operators_1.materialize()(this);\n}\nexports.materialize = materialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    return operators_1.max(comparer)(this);\n}\nexports.max = max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.merge.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeAll(concurrent)(this);\n}\nexports.mergeAll = mergeAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMap(project, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMapTo(innerObservable, concurrent)(this);\n}\nexports.mergeMapTo = mergeMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeScan(accumulator, seed, concurrent)(this);\n}\nexports.mergeScan = mergeScan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    return operators_1.min(comparer)(this);\n}\nexports.min = min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return operators_1.multicast(subjectOrSubjectFactory, selector)(this);\n}\nexports.multicast = multicast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.observeOn(scheduler, delay)(this);\n}\nexports.observeOn = observeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    return operators_1.onErrorResumeNext.apply(void 0, nextSources)(this);\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return operators_1.pairwise()(this);\n}\nexports.pairwise = pairwise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return operators_1.partition(predicate, thisArg)(this);\n}\nexports.partition = partition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    return operators_1.pluck.apply(void 0, properties)(this);\n}\nexports.pluck = pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return operators_1.publish(selector)(this);\n}\nexports.publish = publish;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return operators_1.publishBehavior(value)(this);\n}\nexports.publishBehavior = publishBehavior;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    //TODO(benlesh): correct type-flow through here.\n    return operators_1.publishLast()(this);\n}\nexports.publishLast = publishLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return operators_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\nexports.publishReplay = publishReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return operators_1.race.apply(void 0, observables)(this);\n}\nexports.race = race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return operators_1.reduce(accumulator, seed)(this);\n    }\n    return operators_1.reduce(accumulator)(this);\n}\nexports.reduce = reduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.repeat(count)(this);\n}\nexports.repeat = repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return operators_1.repeatWhen(notifier)(this);\n}\nexports.repeatWhen = repeatWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.retry(count)(this);\n}\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return operators_1.retryWhen(notifier)(this);\n}\nexports.retryWhen = retryWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return operators_1.sample(notifier)(this);\n}\nexports.sample = sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.sampleTime(period, scheduler)(this);\n}\nexports.sampleTime = sampleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return operators_1.scan(accumulator, seed)(this);\n    }\n    return operators_1.scan(accumulator)(this);\n}\nexports.scan = scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return operators_1.sequenceEqual(compareTo, comparor)(this);\n}\nexports.sequenceEqual = sequenceEqual;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return operators_1.share()(this);\n}\nexports.share = share;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        return operators_1.shareReplay(configOrBufferSize)(this);\n    }\n    return operators_1.shareReplay(configOrBufferSize, windowTime, scheduler)(this);\n}\nexports.shareReplay = shareReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return operators_1.single(predicate)(this);\n}\nexports.single = single;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return operators_1.skip(count)(this);\n}\nexports.skip = skip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return operators_1.skipLast(count)(this);\n}\nexports.skipLast = skipLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return operators_1.skipUntil(notifier)(this);\n}\nexports.skipUntil = skipUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return operators_1.skipWhile(predicate)(this);\n}\nexports.skipWhile = skipWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return operators_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.subscribeOn(scheduler, delay)(this);\n}\nexports.subscribeOn = subscribeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return operators_1.switchAll()(this);\n}\nexports._switch = _switch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project) {\n    return operators_1.switchMap(project)(this);\n}\nexports.switchMap = switchMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable) {\n    return operators_1.switchMapTo(innerObservable)(this);\n}\nexports.switchMapTo = switchMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return operators_1.take(count)(this);\n}\nexports.take = take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return operators_1.takeLast(count)(this);\n}\nexports.takeLast = takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return operators_1.takeUntil(notifier)(this);\n}\nexports.takeUntil = takeUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return operators_1.takeWhile(predicate)(this);\n}\nexports.takeWhile = takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttle(durationSelector, config)(this);\n}\nexports.throttle = throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttleTime(duration, scheduler, config)(this);\n}\nexports.throttleTime = throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeInterval(scheduler)(this);\n}\nexports.timeInterval = timeInterval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeout(due, scheduler)(this);\n}\nexports.timeout = timeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeoutWith(due, withObservable, scheduler)(this);\n}\nexports.timeoutWith = timeoutWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timestamp(scheduler)(this);\n}\nexports.timestamp = timestamp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return operators_1.toArray()(this);\n}\nexports.toArray = toArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return operators_1.window(windowBoundaries)(this);\n}\nexports.window = window;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return operators_1.windowCount(windowSize, startWindowEvery)(this);\n}\nexports.windowCount = windowCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\nfunction windowTime(windowTimeSpan) {\n    var scheduler = rxjs_1.asyncScheduler;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (internal_compatibility_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (internal_compatibility_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (internal_compatibility_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return operators_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\nexports.windowTime = windowTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return operators_1.windowToggle(openings, closingSelector)(this);\n}\nexports.windowToggle = windowToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return operators_1.windowWhen(closingSelector)(this);\n}\nexports.windowWhen = windowWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.withLatestFrom.apply(void 0, args)(this);\n}\nexports.withLatestFrom = withLatestFrom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.zip.apply(void 0, [this].concat(observables)));\n}\nexports.zipProto = zipProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return operators_1.zipAll(project)(this);\n}\nexports.zipAll = zipAll;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat\"));\n","export { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n","export { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification, NotificationKind } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n","export { config } from '../internal/config';\nexport { InnerSubscriber } from '../internal/InnerSubscriber';\nexport { OuterSubscriber } from '../internal/OuterSubscriber';\nexport { Scheduler } from '../internal/Scheduler';\nexport { AnonymousSubject } from '../internal/Subject';\nexport { SubjectSubscription } from '../internal/SubjectSubscription';\nexport { Subscriber } from '../internal/Subscriber';\nexport { fromPromise } from '../internal/observable/fromPromise';\nexport { fromIterable } from '../internal/observable/fromIterable';\nexport { ajax } from '../internal/observable/dom/ajax';\nexport { webSocket } from '../internal/observable/dom/webSocket';\nexport { ajaxGet, ajaxPost, ajaxDelete, ajaxPut, ajaxPatch, ajaxGetJSON, AjaxObservable, AjaxSubscriber, AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\nexport { CombineLatestOperator } from '../internal/observable/combineLatest';\nexport { dispatch } from '../internal/observable/range';\nexport { SubscribeOnObservable } from '../internal/observable/SubscribeOnObservable';\nexport { Timestamp } from '../internal/operators/timestamp';\nexport { TimeInterval } from '../internal/operators/timeInterval';\nexport { GroupedObservable } from '../internal/operators/groupBy';\nexport { defaultThrottleConfig } from '../internal/operators/throttle';\nexport { rxSubscriber } from '../internal/symbol/rxSubscriber';\nexport { iterator } from '../internal/symbol/iterator';\nexport { observable } from '../internal/symbol/observable';\nexport { ArgumentOutOfRangeError } from '../internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from '../internal/util/EmptyError';\nexport { Immediate } from '../internal/util/Immediate';\nexport { ObjectUnsubscribedError } from '../internal/util/ObjectUnsubscribedError';\nexport { TimeoutError } from '../internal/util/TimeoutError';\nexport { UnsubscriptionError } from '../internal/util/UnsubscriptionError';\nexport { applyMixins } from '../internal/util/applyMixins';\nexport { errorObject } from '../internal/util/errorObject';\nexport { hostReportError } from '../internal/util/hostReportError';\nexport { identity } from '../internal/util/identity';\nexport { isArray } from '../internal/util/isArray';\nexport { isArrayLike } from '../internal/util/isArrayLike';\nexport { isDate } from '../internal/util/isDate';\nexport { isFunction } from '../internal/util/isFunction';\nexport { isIterable } from '../internal/util/isIterable';\nexport { isNumeric } from '../internal/util/isNumeric';\nexport { isObject } from '../internal/util/isObject';\nexport { isInteropObservable as isObservable } from '../internal/util/isInteropObservable';\nexport { isPromise } from '../internal/util/isPromise';\nexport { isScheduler } from '../internal/util/isScheduler';\nexport { noop } from '../internal/util/noop';\nexport { not } from '../internal/util/not';\nexport { pipe } from '../internal/util/pipe';\nexport { root } from '../internal/util/root';\nexport { subscribeTo } from '../internal/util/subscribeTo';\nexport { subscribeToArray } from '../internal/util/subscribeToArray';\nexport { subscribeToIterable } from '../internal/util/subscribeToIterable';\nexport { subscribeToObservable } from '../internal/util/subscribeToObservable';\nexport { subscribeToPromise } from '../internal/util/subscribeToPromise';\nexport { subscribeToResult } from '../internal/util/subscribeToResult';\nexport { toSubscriber } from '../internal/util/toSubscriber';\nexport { tryCatch } from '../internal/util/tryCatch';\n","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n","import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nconst DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: (e) => JSON.parse(e.data),\n    serializer: (value) => JSON.stringify(value),\n};\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nexport class WebSocketSubject extends AnonymousSubject {\n    constructor(urlConfigOrSource, destination) {\n        super();\n        if (urlConfigOrSource instanceof Observable) {\n            this.destination = destination;\n            this.source = urlConfigOrSource;\n        }\n        else {\n            const config = this._config = Object.assign({}, DEFAULT_WEBSOCKET_CONFIG);\n            this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (let key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject();\n        }\n    }\n    lift(operator) {\n        const sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    }\n    _resetState() {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    }\n    multiplex(subMsg, unsubMsg, messageFilter) {\n        const self = this;\n        return new Observable((observer) => {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            const subscription = self.subscribe(x => {\n                try {\n                    if (messageFilter(x)) {\n                        observer.next(x);\n                    }\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n            }, err => observer.error(err), () => observer.complete());\n            return () => {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    }\n    _connectSocket() {\n        const { WebSocketCtor, protocol, url, binaryType } = this._config;\n        const observer = this._output;\n        let socket = null;\n        try {\n            socket = protocol ?\n                new WebSocketCtor(url, protocol) :\n                new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        const subscription = new Subscription(() => {\n            this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = (e) => {\n            const { _socket } = this;\n            if (!_socket) {\n                socket.close();\n                this._resetState();\n                return;\n            }\n            const { openObserver } = this._config;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            const queue = this.destination;\n            this.destination = Subscriber.create((x) => {\n                if (socket.readyState === 1) {\n                    try {\n                        const { serializer } = this._config;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        this.destination.error(e);\n                    }\n                }\n            }, (e) => {\n                const { closingObserver } = this._config;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                this._resetState();\n            }, () => {\n                const { closingObserver } = this._config;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(this.destination));\n            }\n        };\n        socket.onerror = (e) => {\n            this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = (e) => {\n            this._resetState();\n            const { closeObserver } = this._config;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = (e) => {\n            try {\n                const { deserializer } = this._config;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(() => {\n            const { _socket } = this;\n            if (this._output.observers.length === 0) {\n                if (_socket && _socket.readyState === 1) {\n                    _socket.close();\n                }\n                this._resetState();\n            }\n        });\n        return subscriber;\n    }\n    unsubscribe() {\n        const { _socket } = this;\n        if (_socket && _socket.readyState === 1) {\n            _socket.close();\n        }\n        this._resetState();\n        super.unsubscribe();\n    }\n}\n","import { AjaxObservable } from './AjaxObservable';\nexport const ajax = (() => AjaxObservable.create)();\n","import { WebSocketSubject } from './WebSocketSubject';\nexport function webSocket(urlConfigOrSource) {\n    return new WebSocketSubject(urlConfigOrSource);\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = (() => Object.prototype.toString)();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n","import { Observable } from '../Observable';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return scheduleIterable(input, scheduler);\n    }\n}\n","import { Observable } from '../Observable';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nimport { schedulePromise } from '../scheduled/schedulePromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return schedulePromise(input, scheduler);\n    }\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n","import { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { Observable } from '../Observable';\nexport function partition(source, predicate, thisArg) {\n    return [\n        filter(predicate, thisArg)(new Observable(subscribeTo(source))),\n        filter(not(predicate, thisArg))(new Observable(subscribeTo(source)))\n    ];\n}\n","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                const observable = observables[i];\n                const subscription = subscribeToResult(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n","import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass AuditSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            let duration;\n            try {\n                const { durationSelector } = this;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = undefined;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = undefined;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext() {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nclass BufferOperator {\n    constructor(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n}\nclass BufferSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingNotifier) {\n        super(destination);\n        this.buffer = [];\n        this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    notifyNext() {\n        const buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n","import { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nexport function bufferTime(bufferTimeSpan) {\n    let length = arguments.length;\n    let scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    let bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    let maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nclass BufferTimeOperator {\n    constructor(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    }\n}\nclass Context {\n    constructor() {\n        this.buffer = [];\n    }\n}\nclass BufferTimeSubscriber extends Subscriber {\n    constructor(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        super(destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        const context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            const closeState = { subscriber: this, context };\n            const creationState = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        let filledBufferContext;\n        for (let i = 0; i < len; i++) {\n            const context = contexts[i];\n            const buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    }\n    _error(err) {\n        this.contexts.length = 0;\n        super._error(err);\n    }\n    _complete() {\n        const { contexts, destination } = this;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.contexts = null;\n    }\n    onBufferFull(context) {\n        this.closeContext(context);\n        const closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            const bufferTimeSpan = this.bufferTimeSpan;\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    openContext() {\n        const context = new Context();\n        this.contexts.push(context);\n        return context;\n    }\n    closeContext(context) {\n        this.destination.next(context.buffer);\n        const contexts = this.contexts;\n        const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    }\n}\nfunction dispatchBufferTimeSpanOnly(state) {\n    const subscriber = state.subscriber;\n    const prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n    const context = subscriber.openContext();\n    const action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    const { subscriber, context } = arg;\n    subscriber.closeContext(context);\n}\n","import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n","import { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass BufferWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.buffer = undefined;\n        this.subscribing = false;\n    }\n    notifyNext() {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return (source) => source.lift(new CombineLatestOperator(project));\n}\n","import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import { concat as concatStatic } from '../observable/concat';\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { concatMap } from './concatMap';\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(() => innerObservable, resultSelector);\n}\n","import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function debounce(durationSelector) {\n    return (source) => source.lift(new DebounceOperator(durationSelector));\n}\nclass DebounceOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass DebounceSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        try {\n            const result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.emitValue();\n        this.destination.complete();\n    }\n    _tryNext(value, duration) {\n        let subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            const value = this.value;\n            const subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = undefined;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = undefined;\n            this.hasValue = false;\n            super._next(value);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nclass DeMaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    }\n}\nclass DeMaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        value.observe(this.destination);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue\n        ? defaultIfEmpty(defaultValue)\n        : throwIfEmpty(() => new ArgumentOutOfRangeError()));\n}\n","import { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith(...array) {\n    return (source) => concat(source, of(...array));\n}\n","import { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return (source) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\nclass EveryOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n}\nclass EverySubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    notifyComplete(everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    }\n    _next(value) {\n        let result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\nclass SwitchFirstSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n","import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhaustMapOperator(project));\n}\nclass ExhaustMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\nclass ExhaustMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\nexport class ExpandSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                const { project } = this;\n                const result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    const state = { subscriber: this, result, value, index };\n                    const destination = this.destination;\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        const destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this._next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return (source) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\nexport class FindValueOperator {\n    constructor(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    call(observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n}\nexport class FindValueSubscriber extends Subscriber {\n    constructor(destination, predicate, source, yieldIndex, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    notifyComplete(value) {\n        const destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    }\n    _next(value) {\n        const { predicate, thisArg } = this;\n        const index = this.index++;\n        try {\n            const result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n}\n","import { FindValueOperator } from '../operators/find';\nexport function findIndex(predicate, thisArg) {\n    return (source) => source.lift(new FindValueOperator(predicate, source, true, thisArg));\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nclass IgnoreElementsOperator {\n    call(subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    }\n}\nclass IgnoreElementsSubscriber extends Subscriber {\n    _next(unused) {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nclass MaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    }\n}\nclass MaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        this.destination.next(Notification.createNext(value));\n    }\n    _error(err) {\n        const destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    }\n    _complete() {\n        const destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    }\n}\n","import { reduce } from './reduce';\nexport function max(comparer) {\n    const max = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) > 0 ? x : y\n        : (x, y) => x > y ? x : y;\n    return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent = Number.POSITIVE_INFINITY) {\n    return (source) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexport class MergeScanOperator {\n    constructor(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n}\nexport class MergeScanSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, accumulator, acc, concurrent) {\n        super(destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            const index = this.index++;\n            const destination = this.destination;\n            let ish;\n            try {\n                const { accumulator } = this;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _innerSub(ish) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        const { destination } = this;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n}\n","import { reduce } from './reduce';\nexport function min(comparer) {\n    const min = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) < 0 ? x : y\n        : (x, y) => x < y ? x : y;\n    return reduce(min);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n","import { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext(...nextSources) {\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return (source) => source.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexport function onErrorResumeNextStatic(...nextSources) {\n    let source = undefined;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nclass OnErrorResumeNextOperator {\n    constructor(nextSources) {\n        this.nextSources = nextSources;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n}\nclass OnErrorResumeNextSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, nextSources) {\n        super(destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    notifyError() {\n        this.subscribeToNextSource();\n    }\n    notifyComplete() {\n        this.subscribeToNextSource();\n    }\n    _error(err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    _complete() {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    subscribeToNextSource() {\n        const next = this.nextSources.shift();\n        if (!!next) {\n            const innerSubscriber = new SimpleInnerSubscriber(this);\n            const destination = this.destination;\n            destination.add(innerSubscriber);\n            const innerSubscription = innerSubscribe(next, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                destination.add(innerSubscription);\n            }\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        let pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nexport function partition(predicate, thisArg) {\n    return (source) => [\n        filter(predicate, thisArg)(source),\n        filter(not(predicate, thisArg))(source)\n    ];\n}\n","import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\nexport function publish(selector) {\n    return selector ?\n        multicast(() => new Subject(), selector) :\n        multicast(new Subject());\n}\n","import { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nexport function publishBehavior(value) {\n    return (source) => multicast(new BehaviorSubject(value))(source);\n}\n","import { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return (source) => multicast(new AsyncSubject())(source);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    const subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return (source) => multicast(() => subject, selector)(source);\n}\n","import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n","import { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count = -1) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nclass RepeatOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RepeatSubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.complete();\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext() {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete() {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    notifyNext() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n        return subscription;\n    }\n}\nclass SampleSubscriber extends SimpleOuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n","import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparator) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    }\n    checkValues() {\n        const { _a, _b, comparator } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n    completeB() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.completeB();\n        this.unsubscribe();\n    }\n}\n","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler,\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler, }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        let innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next(value) {\n                    subject.next(value);\n                },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n            if (isComplete) {\n                subscription = undefined;\n            }\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            innerSub = undefined;\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n","import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n    return (source) => source.lift(new SkipLastOperator(count));\n}\nclass SkipLastOperator {\n    constructor(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    }\n}\nclass SkipLastSubscriber extends Subscriber {\n    constructor(destination, _skipCount) {\n        super(destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    _next(value) {\n        const skipCount = this._skipCount;\n        const count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            const currentIndex = count % skipCount;\n            const ring = this._ring;\n            const oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    }\n}\n","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\nclass SkipUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        this.add(innerSubscriber);\n        this.innerSubscription = innerSubscriber;\n        const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            this.add(innerSubscription);\n            this.innerSubscription = innerSubscription;\n        }\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext() {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n","import { switchMap } from './switchMap';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n","import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n    return (source) => defer(() => {\n        return source.pipe(scan(({ current }, value) => ({ value, current: scheduler.now(), last: current }), { current: scheduler.now(), value: undefined, last: undefined }), map(({ current, last, value }) => new TimeInterval(value, current - last)));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n","import { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\nexport function timeout(due, scheduler = async) {\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function timeoutWith(due, withObservable, scheduler = async) {\n    return (source) => {\n        let absoluteTimeout = isDate(due);\n        let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nclass TimeoutWithOperator {\n    constructor(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n}\nclass TimeoutWithSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        super(destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.scheduleTimeout();\n    }\n    static dispatchTimeout(subscriber) {\n        const { withObservable } = subscriber;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n    }\n    scheduleTimeout() {\n        const { action } = this;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    }\n    _next(value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        super._next(value);\n    }\n    _unsubscribe() {\n        this.action = undefined;\n        this.scheduler = null;\n        this.withObservable = null;\n    }\n}\n","import { async } from '../scheduler/async';\nimport { map } from './map';\nexport function timestamp(scheduler = async) {\n    return map((value) => new Timestamp(value, scheduler.now()));\n}\nexport class Timestamp {\n    constructor(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n}\n","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext() {\n        this.openWindow();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete() {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery = 0) {\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nclass WindowCountOperator {\n    constructor(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    }\n}\nclass WindowCountSubscriber extends Subscriber {\n    constructor(destination, windowSize, startWindowEvery) {\n        super(destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    _next(value) {\n        const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        const destination = this.destination;\n        const windowSize = this.windowSize;\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        const c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            const window = new Subject();\n            windows.push(window);\n            destination.next(window);\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.count = 0;\n        this.windows = null;\n    }\n}\n","import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return (source) => source.lift(new WindowToggleOperator(openings, closingSelector));\n}\nclass WindowToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass WindowToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    _next(value) {\n        const { contexts } = this;\n        if (contexts) {\n            const len = contexts.length;\n            for (let i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    }\n    _error(err) {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        super._error(err);\n    }\n    _complete() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            let closingNotifier;\n            try {\n                const { closingSelector } = this;\n                closingNotifier = closingSelector(innerValue);\n            }\n            catch (e) {\n                return this.error(e);\n            }\n            const window = new Subject();\n            const subscription = new Subscription();\n            const context = { window, subscription };\n            this.contexts.push(context);\n            const innerSubscription = subscribeToResult(this, closingNotifier, context);\n            if (innerSubscription.closed) {\n                this.closeWindow(this.contexts.length - 1);\n            }\n            else {\n                innerSubscription.context = context;\n                subscription.add(innerSubscription);\n            }\n            this.destination.next(window);\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    }\n    notifyError(err) {\n        this.error(err);\n    }\n    notifyComplete(inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    }\n    closeWindow(index) {\n        if (index === -1) {\n            return;\n        }\n        const { contexts } = this;\n        const context = contexts[index];\n        const { window, subscription } = context;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    }\n}\n","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","import { zip as zipStatic } from '../observable/zip';\nexport function zip(...observables) {\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic(source, ...observables));\n    };\n}\n","import { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return (source) => source.lift(new ZipOperator(project));\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class ColdObservable extends Observable {\n    constructor(messages, scheduler) {\n        super(function (subscriber) {\n            const observable = this;\n            const index = observable.logSubscribedFrame();\n            const subscription = new Subscription();\n            subscription.add(new Subscription(() => {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscription;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    scheduleMessages(subscriber) {\n        const messagesLength = this.messages.length;\n        for (let i = 0; i < messagesLength; i++) {\n            const message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(({ message, subscriber }) => { message.notification.observe(subscriber); }, message.frame, { message, subscriber }));\n        }\n    }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        const subscription = new Subscription();\n        subscription.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(super._subscribe(subscriber));\n        return subscription;\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (() => {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n","export class SubscriptionLog {\n    constructor(subscribedFrame, unsubscribedFrame = Number.POSITIVE_INFINITY) {\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n}\n","import { SubscriptionLog } from './SubscriptionLog';\nexport class SubscriptionLoggable {\n    constructor() {\n        this.subscriptions = [];\n    }\n    logSubscribedFrame() {\n        this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    }\n    logUnsubscribedFrame(index) {\n        const subscriptionLogs = this.subscriptions;\n        const oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    }\n}\n","import { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nimport { AsyncScheduler } from '../scheduler/AsyncScheduler';\nconst defaultMaxFrame = 750;\nexport class TestScheduler extends VirtualTimeScheduler {\n    constructor(assertDeepEqual) {\n        super(VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n        this.runMode = false;\n    }\n    createTime(marbles) {\n        const indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    }\n    createColdObservable(marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        const cold = new ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    }\n    createHotObservable(marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        const subject = new HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    }\n    materializeInnerObservable(observable, outerFrame) {\n        const messages = [];\n        observable.subscribe((value) => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createNext(value) });\n        }, (err) => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createError(err) });\n        }, () => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createComplete() });\n        });\n        return messages;\n    }\n    expectObservable(observable, subscriptionMarbles = null) {\n        const actual = [];\n        const flushTest = { actual, ready: false };\n        const subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n        const subscriptionFrame = subscriptionParsed.subscribedFrame === Number.POSITIVE_INFINITY ?\n            0 : subscriptionParsed.subscribedFrame;\n        const unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n        let subscription;\n        this.schedule(() => {\n            subscription = observable.subscribe(x => {\n                let value = x;\n                if (x instanceof Observable) {\n                    value = this.materializeInnerObservable(value, this.frame);\n                }\n                actual.push({ frame: this.frame, notification: Notification.createNext(value) });\n            }, (err) => {\n                actual.push({ frame: this.frame, notification: Notification.createError(err) });\n            }, () => {\n                actual.push({ frame: this.frame, notification: Notification.createComplete() });\n            });\n        }, subscriptionFrame);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        const { runMode } = this;\n        return {\n            toBe(marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n            }\n        };\n    }\n    expectSubscriptions(actualSubscriptionLogs) {\n        const flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        const { runMode } = this;\n        return {\n            toBe(marbles) {\n                const marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(marbles => TestScheduler.parseMarblesAsSubscriptions(marbles, runMode));\n            }\n        };\n    }\n    flush() {\n        const hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        super.flush();\n        this.flushTests = this.flushTests.filter(test => {\n            if (test.ready) {\n                this.assertDeepEqual(test.actual, test.expected);\n                return false;\n            }\n            return true;\n        });\n    }\n    static parseMarblesAsSubscriptions(marbles, runMode = false) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        const len = marbles.length;\n        let groupStart = -1;\n        let subscriptionFrame = Number.POSITIVE_INFINITY;\n        let unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        let frame = 0;\n        for (let i = 0; i < len; i++) {\n            let nextFrame = frame;\n            const advanceFrameBy = (count) => {\n                nextFrame += count * this.frameTimeFactor;\n            };\n            const c = marbles[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    advanceFrameBy(1);\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            const buffer = marbles.slice(i);\n                            const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                const duration = parseFloat(match[1]);\n                                const unit = match[2];\n                                let durationInMs;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n            frame = nextFrame;\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    }\n    static parseMarbles(marbles, values, errorValue, materializeInnerObservables = false, runMode = false) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        const len = marbles.length;\n        const testMessages = [];\n        const subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n        let frame = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        const getValue = typeof values !== 'object' ?\n            (x) => x :\n            (x) => {\n                if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        let groupStart = -1;\n        for (let i = 0; i < len; i++) {\n            let nextFrame = frame;\n            const advanceFrameBy = (count) => {\n                nextFrame += count * this.frameTimeFactor;\n            };\n            let notification;\n            const c = marbles[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '|':\n                    notification = Notification.createComplete();\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    advanceFrameBy(1);\n                    break;\n                case '#':\n                    notification = Notification.createError(errorValue || 'error');\n                    advanceFrameBy(1);\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            const buffer = marbles.slice(i);\n                            const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                const duration = parseFloat(match[1]);\n                                const unit = match[2];\n                                let durationInMs;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    notification = Notification.createNext(getValue(c));\n                    advanceFrameBy(1);\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n            }\n            frame = nextFrame;\n        }\n        return testMessages;\n    }\n    run(callback) {\n        const prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n        const prevMaxFrames = this.maxFrames;\n        TestScheduler.frameTimeFactor = 1;\n        this.maxFrames = Number.POSITIVE_INFINITY;\n        this.runMode = true;\n        AsyncScheduler.delegate = this;\n        const helpers = {\n            cold: this.createColdObservable.bind(this),\n            hot: this.createHotObservable.bind(this),\n            flush: this.flush.bind(this),\n            expectObservable: this.expectObservable.bind(this),\n            expectSubscriptions: this.expectSubscriptions.bind(this),\n        };\n        try {\n            const ret = callback(helpers);\n            this.flush();\n            return ret;\n        }\n        finally {\n            TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n            this.maxFrames = prevMaxFrames;\n            this.runMode = false;\n            AsyncScheduler.delegate = undefined;\n        }\n    }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","const TimeoutErrorImpl = (() => {\n    function TimeoutErrorImpl() {\n        Error.call(this);\n        this.message = 'Timeout has occurred';\n        this.name = 'TimeoutError';\n        return this;\n    }\n    TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n    return TimeoutErrorImpl;\n})();\nexport const TimeoutError = TimeoutErrorImpl;\n","export function applyMixins(derivedCtor, baseCtors) {\n    for (let i = 0, len = baseCtors.length; i < len; i++) {\n        const baseCtor = baseCtors[i];\n        const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            const name = propertyKeys[j];\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        }\n    }\n}\n","export const errorObject = { e: {} };\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n","const __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root = __window || __global || __self;\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n","import { errorObject } from './errorObject';\nlet tryCatchTarget;\nfunction tryCatcher() {\n    errorObject.e = undefined;\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n    finally {\n        tryCatchTarget = undefined;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n","export { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap, flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","export { TestScheduler } from '../internal/testing/TestScheduler';\n","export { webSocket as webSocket } from '../internal/observable/dom/webSocket';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\n"],"names":["Observable","Subject","throwError","CacheService","constructor","Map","get","key","fallback","maxAge","hasValidCachedValue","console","log","of","cache","value","DEFAULT_MAX_AGE","inFlightObservables","has","set","do","expiry","Date","now","notifyInFlightObservers","delete","inFlight","observersCount","observers","length","next","complete","factory","providedIn","RouterModule","IndexComponent","routes","path","component","data","title","breadcrumb","redirectTo","DashboardRoutingModule","forChild","imports","exports","CommonModule","DictionaryComponent","NovelComponent","DashboardModule","declarations","i0","router","route","api","ngOnInit","dictionaryList","Dictionary","getAll","then","dictionaries","Object","values","err","selectors","decls","vars","consts","template","ctx_r9","_r1","_r3","cacheService","Novel","novels","updateChapters","idNovel","Chapter","autoUpdate","res","id","novel","updated","i","defineProperty","rxjs_1","require","internal_compatibility_1","AnonymousSubject","internal_compatibility_2","config","rxjs_2","Subscription","ReplaySubject","BehaviorSubject","Notification","EmptyError","ArgumentOutOfRangeError","ObjectUnsubscribedError","UnsubscriptionError","pipe","testing_1","TestScheduler","rxjs_3","Subscriber","AsyncSubject","ConnectableObservable","TimeoutError","VirtualTimeScheduler","ajax_1","AjaxResponse","AjaxError","AjaxTimeoutError","rxjs_4","internal_compatibility_3","internal_compatibility_4","TimeInterval","Timestamp","_operators","operators","Scheduler","asap","asapScheduler","queue","queueScheduler","animationFrame","animationFrameScheduler","async","asyncScheduler","Symbol","rxSubscriber","observable","iterator","bindCallback","bindNodeCallback","combineLatest","concat","defer","ajax","webSocket_1","webSocket","empty","forkJoin","from","fromEvent","fromEventPattern","fromPromise","generate","if","iif","interval","merge","staticNever","NEVER","never","onErrorResumeNext","pairs","race","range","throw","timer","using","zip","audit_1","prototype","audit","auditTime_1","auditTime","buffer_1","buffer","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","catch_1","catch","_catch","combineAll_1","combineAll","combineLatest_1","concat_1","concatAll_1","concatAll","concatMap_1","concatMap","concatMapTo_1","concatMapTo","count_1","count","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delay","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinct","distinctUntilChanged_1","distinctUntilChanged","distinctUntilKeyChanged_1","distinctUntilKeyChanged","do_1","_do","elementAt_1","elementAt","every_1","every","exhaust_1","exhaust","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","filter","finally_1","finally","_finally","find_1","find","findIndex_1","findIndex","first_1","first","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","last","let_1","let","letProto","letBind","map_1","map","mapTo_1","mapTo","materialize_1","materialize","max_1","max","merge_1","mergeAll_1","mergeAll","mergeMap_1","mergeMap","flatMap","mergeMapTo_1","flatMapTo","mergeMapTo","mergeScan_1","mergeScan","min_1","min","multicast_1","multicast","observeOn_1","observeOn","onErrorResumeNext_1","pairwise_1","pairwise","partition_1","partition","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","race_1","reduce_1","reduce","repeat_1","repeat","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","shareReplay_1","shareReplay","single_1","single","skip_1","skip","skipLast_1","skipLast","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switch_1","switch","_switch","switchMap_1","switchMap","switchMapTo_1","switchMapTo","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","throttle_1","throttle","throttleTime_1","throttleTime","timeInterval_1","timeInterval","timeout_1","timeout","timeoutWith_1","timeoutWith","timestamp_1","timestamp","toArray_1","toArray","window_1","window","windowCount_1","windowCount","windowTime_1","windowTime","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zip_1","zipProto","zipAll_1","zipAll","operators_1","durationSelector","duration","scheduler","closingNotifier","bufferSize","startBufferEvery","bufferTimeSpan","arguments","isScheduler","bufferCreationInterval","maxBufferSize","Number","POSITIVE_INFINITY","openings","closingSelector","selector","catchError","project","observables","_i","pop","isArray","slice","lift","call","apply","CombineLatestOperator","innerObservable","predicate","dueTime","defaultValue","delayDurationSelector","subscriptionDelay","keySelector","flushes","compare","nextOrObserver","error","tap","index","undefined","thisArg","concurrent","callback","finalize","args","elementSelector","subjectSelector","func","comparer","accumulator","seed","subjectOrSubjectFactory","nextSources","properties","selectorOrScheduler","notifier","period","compareTo","comparor","configOrBufferSize","array","switchAll","defaultThrottleConfig","due","withObservable","windowBoundaries","windowSize","startWindowEvery","windowTimeSpan","windowCreationInterval","maxWindowSize","isNumeric","__export","m","p","hasOwnProperty","GroupedObservable","VirtualAction","NotificationKind","noop","identity","isObservable","scheduled","EMPTY","InnerSubscriber","OuterSubscriber","SubjectSubscription","fromIterable","ajaxGet","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","AjaxObservable","AjaxSubscriber","WebSocketSubject","dispatch","SubscribeOnObservable","Immediate","applyMixins","errorObject","hostReportError","isArrayLike","isDate","isFunction","isIterable","isObject","isInteropObservable","isPromise","not","root","subscribeTo","subscribeToArray","subscribeToIterable","subscribeToObservable","subscribeToPromise","subscribeToResult","toSubscriber","tryCatch","hasNext","hasCompleted","_subscribe","subscriber","hasError","thrownError","kind","hasValue","observe","observer","accept","toObservable","Error","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","isStopped","push","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","len","subscription","closed","add","eventsCount","spliceCount","time","Math","splice","SchedulerAction","schedule","work","state","source","delayTime","create","arg","subscribe","canReportError","callbackFunc","resultSelector","context","subject","params","handler","innerArgs","warn","self","dispatchNext","dispatchError","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","e","url","headers","method","body","mapResponse","x","response","responseType","urlOrRequest","request","createXHR","crossDomain","withCredentials","prop","post","put","patch","getJSON","destination","done","getHeader","contentTypeHeader","FormData","serializeBody","send","xhr","result","user","password","setupEvents","open","setHeaders","contentType","splitIndex","indexOf","substring","keys","encodeURIComponent","join","JSON","stringify","setRequestHeader","headerName","toLowerCase","progressSubscriber","xhrTimeout","ontimeout","upload","xhrProgress","onprogress","xhrError","onerror","xhrReadyStateChange","onreadystatechange","xhrLoad","readyState","status","responseText","onload","unsubscribe","abort","originalEvent","parseXhrResponse","AjaxErrorImpl","message","name","parseJson","parse","responseXML","AjaxTimeoutErrorImpl","DEFAULT_WEBSOCKET_CONFIG","deserializer","serializer","WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT","urlConfigOrSource","_config","assign","_output","WebSocketCtor","WebSocket","operator","sock","_resetState","_socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","socket","close","onopen","openObserver","closingObserver","code","reason","TypeError","onclose","closeObserver","wasClean","onmessage","toString","target","eventName","options","Array","setupSubscription","sourceObj","isEventTarget","addEventListener","removeEventListener","isJQueryStyleEventEmitter","on","off","isNodeStyleEventEmitter","addListener","removeListener","addHandler","removeHandler","retValue","scheduleIterable","input","schedulePromise","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","initialState","conditionResult","needIterate","trueResult","falseResult","counter","sources","remainder","subNext","obj","fromArray","RaceOperator","RaceSubscriber","hasFirst","subscriptions","_next","_complete","notifyNext","_outerValue","innerValue","outerIndex","remove","start","current","periodOrScheduler","resourceFactory","observableFactory","resource","Symbol_iterator","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","ZipOperator","ZipSubscriber","iterators","active","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","Boolean","parent","isComplete","notifyComplete","auditOperatorFunction","AuditOperator","AuditSubscriber","throttled","innerSubscription","clearThrottle","bufferOperatorFunction","BufferOperator","BufferSubscriber","bufferCountOperatorFunction","BufferCountOperator","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","buffers","bufferTimeOperatorFunction","BufferTimeOperator","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","_error","_unsubscribe","closeContext","spliceIndex","prevContext","action","bufferToggleOperatorFunction","BufferToggleOperator","BufferToggleSubscriber","outerValue","closeBuffer","openBuffer","innerSub","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","none","concatStatic","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","_tryNext","emitValue","durationSubscription","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","absoluteDelay","delayFor","abs","DelayOperator","DelaySubscriber","errored","notification","_schedule","scheduleNotification","DelayMessage","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","completed","delayNotifierSubscriptions","_innerValue","_outerIndex","_innerIndex","removeSubscription","tryComplete","notifyError","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","unused","subscribeToSource","dematerializeOperatorFunction","DeMaterializeOperator","DeMaterializeSubscriber","DistinctOperator","DistinctSubscriber","Set","clear","_useKeySelector","_finalizeNext","y","throwIfEmpty","hasDefaultValue","v","endWith","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","a","b","ii","ExhaustMapOperator","ExhaustMapSubscriber","tryNext","_innerSub","innerSubscriber","ExpandOperator","ExpandSubscriber","subscribeToProjection","FindValueOperator","yieldIndex","FindValueSubscriber","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","element","groupedObservable","GroupDurationSubscriber","forEach","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","ignoreElementsOperatorFunction","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","materializeOperatorFunction","MaterializeOperator","MaterializeSubscriber","mergeStatic","MergeScanOperator","MergeScanSubscriber","acc","ish","observeOnOperatorFunction","ObserveOnOperator","scheduleMessage","ObserveOnMessage","OnErrorResumeNextOperator","onErrorResumeNextStatic","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","pair","prev","plucker","props","mapper","currentProp","raceStatic","raceOperatorFunction","reduceOperatorFunctionWithSeed","reduceOperatorFunction","RepeatOperator","RepeatSubscriber","_unsubscribeAndRecycle","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","errors","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","comparator","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","completeB","refCount","shareReplayOperator","useRefCount","shareReplayOperation","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","total","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","ring","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","subscribeOnOperatorFunction","SubscribeOnOperator","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasValue","_sendValue","_throttled","tryDurationSelector","throttlingDone","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","absoluteTimeout","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","toArrayReducer","arr","item","windowOperatorFunction","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowCountOperatorFunction","WindowCountOperator","WindowCountSubscriber","windows","c","windowTimeOperatorFunction","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","closeWindow","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","innerIndex","inner","windowWhenOperatorFunction","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","found","_tryProject","zipStatic","zipOperatorFunction","Action","AsyncAction","AnimationFrameAction","requestAsyncId","actions","requestAnimationFrame","flush","recycleAsyncId","cancelAnimationFrame","AsyncScheduler","AnimationFrameScheduler","execute","AsapAction","setImmediate","bind","clearImmediate","AsapScheduler","pending","setInterval","clearInterval","_execute","errorValue","delegate","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","sort","sortActions","SubscriptionLoggable","ColdObservable","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","messagesLength","HotObservable","setup","SubscriptionLog","subscribedFrame","unsubscribedFrame","subscriptionLogs","oldSubscriptionLog","defaultMaxFrame","assertDeepEqual","hotObservables","coldObservables","flushTests","runMode","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","subscriptionMarbles","actual","flushTest","ready","subscriptionParsed","parseMarblesAsSubscriptions","subscriptionFrame","unsubscriptionFrame","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","test","groupStart","nextFrame","advanceFrameBy","match","parseFloat","unit","durationInMs","materializeInnerObservables","testMessages","subIndex","replace","getValue","run","prevFrameTimeFactor","prevMaxFrames","helpers","hot","ret","nextHandle","RESOLVED","Promise","resolve","activeHandles","findAndClearHandle","handle","cb","TestTools","TimeoutErrorImpl","derivedCtor","baseCtors","baseCtor","propertyKeys","getOwnPropertyNames","j","len2","isNaN","val","pred","notPred","__window","__self","WorkerGlobalScope","__global","global","_root","tryCatchTarget","tryCatcher","fn"],"sourceRoot":"webpack:///"}