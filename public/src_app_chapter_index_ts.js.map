{"version":3,"file":"src_app_chapter_index_ts.js","mappings":";;;;;;;;;;;;;;;;;AACA;AAEA;AACA;;;AAEA,MAAMG,MAAM,GAAW,CACrB;AACGC,MAAI,EAAE,EADT;AAEIC,WAAS,EAAEJ,+DAFf;AAGIK,MAAI,EAAE;AAAEC,SAAK,EAAE;AAAT;AAHV,CADqB,EAMrB;AACEH,MAAI,EAAE,YADR;AAEII,cAAY,EAAE,MAAM,sOAAwBC,IAAxB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,gBAApC,CAFxB;AAGIL,MAAI,EAAE;AAAEC,SAAK,EAAE,iBAAT;AAA4BK,cAAU,EAAE;AAAxC;AAHV,CANqB,EAWrB;AACGR,MAAI,EAAE,YADT;AAEIC,WAAS,EAAEH,qEAFf,CAGE;AAHF;AAIII,MAAI,EAAE;AAAEC,SAAK,EAAE,cAAT;AAAyBK,cAAU,EAAE;AAArC;AAJV,CAXqB,EAiBrB;AACGR,MAAI,EAAE,IADT;AAEIS,YAAU,EAAE;AAFhB,CAjBqB,CAAvB;AA2BO,IAAMC,oBAAb;AAAM,QAAOA,oBAAP,CAA2B;;;qBAApBA;AAAoB;;;UAApBA;;;cAHF,CAACd,kEAAA,CAAsBG,MAAtB,CAAD,GACCH,yDAAYA;;AAExB,SAAac,oBAAb;AAAA;;;sHAAaA,sBAAoB;AAAAE,cAAAA,yDAAAA;AAAAC,cAFrBjB,yDAEqB;AAAA;AAFT;;;;;;;;;;;;;;;;;;;;;;AC9BxB;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;AAeO,IAAMqB,aAAb;AAAM,QAAOA,aAAP,CAAoB;;;qBAAbA;AAAa;;;UAAbA;;;cAPH,CACRH,yDADQ,EAERJ,yEAFQ,EAGFd,yDAHE,EAIFoB,uDAJE;;AAOV,SAAaC,aAAb;AAAA;;;sHAAaA,eAAa;AAAAC,mBAXxBrB,+DAWwB,EAVxBC,qEAUwB,EATxBiB,wEASwB;AATRH,cAGhBE,yDAHgB,EAIhBJ,yEAJgB,EAKVd,yDALU,EAMVoB,uDANU;AASQ;AAHP;;kEAPjBlB,qEAAeA,EAAA,oLACfiB,wEADe,GACC;;;;;;;;;;;;;;;;;;;ACLlB;;;;;;;;;;;;ACLKI,IAAAA,4DAAAA;AAAuHA,IAAAA,oDAAAA;AAASA,IAAAA,0DAAAA;;;;;AAAlEA,IAAAA,wDAAAA,eAAAA,6DAAAA;;;;;;AAM9DA,IAAAA,4DAAAA;AAA+GA,IAAAA,oDAAAA;AAAKA,IAAAA,0DAAAA;;;;;AAA1DA,IAAAA,wDAAAA,eAAAA,6DAAAA;;;;;;;;;;AAR5DA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AACCA,IAAAA,wDAAAA;AACDA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AAA2EA,IAAAA,oDAAAA;AAAkBA,IAAAA,0DAAAA;AAC9FA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACCA,IAAAA,wDAAAA;AACDA,IAAAA,0DAAAA;AACDA,IAAAA,0DAAAA;;;;;AARyCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAGDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,eAAAA,6DAAAA;AAGCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAK1CA,IAAAA,gEAAAA;;;;;;AACAA,IAAAA,qEAAAA;AACCA,IAAAA,4DAAAA;AAAkBA,IAAAA,oDAAAA;AAAwBA,IAAAA,0DAAAA;AAC1CA,IAAAA,uDAAAA;AACAA,IAAAA,uDAAAA;AAGDA,IAAAA,mEAAAA;;;;;AALmBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAESA,IAAAA,uDAAAA;AAAAA,IAAAA,mEAAAA,mCAAAA,4DAAAA;;;;;;AAI5BA,IAAAA,gEAAAA;;;;ADPK,IAAMrB,eAAb;AAAM,QAAOA,eAAP,CAAsB;AAmB1BsB,gBACUC,MADV,EAEUC,KAFV,EAGSC,SAHT,EAIUC,GAJV,EAIyB;AAHf;AACA;AACD;AACC;AAER,WAAKC,WAAL,GAAmB,IAAnB;AACD;;AAEDC,YAAQ;AACN,WAAKC,aAAL,GAAqB,IAAIC,OAAJ,CAAmBC,OAAD,IAAY;AACjD,aAAKC,oBAAL,GAA4BD,OAA5B;AACD,OAFoB,CAArB;AAGA,WAAKE,YAAL;AACD;;AACDC,eAAW;AACT,aAAO,KAAKL,aAAZ;AACAM,aAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AACDC,aAAS;AAEP,UAAI,KAAKC,SAAL,KAAmB,KAAKd,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BF,SAAlD,EAA6D;AAC3DH,eAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKK,OAAL,CAAaC,UAA7C;AACA,aAAKd,QAAL;AACA,aAAKe,aAAL,CAAmB,KAAKF,OAAL,CAAaC,UAAhC;AACD;AACF;;AAEOT,gBAAY;AAClB,WAAKW,OAAL,GAAe,KAAKpB,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BI,OAA1C;AACA,WAAKN,SAAL,GAAiB,KAAKd,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BF,SAA5C;AACAR,aAAO,CAACe,GAAR,CAAY,CACV,KAAKnB,GAAL,CAASoB,KAAT,CAAeC,GAAf,CAAmB;AAAEC,UAAE,EAAE,KAAKJ;AAAX,OAAnB,CADU,EAEV,KAAKlB,GAAL,CAASuB,OAAT,CAAiBF,GAAjB,CAAqB;AAAEH,eAAO,EAAE,KAAKA,OAAhB;AAAyBM,UAAE,EAAE,KAAKZ,SAAlC;AAA6Ca,YAAI,EAAE;AAAnD,OAArB,CAFU,CAAZ,EAGG5C,IAHH,CAGS6C,MAAD,IAA6B;AACnC,aAAKC,KAAL,GAAaD,MAAM,CAAC,CAAD,CAAnB;AACA,aAAKE,OAAL,GAAeF,MAAM,CAAC,CAAD,CAArB;AAEA,aAAKG,cAAL;AACA,aAAKC,qBAAL,CAA2B,KAAKlB,SAAL,GAAiB,CAA5C;AACA,aAAKN,oBAAL;AACD,OAVD;AAWD;;AACOwB,yBAAqB,CAAClB,SAAD,EAAkB;AAC7C,YAAMmB,IAAI,GAAGnB,SAAS,GAAG,CAAzB;;AACA,UAAImB,IAAI,GAAG,CAAX,EAAc;AACZ,aAAK/B,GAAL,CAASuB,OAAT,CAAiBF,GAAjB,CAAqB;AAAEH,iBAAO,EAAE,KAAKA,OAAhB;AAAyBM,YAAE,EAAEO,IAA7B;AAAmCN,cAAI,EAAE;AAAzC,SAArB,EACG5C,IADH,CACQmD,QAAQ,IAAG;AACf,eAAKC,eAAL,GAAuBD,QAAvB;AACD,SAHH;AAID;;AACD,YAAME,IAAI,GAAGtB,SAAS,GAAG,CAAZ,GAAgB,CAA7B;;AACA,UAAIsB,IAAI,IAAI,KAAKP,KAAL,CAAWQ,cAAvB,EAAuC;AACrC,aAAKnC,GAAL,CAASuB,OAAT,CAAiBF,GAAjB,CAAqB;AAAEH,iBAAO,EAAE,KAAKA,OAAhB;AAAyBM,YAAE,EAAEU,IAA7B;AAAmCT,cAAI,EAAE;AAAzC,SAArB,EACG5C,IADH,CACQuD,IAAI,IAAG;AACX,eAAKC,WAAL,GAAmBD,IAAnB;AACD,SAHH;AAID;AACF;;AACDP,kBAAc;AACZ,WAAKS,aAAL,GAAqB,KAAKV,OAAL,CAAajD,KAAlC;AACA,WAAK4D,YAAL,GAAoB,CAAC,CAAC,KAAKX,OAAL,CAAaY,YAAf,GAA8B,KAAKZ,OAAL,CAAaY,YAA3C,GAA0D,KAAKZ,OAAL,CAAaa,YAA3F;AACD;;AAEDxB,iBAAa,CAACD,UAAD,EAAiC;AAC5C;AACA,WAAKb,aAAL,CAAmBtB,IAAnB,CAAwB6D,CAAC,IAAG;AAC1B,aAAKb,cAAL;;AACA,YAAIb,UAAU,CAAC2B,MAAX,GAAoB,CAAxB,EAA2B;AACzB,gBAAMC,OAAO,GAAG,EAAhB;AACA5B,oBAAU,CAAC6B,OAAX,CAAmBC,QAAQ,IAAG;AAC5BA,oBAAQ,CAACF,OAAT,CAAiBC,OAAjB,CAAyBE,KAAK,IAAG;AAC/B,oBAAMJ,MAAM,GAAGI,KAAK,CAACC,aAAN,CAAoBL,MAAnC;;AACA,kBAAI,CAACC,OAAO,CAACD,MAAD,CAAZ,EAAsB;AACpBC,uBAAO,CAACD,MAAD,CAAP,GAAkB,EAAlB;AACD;;AACDC,qBAAO,CAACD,MAAD,CAAP,CAAgBM,IAAhB,CAAqB;AACnBD,6BAAa,EAAED,KAAK,CAACC,aADF;AAEnBE,gCAAgB,EAAEH,KAAK,CAACG,gBAFL;AAGnBC,uBAAO,EAAEJ,KAAK,CAACzB,EAHI;AAInB8B,0BAAU,EAAEN,QAAQ,CAACxB,EAJF;AAKnBwB,wBAAQ,EAAEA,QAAQ,CAACO;AALA,eAArB;AAOD,aAZD;AAaD,WAdD;;AAeA,eAAK,IAAIC,CAAC,GAAGV,OAAO,CAACD,MAArB,EAA6BW,CAAC,GAAG,CAAjC,EAAoC,EAAEA,CAAtC,EAAyC;AACvC,gBAAIV,OAAO,CAACU,CAAD,CAAX,EAAgB;AACdV,qBAAO,CAACU,CAAD,CAAP,CAAWT,OAAX,CAAmBE,KAAK,IAAG;AACzB;AACA,sBAAMQ,KAAK,GAAG,IAAIC,MAAJ,CAAWT,KAAK,CAACC,aAAjB,EAAgC,GAAhC,CAAd;AACA,qBAAKV,aAAL,GAAqB,KAAKA,aAAL,CAAmBmB,OAAnB,CAA2BF,KAA3B,EAAkC,SAASR,KAAK,CAACG,gBAAf,GAAkC,MAApE,CAArB;AACA,qBAAKX,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,OAAlB,CAA0BF,KAA1B,EAAiC,SAASR,KAAK,CAACG,gBAAf,GAAkC,MAAnE,CAApB;AACD,eALD;AAMD;AACF,WA1BwB,CA2BzB;;;AACA,cAAIK,KAAK,GAAG,IAAIC,MAAJ,CAAW,cAAX,EAA2B,GAA3B,CAAZ;AACA,eAAKlB,aAAL,GAAqB,KAAKA,aAAL,CAAmBmB,OAAnB,CAA2BF,KAA3B,EAAkC,GAAlC,CAArB;AACA,eAAKhB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,OAAlB,CAA0BF,KAA1B,EAAiC,GAAjC,CAApB;AACAA,eAAK,GAAG,IAAIC,MAAJ,CAAW,QAAX,EAAqB,GAArB,CAAR;AACA,eAAKlB,aAAL,GAAqB,KAAKA,aAAL,CAAmBmB,OAAnB,CAA2BF,KAA3B,EAAkC,EAAlC,CAArB;AACA,eAAKhB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,OAAlB,CAA0BF,KAA1B,EAAiC,EAAjC,CAApB;AACAA,eAAK,GAAG,IAAIC,MAAJ,CAAW,QAAX,EAAqB,GAArB,CAAR;AACA,eAAKlB,aAAL,GAAqB,KAAKA,aAAL,CAAmBmB,OAAnB,CAA2BF,KAA3B,EAAkC,EAAlC,CAArB;AACA,eAAKhB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,OAAlB,CAA0BF,KAA1B,EAAiC,EAAjC,CAApB;AACD;AACF,OAxCD;AA0CD;;AACDG,iBAAa;AACX,UAAI,KAAKzD,WAAT,EACE,KAAKA,WAAL,GAAmB,KAAnB,CADF,KAGE,KAAKA,WAAL,GAAmB,IAAnB;AACH;;AArIyB;;;qBAAf3B,iBAAeqB,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,mEAAAA,GAAAA,+DAAAA,CAAAA,4CAAAA;AAAA;;;UAAfrB;AAAeqF;AAAAC;AAAA;kEACfrE,wEAAgBA,EAAA;;;;;;;;;;;;;;AClB7BI,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AACCA,QAAAA,wDAAAA,0EAAAA,oEAAAA;AAcAA,QAAAA,wDAAAA;AACAA,QAAAA,wDAAAA;AAOAA,QAAAA,wDAAAA;AACDA,QAAAA,0DAAAA;AAEAA,QAAAA,4DAAAA;AAA0BA,QAAAA,wDAAAA;AAAA,iBAASkE,mBAAT;AAAwB,SAAxB;AAA0BlE,QAAAA,oDAAAA;AAAQA,QAAAA,0DAAAA;AAC5DA,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AAAqBA,QAAAA,wDAAAA;AAAA,iBAAmBkE,yBAAnB;AAAwC,SAAxC;AAA0ClE,QAAAA,0DAAAA;AAChEA,QAAAA,0DAAAA;AACDA,QAAAA,0DAAAA;;;;;;AAfiBA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;AACAA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;AAOAA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;AAIKA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;;;;;ADXtB,SAAarB,eAAb;AAAA;;;;;;;;;;;;;;;;;AEdA;;;AASO,IAAM0F,WAAb;AAAM,QAAOA,WAAP,CAAkB;AAUtBpE,gBACSI,GADT,EACwB;AAAf;AART,wBAAmC,EAAnC;AACA,sCAAiD,EAAjD;AAEA,qBAAoB,EAApB;AAMK;;AAELiE,gBAAY,CAACC,UAAD,EAAW;AACrB,WAAKlE,GAAL,CAASmE,QAAT,CAAkBC,MAAlB,CAAyB;AAAEC,oBAAY,EAAE,KAAKA;AAArB,OAAzB,EACGxF,IADH,CACSmC,UAAD,IAAe;AAEnB,aAAKA,UAAL,GAAkBsD,MAAM,CAAC5C,MAAP,CAAcV,UAAd,CAAlB;AACA,cAAMuD,aAAa,GAAG,EAAtB;AAEA,aAAKvD,UAAL,CAAgB6B,OAAhB,CAAwB,CAACC,QAAD,EAAW0B,aAAX,KAA4B;AAClDD,uBAAa,CAACtB,IAAd,CAAmB,IAAI7C,OAAJ,CAAkB,CAACqE,UAAD,EAAaC,SAAb,KAA0B;AAE7D,iBAAK1E,GAAL,CAAS2E,KAAT,CAAeP,MAAf,CAAsB;AAAEC,0BAAY,EAAE,KAAKA,YAArB;AAAmCjB,wBAAU,EAAEN,QAAQ,CAACxB;AAAxD,aAAtB,EACGzC,IADH,CACS+D,OAAD,IAAY;AAChB2B,2BAAa,CAACtB,IAAd,CAAmB,IAAI7C,OAAJ,CAAkB,CAACwE,UAAD,EAAaC,SAAb,KAA0B;AAC7D;AACA/B,wBAAQ,CAACF,OAAT,GAAmB0B,MAAM,CAAC5C,MAAP,CAAckB,OAAd,CAAnB;AACAgC,0BAAU;AACX,eAJkB,CAAnB;AAKD,aAPH;AAQAH,sBAAU;AACX,WAXkB,CAAnB;AAYD,SAbD;AAeArE,eAAO,CAACe,GAAR,CAAYoD,aAAZ,EACG1F,IADH,CACQ6D,CAAC,IAAG;AACR,eAAKoC,wBAAL,GAAgCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKjE,UAApB,CAAX,CAAhC;AACAkD,oBAAU;AACX,SAJH;AAKD,OA1BH;AA2BD;;AACDgB,YAAQ,CAACpC,QAAD,EAAWqC,WAAX,EAAwBC,cAAxB,EAA6C;AACnD,UAAI,CAACtC,QAAQ,CAACF,OAAd,EAAuB;AACrBE,gBAAQ,CAACF,OAAT,GAAmB,EAAnB;AACD;;AACDE,cAAQ,CAACF,OAAT,CAAiBK,IAAjB,CAAsB,IAAIc,8CAAJ,EAAtB,EAJmD,CAMnD;;AACAsB,gBAAU,CAAC,MAAK;AACd,YAAIC,KAAJ;AACA,YAAIC,QAAJ;;AACA,YAAI,KAAKC,aAAT,EAAuB;AACrB,cAAIC,WAAW,GAAG,KAAKD,aAAL,CAAmBE,OAAnB,GAA6BN,cAA7B,CAAlB;;AACA,cAAIK,WAAJ,EAAiB;AACfH,iBAAK,GAAGG,WAAW,CAACE,aAApB;AACD;AACF,SARa,CASd;;;AACA,YAAI,CAACJ,QAAL,EAAe;AACbD,eAAK,GAAmBM,QAAQ,CAACC,cAAT,CAAwB,iBAAiBT,cAAzC,CAAxB;AACD;;AACDG,gBAAQ,GAAID,KAAK,CAACQ,QAAN,CAAeR,KAAK,CAACQ,QAAN,CAAenD,MAAf,GAAwB,CAAvC,EAA0CmD,QAA1C,CAAmD,CAAnD,CAAZ;AACAP,gBAAQ,CAACQ,KAAT;AACD,OAfS,EAeR,GAfQ,CAAV;AAgBD;;AACDC,eAAW;AACT,WAAKhF,UAAL,CAAgBiC,IAAhB,CAAqB,IAAIa,uDAAJ,CAAuB,IAAvB,EAA6B,KAAKO,YAAlC,CAArB;AACD;;AAGD4B,eAAW,CAAClD,KAAD,EAAmBmD,MAAnB,EAAoCC,MAApC,EAAmD;AAC5D,UAAIpD,KAAK,CAACqD,KAAV,EAAiB;AACf,YAAI,KAAKpF,UAAL,CAAgBkF,MAAhB,EAAwBtD,OAAxB,CAAgCuD,MAAhC,EAAwC7E,EAA5C,EAAgD;AAC9C,eAAKN,UAAL,CAAgBkF,MAAhB,EAAwBtD,OAAxB,CAAgCuD,MAAhC,IAA0C,IAAIpC,8CAAJ,CAAc,KAAKe,wBAAL,CAA8BoB,MAA9B,EAAsCtD,OAAtC,CAA8CuD,MAA9C,CAAd,CAA1C;AACD,SAFD,MAEO;AACL,eAAKnF,UAAL,CAAgBkF,MAAhB,EAAwBtD,OAAxB,CAAgCuD,MAAhC,IAA0C,IAAIpC,8CAAJ,CAAc,IAAd,EAAoB,KAAK/C,UAAL,CAAgBkF,MAAhB,EAAwB5E,EAA5C,CAA1C;AACD;AACF,OAND,MAMO;AACL,YAAIyB,KAAK,CAACsD,MAAV,EAAkB;AAChB,cAAI,CAACtD,KAAK,CAACzB,EAAX,EAAe;AACb,iBAAKN,UAAL,CAAgBkF,MAAhB,EAAwBtD,OAAxB,CAAgC0D,MAAhC,CAAuCH,MAAvC,EAA+C,CAA/C;AACD;AACF,SAJD,MAIO;AACL,cAAIpD,KAAK,CAACzB,EAAV,EAAc;AACZyB,iBAAK,CAACwD,MAAN,GAAexD,KAAK,CAACC,aAAN,KAA2B,KAAK8B,wBAAL,CAA8BoB,MAA9B,EAAsCtD,OAAtC,CAA8CuD,MAA9C,EAAsDnD,aAAjF,IACAD,KAAK,CAACG,gBAAN,KAA2B,KAAK4B,wBAAL,CAA8BoB,MAA9B,EAAsCtD,OAAtC,CAA8CuD,MAA9C,EAAsDjD,gBADjF,IAEAH,KAAK,CAACyD,WAAN,KAA2B,KAAK1B,wBAAL,CAA8BoB,MAA9B,EAAsCtD,OAAtC,CAA8CuD,MAA9C,EAAsDK,WAFjF,IAGAzD,KAAK,CAACK,UAAN,KAA2B,KAAK0B,wBAAL,CAA8BoB,MAA9B,EAAsCtD,OAAtC,CAA8CuD,MAA9C,EAAsD/C,UAHhG;AAKD;AACF;AACF;AACF;;AACDqD,kBAAc,CAAC3D,QAAD,EAAW4D,GAAX,EAAc;AAC1B,UAAI5D,QAAQ,CAACxB,EAAb,EAAiB;AACfwB,gBAAQ,CAACyD,MAAT,GAAkBzD,QAAQ,CAACO,IAAT,KAAkB,KAAKyB,wBAAL,CAA8B4B,GAA9B,EAAmCrD,IAAvE;AACD;AACF;;AAnGqB;;;qBAAXW,aAAWrE,sDAAAA,CAAAA,4CAAAA;AAAA;;;WAAXqE;AAAW2C,aAAX3C,WAAW;AAAA4C,gBAFV;;AAEd,SAAa5C,WAAb;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;;;;;;;ACDErE,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AAAiEA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;AAChFA,IAAAA,0DAAAA;;;;;;;;AACAA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AAAGA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASmH,uBAAT;AAAyB,KAAzB;AAAkDnH,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;AACrEA,IAAAA,0DAAAA;;;;;;;;;;AATDA,IAAAA,4DAAAA;AACOA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAA8EA,IAAAA,oDAAAA;AAAUA,IAAAA,0DAAAA;AAC5FA,IAAAA,0DAAAA;AACNA,IAAAA,wDAAAA;AAGAA,IAAAA,wDAAAA;AAMDA,IAAAA,0DAAAA;;;;;AAXcA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,eAAAA,6DAAAA;AAEQA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAGAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AASvBA,IAAAA,gEAAAA;;;;;;;;AAsBwBA,IAAAA,4DAAAA;AAA2CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASoH,0CAAT;AAAmC,KAAnC;AAAsCpH,IAAAA,oDAAAA;AAAuBA,IAAAA,0DAAAA;;;;;AAAvBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAQnGA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AACCA,IAAAA,uDAAAA;AACDA,IAAAA,0DAAAA;AACDA,IAAAA,0DAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AACCA,IAAAA,uDAAAA;AACDA,IAAAA,0DAAAA;AACDA,IAAAA,0DAAAA;;;;;;;;;;AA3BHA,IAAAA,qEAAAA;AACCA,IAAAA,4DAAAA;AACCA,IAAAA,4DAAAA;AAAIA,IAAAA,oDAAAA;AAAgBA,IAAAA,0DAAAA;AACpBA,IAAAA,4DAAAA;AAA4DA,IAAAA,oDAAAA;AAAmBA,IAAAA,0DAAAA;AAC/EA,IAAAA,4DAAAA;AAA4DA,IAAAA,oDAAAA;AAA8BA,IAAAA,0DAAAA;AAC1FA,IAAAA,4DAAAA;AAA4DA,IAAAA,oDAAAA;AAAkCA,IAAAA,0DAAAA;AAE/EA,IAAAA,4DAAAA;AACIA,IAAAA,wDAAAA;AACJA,IAAAA,0DAAAA;AAMfA,IAAAA,wDAAAA,2FAAAA,oEAAAA;AAOAA,IAAAA,wDAAAA,2FAAAA,oEAAAA;AAODA,IAAAA,0DAAAA;AACDA,IAAAA,mEAAAA;;;;;;AA7BKA,IAAAA,uDAAAA;AAAAA,IAAAA,mEAAAA;AACCA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AACAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,eAAAA,6DAAAA;AAAwDA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AACxDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,eAAAA,6DAAAA;AAAwDA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AACxDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,eAAAA,6DAAAA;AAAwDA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAGfA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;ADzB3C,IAAMtB,aAAb;AAAM,QAAOA,aAAP,CAAoB;AAOxBuB,gBACYC,MADZ,EAEYC,KAFZ,EAGYE,GAHZ,EAG2B;AAFf;AACA;AACA;AARZ,sBAAsB,EAAtB;AACA,0BAA6B,EAA7B;AAQO;;AAEPE,YAAQ;AACN,WAAKgB,OAAL,GAAe,KAAKpB,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BI,OAA1C;AACA,WAAKlB,GAAL,CAASoB,KAAT,CAAeC,GAAf,CAAmB;AAACC,UAAE,EAAE,KAAKJ;AAAV,OAAnB,EACarC,IADb,CACkB8C,KAAK,IAAG;AACZ,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAK3B,GAAL,CAASgH,UAAT,CAAoB5C,MAApB,CAA2B;AAAClD,iBAAO,EAAE,KAAKA;AAAf,SAA3B,EACSrC,IADT,CACcoI,YAAY,IAAG;AACnB,eAAKA,YAAL,GAAoB3C,MAAM,CAAC5C,MAAP,CAAcuF,YAAd,CAApB;AACA,eAAKjH,GAAL,CAASuB,OAAT,CAAiB6C,MAAjB,CAAwB;AAAClD,mBAAO,EAAE,KAAKA;AAAf,WAAxB,EACiBrC,IADjB,CACsBqI,QAAQ,IAAG;AACf,iBAAKA,QAAL,GAAgB5C,MAAM,CAAC5C,MAAP,CAAcwF,QAAd,CAAhB;AACD,WAHjB;AAID,SAPT;AAQD,OAXb;AAYD;;AAEDC,UAAM,CAACvF,OAAD,EAAmBwF,UAAnB,EAAyC;AAC3C,UAAIC,GAAG,GAAG,GAAGR,mFAAyB,WAAW,KAAK3F,OAAO,IAAIkG,UAAU,CAAC9F,EAAE,IAAIM,OAAO,CAACJ,EAAE,IAA5F;AACA6F,SAAG,GAAG,4DAA4DA,GAAlE;AACAE,YAAM,CAACC,IAAP,CAAYH,GAAZ;AACH;;AAEDI,kBAAc;AACZ,WAAKzH,GAAL,CAASuB,OAAT,CAAiBmG,UAAjB,CAA4B;AAAExG,eAAO,EAAG,KAAKA;AAAjB,OAA5B,EACGrC,IADH,CACQ8I,GAAG,IAAG;AACV;;;AAGA,aAAK3H,GAAL,CAASuB,OAAT,CAAiB6C,MAAjB,CAAwB;AAAElD,iBAAO,EAAE,KAAKA;AAAhB,SAAxB,EACerC,IADf,CACoBqI,QAAQ,IAAG;AACf,eAAKA,QAAL,GAAgB5C,MAAM,CAAC5C,MAAP,CAAcwF,QAAd,CAAhB;AACD,SAHf;AAID,OATH,EASKU,GAAG,IAAG;AACPnH,eAAO,CAACC,GAAR,CAAYkH,GAAZ;AACD,OAXH;AAYD;;AAhDuB;;;qBAAbvJ,eAAasB,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,4CAAAA;AAAA;;;UAAbtB;AAAasF;AAAAkE;AAAAC;AAAAC;AAAAC;AAAA;ACd1BrI,QAAAA,wDAAAA,wEAAAA,oEAAAA;AAiBAA,QAAAA,wDAAAA;AACAA,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AACCA,QAAAA,4DAAAA;AAAIA,QAAAA,oDAAAA;AAAMA,QAAAA,0DAAAA;AACVA,QAAAA,4DAAAA;AAAIA,QAAAA,oDAAAA;AAAKA,QAAAA,0DAAAA;AACTA,QAAAA,4DAAAA;AAAIA,QAAAA,oDAAAA;AAAYA,QAAAA,0DAAAA;AAChBA,QAAAA,4DAAAA;AAAIA,QAAAA,oDAAAA;AAAYA,QAAAA,0DAAAA;AAChBA,QAAAA,4DAAAA;AAAIA,QAAAA,oDAAAA;AAAUA,QAAAA,uDAAAA;AAAMA,QAAAA,oDAAAA;AAAiBA,QAAAA,0DAAAA;AAEtCA,QAAAA,0DAAAA;AACDA,QAAAA,0DAAAA;AACAA,QAAAA,4DAAAA;AACCA,QAAAA,wDAAAA;AA+BDA,QAAAA,0DAAAA;AACDA,QAAAA,0DAAAA;AACDA,QAAAA,0DAAAA;;;;;;AA/CeA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;AAcsBA,QAAAA,uDAAAA;AAAAA,QAAAA,wDAAAA;;;;;;ADjBrC,SAAatB,aAAb;AAAA;;;;;;;;;;;;;;;;;;;;;AEdA;AAQA;AAIA;;;;;;;;;ACPgBsB,IAAAA,4DAAAA;AAAkEA,IAAAA,oDAAAA;AAAqBA,IAAAA,0DAAAA;;;;;AAA3CA,IAAAA,mEAAAA;AAAsBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;;;AAH1EA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAAuBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,OAAgC,QAAhC,EAAgC;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAWuI,8CAAX;AAAkD,KAAlF;AACnBvI,IAAAA,4DAAAA;AAAqCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;AACtDA,IAAAA,wDAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAiFA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwI,2BAAT;AAA6B,KAA7B;AAAjFxI,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAoFA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASyI,yBAAT;AAA0B,KAA1B;AAApFzI,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;;;;;AAN2BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAEQA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;;;;;;;;;AAe/BA,IAAAA,qEAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAAIA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAA,IAAAA,4DAAAA;AAAyCA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,eAA3B,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,aACf0I,2CADe;AACW,KADtC;AAAzC1I,IAAAA,0DAAAA;AAEJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,mEAAAA;;;;;;;AAL8CA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,6DAAAA;AACOA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;;;;;;;;;AAqBrCA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAA0CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,eAAjC,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyC2I,4CAAzC;AAAiE,KAAlG;AAA1C3I,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAA6CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,eAApC,EAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4C4I,4CAA5C;AAAoE,KAAxG;AAA7C5I,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAA6CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,eAA/B,EAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4C6I,4CAA5C;AAAoE,KAAnG;AAA7C7I,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,uDAAAA;AACAA,IAAAA,4DAAAA;AAAsCA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,QAA1B,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0B8I,4CAA1B;AAAkD,KAA5E;AAAtC9I,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,uDAAAA;AACAA,IAAAA,4DAAAA;AAAsCA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,QAAzB,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyB+I,4CAAzB;AAAiD,KAA1E;AAAtC/I,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AAEAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA;AAArBA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;;;;;;;AAdyEA,IAAAA,wDAAAA,YAAAA,6DAAAA;AACgFA,IAAAA,uDAAAA;AAAAA,IAAAA,oEAAAA;AAA3GA,IAAAA,wDAAAA;AACGA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AACAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAGHA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAGrBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;;;;;;;AAhBrCA,IAAAA,qEAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,wDAAAA;AAeAA,IAAAA,uDAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASgJ,sDAAT;AAA2C,KAA3C;AAArBhJ,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,mEAAAA;;;;;;;AArBQA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,6DAAAA;AACmDA,IAAAA,uDAAAA;AAAAA,IAAAA,oEAAAA;AACxBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AA5CnDA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,wDAAAA;AAQJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASiJ,2BAAT;AAA4B,KAA5B;AAArBjJ,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASkJ,oBAAY,IAAZ,CAAT;AAA0B,KAA1B;AAArBlJ,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASmJ,oBAAY,KAAZ,CAAT;AAA2B,KAA3B;AAArBnJ,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,wDAAAA;AAQAA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASoJ,qBAAT;AAAsB,KAAtB;AAArBpJ,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,oDAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAuBJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASqJ,2BAAT;AAA4B,KAA5B;AAArBrJ,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASsJ,oBAAY,IAAZ,CAAT;AAA0B,KAA1B;AAArBtJ,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AAAqBA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASuJ,oBAAY,KAAZ,CAAT;AAA2B,KAA3B;AAArBvJ,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;AACJA,IAAAA,0DAAAA;;;;;AAxEyCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAWmFA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAO7EA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAgB3BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,6DAAAA;AAK+BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AA4B0EA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;ADlDtH,IAAMJ,gBAAb;AAAM,QAAOA,gBAAP,SAAgCyE,sDAAhC,CAA2C;AAc/CpE,gBACWI,GADX,EAEYF,KAFZ,EAEiC;AAE/B,YAAME,GAAN;AAHS;AACC;AAdF,6BAAsD,IAAIiI,uDAAJ,EAAtD;AAEV,0BAA6B,EAA7B;AACA,wBAAmC,EAAnC;AAOA,gCAA0B,EAA1B;AA6DA,oBAAkB,KAAlB;AAtDC;;AAED/H,YAAQ;AACN,WAAKgB,OAAL,GAAe,KAAKpB,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BI,OAA1C;AAEA,WAAKlB,GAAL,CAASgH,UAAT,CAAoB5C,MAApB,CAA2B;AAAClD,eAAO,EAAE,KAAKA;AAAf,OAA3B,EACGrC,IADH,CACSoI,YAAD,IAA+B;AACnC,aAAKA,YAAL,GAAoBA,YAApB;AACA,aAAKkC,kBAAL,GAA0BlC,YAAY,CAAC,CAAD,CAAZ,CAAgB3F,EAA1C;AACA,aAAK8H,kBAAL,CAAwB,KAAKD,kBAA7B;AACD,OALH;AAMD;;AACD3I,eAAW;AACT,aAAO,KAAKyG,YAAZ;AACA,aAAO,KAAKjG,UAAZ;AACA,aAAO,KAAK8D,wBAAZ;AACA,aAAO,KAAK1B,UAAZ;AACA,aAAO,KAAKiB,YAAZ;AACA,aAAO,KAAKnD,OAAZ;AACA,aAAO,KAAKiI,kBAAZ;AACA1I,aAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AACD0I,sBAAkB,CAAC/E,YAAD,EAAqB;AACrC,WAAKA,YAAL,GAAoBA,YAApB;AACA,WAAKgF,QAAL;AACD;;AACOA,YAAQ;AACd,UAAI,KAAKrI,UAAL,CAAgB2B,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAK3C,GAAL,CAASgH,UAAT,CAAoBqC,QAApB,CAA6B,KAAKhF,YAAlC,EACGxF,IADH,CACSyK,MAAD,IAAW;AACf,eAAKC,yBAAL,CAA+BD,MAA/B;AACD,SAHH;AAID,OALD,MAKO;AACL,aAAKE,kBAAL;AACD;AACF;;AACOD,6BAAyB,CAACD,MAAD,EAAO;AACtC,UAAIA,MAAJ,EAAY;AACV,cAAMG,gBAAgB,GAAG,IAAIrJ,OAAJ,CAAkB,CAAC8D,UAAD,EAAawF,SAAb,KAA0B;AACnE,eAAKzF,YAAL,CAAkBC,UAAlB;AACD,SAFwB,CAAzB;AAIAuF,wBAAgB,CAAC5K,IAAjB,CAAsB6D,CAAC,IAAG;AACxB,eAAK8G,kBAAL;AACD,SAFD;AAGD;AACF;;AAEDA,sBAAkB;AAChB,WAAKG,eAAL,CAAqBC,IAArB,CAA0B,KAAK5I,UAA/B;AACD;;AACD6I,mBAAe;AACb,WAAKF,eAAL,CAAqBC,IAArB,CAA0B,EAA1B;AACD;;AAEDE,qBAAiB;AACf,WAAKC,MAAL,GAAc,IAAd;AACA,WAAK/J,GAAL,CAASgH,UAAT,CAAoBgD,QAApB,CAA6B,KAAK3F,YAAlC,EAAgD,KAAKrD,UAArD,EACGnC,IADH,CACQ8I,GAAG,IAAG;AACV,aAAK3G,UAAL,GAAkB,EAAlB;AACA,aAAKqI,QAAL;AACA,aAAKG,kBAAL;AAEA,aAAKO,MAAL,GAAc,KAAd;AACAtJ,eAAO,CAACC,GAAR,CAAYiH,GAAZ;AACD,OARH;AASD;;AAEDsC,eAAW,CAACC,SAAD,EAAU;AACnB,YAAM1I,EAAE,GAAG,KAAK1B,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BF,SAAtC;AACA,UAAIyG,GAAG,GAAG,GAAGR,mFAAyB,WAAW,KAAK3F,OAAO,IAAI,KAAKmD,YAAY,IAAI7C,EAAE,GAAxF;;AACA,UAAI0I,SAAJ,EAAe;AACb7C,WAAG,GAAG,4DAA4DA,GAAlE;AACD;;AACDE,YAAM,CAACC,IAAP,CAAYH,GAAZ;AACD;;AA9F8C;;;qBAApC9H,kBAAgBI,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA;AAAA;;;UAAhBJ;AAAgBoE;AAAAwG;AAAAR;AAAA;AAAAS,eAAAA,wEAAAA;AAAAvC;AAAAC;AAAAC;AAAAC;AAAA;ACnB7BrI,QAAAA,wDAAAA;;;;AAA6BA,QAAAA,wDAAAA;;;;;;ADmB7B,SAAaJ,gBAAb;AAAA","sources":["./src/app/chapter/chapter-routing.module.ts","./src/app/chapter/chapter.module.ts","./src/app/chapter/detail/detail.component.ts","./src/app/chapter/detail/detail.component.html","./src/app/chapter/form.service.ts","./src/app/chapter/list/list.component.ts","./src/app/chapter/list/list.component.html","./src/app/chapter/sidebar/sidebar.component.ts","./src/app/chapter/sidebar/sidebar.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Chapters' }\n  },\n  {\n    path: 'dictionary'\n    , loadChildren: () => import('../dictionary').then(m => m.DictionaryModule)\n    , data: { title: 'View dictionary', breadcrumb: 'Dictionaries' }\n  },\n  {\n     path: ':noChapter'\n    , component: DetailComponent\n    // ,loadChildren: () => ChapterModule\n    , data: { title: 'View chapter', breadcrumb: 'View Chapter' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChapterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ChapterRoutingModule } from './chapter-routing.module';\n\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [\n\t\tListComponent,\n\t\tDetailComponent,\n\t\tSidebarComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tChapterRoutingModule,\n        RouterModule,\n        FormsModule\n\t]\n})\nexport class ChapterModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { Chapter } from '../../_models/chapter';\nimport { Novel } from '../../_models/novel';\nimport { DictionaryCategory } from 'src/app/_models/dictionarycategory';\nimport { CategoryModule } from 'src/app/category';\nimport { count } from 'rxjs-compat/operator/count';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-chapter-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n  @ViewChild(SidebarComponent) Sidebar;\n\n  chapter: Chapter;\n  novel: Novel;\n  idNovel: number;\n  noChapter: number;\n\n  chapterPrevious: Chapter;\n  chapterNext: Chapter;\n\n  renderedTitle: string;\n  renderedText: string;\n  loadedChapter: Promise<void>;\n  loadedChapterResolve: () => void;\n\n\n  showSidebar: boolean;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    public sanitized: DomSanitizer,\n    private api: ApiService\n  ) {\n    this.showSidebar = true;\n  }\n\n  ngOnInit() {\n    this.loadedChapter = new Promise<void>((resolve) => {\n      this.loadedChapterResolve = resolve;\n    });\n    this.startContent();\n  }\n  ngOnDestroy() {\n    delete this.loadedChapter;\n    console.log('destroy detailed chapter');\n  }\n  ngDoCheck() {\n\n    if (this.noChapter !== this.route.snapshot.params.noChapter) {\n      console.log('changing chapter', this.Sidebar.categories);\n      this.ngOnInit();\n      this.translateText(this.Sidebar.categories);\n    }\n  }\n\n  private startContent() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.noChapter = this.route.snapshot.params.noChapter;\n    Promise.all([\n      this.api.Novel.get({ id: this.idNovel }),\n      this.api.Chapter.get({ idNovel: this.idNovel, no: this.noChapter, text: true })\n    ]).then((values: [Novel, Chapter]) => {\n      this.novel = values[0];\n      this.chapter = values[1];\n\n      this.renderDataView();\n      this.cacheAdjecentChapters(this.noChapter - 0);\n      this.loadedChapterResolve();\n    });\n  }\n  private cacheAdjecentChapters(noChapter: number) {\n    const prev = noChapter - 1;\n    if (prev > 0) {\n      this.api.Chapter.get({ idNovel: this.idNovel, no: prev, text: true })\n        .then(previous => {\n          this.chapterPrevious = previous;\n        });\n    }\n    const next = noChapter - 0 + 1;\n    if (next <= this.novel.numberChapters) {\n      this.api.Chapter.get({ idNovel: this.idNovel, no: next, text: true })\n        .then(Next => {\n          this.chapterNext = Next;\n        });\n    }\n  }\n  renderDataView() {\n    this.renderedTitle = this.chapter.title;\n    this.renderedText = !!this.chapter.textRevision ? this.chapter.textRevision : this.chapter.textOriginal;\n  }\n\n  translateText(categories: DictionaryCategory[]) {\n    // In case the dictionary comes first, then let it wait for the chapter\n    this.loadedChapter.then(_ => {\n      this.renderDataView();\n      if (categories.length > 0) {\n        const entries = [];\n        categories.forEach(category => {\n          category.entries.forEach(entry => {\n            const length = entry.entryOriginal.length;\n            if (!entries[length]) {\n              entries[length] = [];\n            }\n            entries[length].push({\n              entryOriginal: entry.entryOriginal,\n              entryTranslation: entry.entryTranslation,\n              idEntry: entry.id,\n              idCategory: category.id,\n              category: category.name,\n            });\n          });\n        });\n        for (let i = entries.length; i > 0; --i) {\n          if (entries[i]) {\n            entries[i].forEach(entry => {\n              // console.log('Change ', entry.entryOriginal, entry.entryTranslation);\n              const regex = new RegExp(entry.entryOriginal, 'g');\n              this.renderedTitle = this.renderedTitle.replace(regex, '\\[\\[' + entry.entryTranslation + '\\]\\]');\n              this.renderedText = this.renderedText.replace(regex, '\\[\\[' + entry.entryTranslation + '\\]\\]');\n            });\n          }\n        }\n        // The extra characters are to allow to create a space in between translated words\n        let regex = new RegExp('\\\\]\\\\]\\\\[\\\\[', 'g');\n        this.renderedTitle = this.renderedTitle.replace(regex, ' ');\n        this.renderedText = this.renderedText.replace(regex, ' ');\n        regex = new RegExp('\\\\]\\\\]', 'g');\n        this.renderedTitle = this.renderedTitle.replace(regex, '');\n        this.renderedText = this.renderedText.replace(regex, '');\n        regex = new RegExp('\\\\[\\\\[', 'g');\n        this.renderedTitle = this.renderedTitle.replace(regex, '');\n        this.renderedText = this.renderedText.replace(regex, '');\n      }\n    });\n\n  }\n  toogleSidebar() {\n    if (this.showSidebar)\n      this.showSidebar = false;\n    else\n      this.showSidebar = true;\n  }\n\n}\n","<div class='flexContent'>\n\t<div class='content'>\n\t\t<ng-template #controlButtons>\n\t\t\t<div class=\"columns controlButtons\">\n\t\t\t\t<div class=\"column\">\n\t\t\t\t\t<a class=\"button is-large is-primary\" *ngIf=\"chapterPrevious\" [routerLink]=\"['/novel/', idNovel, chapterPrevious.no]\"> Previous </a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column\">\n\t\t\t\t\t<a class=\"button is-large is-primary\" [routerLink]=\"['/novel/', idNovel]\"> Table of Contents </a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column\">\n\t\t\t\t\t<a class=\"button is-large is-primary\" *ngIf=\"chapterNext\" [routerLink]=\"['/novel/', idNovel, chapterNext.no]\"> Next </a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-container *ngTemplateOutlet=\"controlButtons\"></ng-container>\n\t\t<ng-container *ngIf=\"chapter\">\n\t\t\t<h1 class='title'>{{ this.renderedTitle }}</h1>\n\t\t\t<hr />\n\t\t\t<div class=\"novel-content\" innerHTML=\"{{ this.renderedText }}\">\n\n\t\t\t</div>\n\t\t</ng-container>\n\t\t<ng-container *ngTemplateOutlet=\"controlButtons\"></ng-container>\n\t</div>\n\n\t<div class=\"show-sidebar\" (click)=\"toogleSidebar()\">AHHHHHHH</div>\n\t<div class=\"sidebar\" [hidden]=\"!showSidebar\">\n\t\t<app-chapter-sidebar (Sidebar2Chapter)=\"translateText($event)\"></app-chapter-sidebar>\n\t</div>\n</div>","import { ElementRef, Injectable, QueryList, ViewChildren } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ApiService } from '../api';\nimport { DictionaryCategory, DictionaryEntry, EntryForm } from '../_models';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  idDictionary: number;\n\n  categories: DictionaryCategory[] = [];\n  categoriesOriginalValues: DictionaryCategory[] = [];\n\n  indexes: string[] = [];\n\n  @ViewChildren('categoryDOM') public DOMcategories: QueryList<ElementRef<HTMLDivElement>>;\n\n  constructor(\n    public api: ApiService\n  ) { }\n\n  rebuildCache(resolveDic): void {\n    this.api.Category.getAll({ idDictionary: this.idDictionary })\n      .then((categories) => {\n\n        this.categories = Object.values(categories);\n        const LoadedPromise = [];\n\n        this.categories.forEach((category, categoryIndex) => {\n          LoadedPromise.push(new Promise<void>((resolveCat, rejectCat) => {\n\n            this.api.Entry.getAll({ idDictionary: this.idDictionary, idCategory: category.id })\n              .then((entries) => {\n                LoadedPromise.push(new Promise<void>((resolveEnt, rejectEnt) => {\n                  /** @var DictionaryEntry[] category.entries */\n                  category.entries = Object.values(entries);\n                  resolveEnt();\n                }));\n              });\n            resolveCat();\n          }));\n        });\n\n        Promise.all(LoadedPromise)\n          .then(_ => {\n            this.categoriesOriginalValues = JSON.parse(JSON.stringify(this.categories));\n            resolveDic();\n          });\n      });\n  }\n  addEntry(category, category_id, category_index:number) {\n    if (!category.entries) {\n      category.entries = [];\n    }\n    category.entries.push(new EntryForm());\n\n    // Wait until new input is rendered to focus it\n    setTimeout(() => {\n      let DOMLi: HTMLDivElement;\n      let DOMInput: HTMLInputElement;\n      if (this.DOMcategories){\n        let DOMcategory = this.DOMcategories.toArray()[category_index];\n        if (DOMcategory) {\n          DOMLi = DOMcategory.nativeElement;\n        }\n      }\n      // Fallback for AOT\n      if (!DOMInput) {\n        DOMLi = <HTMLDivElement>document.getElementById(\"categoryDOM-\" + category_index);\n      }\n      DOMInput = (DOMLi.children[DOMLi.children.length - 2].children[0] as HTMLInputElement);\n      DOMInput.focus();\n    },150)\n  }\n  addCategory() {\n    this.categories.push(new DictionaryCategory(null, this.idDictionary));\n  }\n\n\n  changeEntry(entry: EntryForm, catIdx?: number, entIdx?: number) {\n    if (entry.reset) {\n      if (this.categories[catIdx].entries[entIdx].id) {\n        this.categories[catIdx].entries[entIdx] = new EntryForm(this.categoriesOriginalValues[catIdx].entries[entIdx]);\n      } else {\n        this.categories[catIdx].entries[entIdx] = new EntryForm(null, this.categories[catIdx].id);\n      }\n    } else {\n      if (entry.delete) {\n        if (!entry.id) {\n          this.categories[catIdx].entries.splice(entIdx, 1);\n        }\n      } else {\n        if (entry.id) {\n          entry.update = entry.entryOriginal    !== this.categoriesOriginalValues[catIdx].entries[entIdx].entryOriginal\n                      || entry.entryTranslation !== this.categoriesOriginalValues[catIdx].entries[entIdx].entryTranslation\n                      || entry.description      !== this.categoriesOriginalValues[catIdx].entries[entIdx].description\n                      || entry.idCategory       !== this.categoriesOriginalValues[catIdx].entries[entIdx].idCategory\n            ;\n        }\n      }\n    }\n  }\n  changeCategory(category, idx) {\n    if (category.id) {\n      category.update = category.name !== this.categoriesOriginalValues[idx].name;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { Chapter } from '../../_models/chapter';\nimport { Novel } from '../../_models/novel';\nimport { environment } from 'src/environments/environment';\nimport { Dictionary } from 'src/app/_models/dictionary';\n\n@Component({\n  selector: 'app-chapter-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  chapters: Chapter[] = [];\n  dictionaries: Dictionary[] = [];\n  novel: Novel;\n  idNovel: number;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    ) { }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.api.Novel.get({id: this.idNovel})\n                .then(novel => {\n                  this.novel = novel;\n                  this.api.Dictionary.getAll({idNovel: this.idNovel})\n                          .then(dictionaries => {\n                            this.dictionaries = Object.values(dictionaries);\n                            this.api.Chapter.getAll({idNovel: this.idNovel})\n                                            .then(chapters => {\n                                              this.chapters = Object.values(chapters);\n                                            });\n                          });\n                });\n  }\n\n  openGT(chapter: Chapter, dictionary: Dictionary) {\n      let url = `${environment.backendServer}/static/${this.idNovel}/${dictionary.id}/${chapter.no}/1`;\n      url = 'https://translate.google.com/translate?sl=auto&tl=en&u=' + url;\n      window.open(url);\n  }\n\n  updateChapters() {\n    this.api.Chapter.autoUpdate({ idNovel : this.idNovel })\n      .then(res => {\n        /**\n         * Update the list too\n         */\n        this.api.Chapter.getAll({ idNovel: this.idNovel })\n                      .then(chapters => {\n                        this.chapters = Object.values(chapters);\n                      });\n      }, err => {\n        console.log(err);\n      });\n  }\n\n}\n","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n        <div class=\"column\">\n            <a [routerLink]=\"['/novel/', idNovel,'dictionary']\" class=\"button is-primary\">Dictionary</a>\n        </div>\n\t\t<div class=\"column\" *ngIf=\"novel && novel.driver == 'manual'\">\n\t\t\t<a routerLink=\"['/novel/',idNovel,'add']\" class=\"button is-info\">Import Chapter</a>\n\t\t</div>\n\t\t<div class=\"column\" *ngIf=\"novel && novel.driver != 'manual'\">\n\t\t\t<a (click)=\"updateChapters()\" class=\"button is-info\">Update Chapters</a>\n\t\t</div>\n\t\t<!--div class=\"column\" *ngIf=\"novel && novel.driver == 'syosetu'\">\n\t\t\t<a (click)=\"downloadChapter()\" class=\"button is-info\">Add Next Chapter</a>\n\t\t</div-->\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Number</th>\n\t\t\t\t<th>Title</th>\n\t\t\t\t<th>Date Created</th>\n\t\t\t\t<th>Date Updated</th>\n\t\t\t\t<th>Dictionary<br />Google Translator</th>\n\t\t\t\t<!--th>Actions</th-->\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let chapter of chapters\" >\n\t\t\t\t<tr title=\"{{ novel.title }}\">\n\t\t\t\t\t<td>{{ chapter.no }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', chapter.idNovel, chapter.no]\">{{ chapter.title }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', chapter.idNovel, chapter.no]\">{{ chapter.dateOriginalPost }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', chapter.idNovel, chapter.no]\">{{ chapter.dateOriginalRevision }}</td>\n                    <!--td><ng-container *ngIf=\"chapter.hasText == 1; then success else danger\"></ng-container></td-->\n                    <td>\n                        <a *ngFor=\"let dictionary of dictionaries\" (click)=\"openGT(chapter,dictionary);\">{{dictionary.language}}</a>\n                    </td>\n\t\t\t\t\t<!--td>\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/', chapter.idNovel, chapter.no, 'edit']\">UPD</a>\n\t\t\t\t\t\t/\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/', chapter.idNovel, chapter.no, 'del']\">DEL</a>\n\t\t\t\t\t</td-->\n\t\t\t\t\t<ng-template #success>\n\t\t\t\t\t\t<a class='button is-success'>\n\t\t\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</ng-template>\n\t\t\t\t\t<ng-template #danger>\n\t\t\t\t\t\t<a class='button is-danger'>\n\t\t\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i class=\"fas fa-times\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgModel } from '@angular/forms';\n\nimport { DictionaryEntry, EntryForm } from '../../_models/dictionaryentry';\nimport { DictionaryCategory } from '../../_models/dictionarycategory';\nimport { Dictionary } from '../../_models/dictionary';\nimport { ApiService } from 'src/app/api';\nimport { environment } from 'src/environments/environment';\nimport { Novel } from 'src/app/_models/novel';\nimport { CacheService } from '../cache.service';\nimport { DetailComponent } from '../detail/detail.component';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-chapter-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent extends FormService implements OnInit, OnDestroy {\n\n  @Output() Sidebar2Chapter: EventEmitter<DictionaryCategory[]> = new EventEmitter<DictionaryCategory[]>();\n\n  dictionaries: Dictionary[] = [];\n  categories: DictionaryCategory[] = [];\n\n  idCategory: number;\n  idDictionary: number;\n  idNovel: number;\n  novel: Novel;\n\n  dictionarySelector: any = '';\n\n  constructor(\n      public api: ApiService\n    , private route: ActivatedRoute\n  ) {\n    super(api);\n  }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n\n    this.api.Dictionary.getAll({idNovel: this.idNovel})\n      .then((dictionaries: Dictionary[]) => {\n        this.dictionaries = dictionaries;\n        this.dictionarySelector = dictionaries[0].id;\n        this.dictionarySelected(this.dictionarySelector);\n      });\n  }\n  ngOnDestroy() {\n    delete this.dictionaries;\n    delete this.categories;\n    delete this.categoriesOriginalValues;\n    delete this.idCategory;\n    delete this.idDictionary;\n    delete this.idNovel;\n    delete this.dictionarySelector;\n    console.log('destroy Sidebar');\n  }\n  dictionarySelected(idDictionary: number) {\n    this.idDictionary = idDictionary;\n    this.getCache();\n  }\n  private getCache() {\n    if (this.categories.length === 0) {\n      this.api.Dictionary.getCache(this.idDictionary)\n        .then((status) => {\n          this.PrepareCacheThenTranslate(status);\n        });\n    } else {\n      this.refreshTranslation();\n    }\n  }\n  private PrepareCacheThenTranslate(status) {\n    if (status) {\n      const loadedDictionary = new Promise<void>((resolveDic, rejectDic) => {\n        this.rebuildCache(resolveDic);\n      });\n\n      loadedDictionary.then(_ => {\n        this.refreshTranslation();\n      });\n    }\n  }\n\n  refreshTranslation() {\n    this.Sidebar2Chapter.emit(this.categories);\n  }\n  refreshOriginal() {\n    this.Sidebar2Chapter.emit([]);\n  }\n  saving: boolean = false;\n  saveModifications() {\n    this.saving = true;\n    this.api.Dictionary.fullSave(this.idDictionary, this.categories)\n      .then(res => {\n        this.categories = [];\n        this.getCache();\n        this.refreshTranslation();\n\n        this.saving = false;\n        console.log(res);\n      });\n  }\n\n  openOutside(translate) {\n    const no = this.route.snapshot.params.noChapter;\n    let url = `${environment.backendServer}/static/${this.idNovel}/${this.idDictionary}/${no}/`;\n    if (translate) {\n      url = 'https://translate.google.com/translate?sl=auto&tl=en&u=' + url;\n    }\n    window.open(url);\n  }\n}\n","<div class=\"dictionaryList\" *ngIf=\"dictionaries.length > 0\">\n    <ul>\n        <li class=\"dictionary-selector\" *ngIf=\"dictionaries.length > 0\">\n            <select class='select' [(ngModel)]=\"dictionarySelector\" (change)=\"dictionarySelected($event.target.value)\">\n                <option value='' selected='selected'>Choose a language</option>\n                <option *ngFor=\"let option of dictionaries\" value=\"{{option.id}}\">{{ option.language }}</option>\n            </select>\n            <input type=\"button\" class=\"button is-small is-info\" value=\"Refresh Translation\" (click)=\"refreshTranslation()\" />\n            <input type=\"button\" class=\"button is-small is-warning\" value=\"Refresh to Original\" (click)=\"refreshOriginal()\" />\n        </li>\n    </ul>\n    <ul>\n        <li class=\"dictionary-buttons\">\n            <input type=\"button\" (click)=\"saveModifications()\" value='Save Modifications' class=\"button is-small is-danger\" [disabled]=\"saving\"  />\n            <input type=\"button\" (click)=\"openOutside(true)\" value='Google Translate' class=\"button is-small is-info\" />\n            <input type=\"button\" (click)=\"openOutside(false)\" value='Open Keyword Translated Raw' class=\"button is-small is-warning\" />\n        </li>\n    </ul>\n    <div class=\"interactiveBox\">\n        <ul class='categories'>\n            <ng-container *ngFor=\"let category of categories; let i = index\">\n                <li>\n                    <h1 (click)=\"selectOpenCategory = i\"  [ngClass]=\"{'changed': category.update == true, 'new': category.id == null, 'category-selected': (selectOpenCategory == i) }\">\n                        <input class=\"category-name\" type=\"text\" [(ngModel)]=\"category.name\"\n                                placeholder=\"Category Name\" (ngModelChange)=\"changeCategory(category,i)\" />\n                    </h1>\n                </li>\n            </ng-container>\n            <li>\n                <h1 class=\"categoryButtonRow\">\n                    <input type=\"button\" (click)=\"addCategory()\" value='+ Add new Category' class=\"button is-small is-primary\" />\n                </h1>\n            </li>\n        </ul>\n        <div class=\"entries\">\n            <ul class=\"entries-container\">\n                <li [ngClass]=\"{'hidden': (selectOpenCategory != null)}\">\n                    <p class=\"hint\">\n                        &LT;- Select a category\n                    </p>\n                </li>\n                <ng-container *ngFor=\"let category of categories; let i = index\">\n                    <li [ngClass]=\"{'hidden': (selectOpenCategory != i)}\">\n                        <div class=\"category-entry-container\" #categoryDOM id=\"categoryDOM-{{i}}\">\n                            <div *ngFor=\"let entry of category.entries; let j = index\" class=\"entry\" [ngClass]=\"{'changed': entry.update == true, 'deleted': entry.delete == true, 'new': entry.id == null }\">\n                                <input class=\"entry-original\" type=\"text\" [(ngModel)]=\"entry.entryOriginal\" placeholder=\"Original\" (ngModelChange)=\"changeEntry(entry, i, j)\" #entry id=\"entry-{{i}}-{{j}}\" />\n                                <input class=\"entry-translation\" type=\"text\" [(ngModel)]=\"entry.entryTranslation\" placeholder=\"Translation\" (ngModelChange)=\"changeEntry(entry, i, j)\" />\n                                <input class=\"entry-description\" type=\"text\" [(ngModel)]=\"entry.description\" placeholder=\"Description\" (ngModelChange)=\"changeEntry(entry, i, j)\" />\n                                <label class=\"deleteButton\">\n                                    <i class=\"fas fa-trash\"></i>\n                                    <input type=\"checkbox\" class=\"hidden\" [(ngModel)]=\"entry.delete\" title=\"Delete\" (change)=\"changeEntry(entry, i, j)\" />\n                                </label>\n                                <label class=\"resetButton\">\n                                    <i class=\"fas fa-sync-alt\"></i>\n                                    <input type=\"checkbox\" class=\"hidden\" [(ngModel)]=\"entry.reset\" title=\"Reset\" (change)=\"changeEntry(entry, i, j)\" />\n                                </label>\n                                <!--input  type=\"hidden\" [(ngModel)]=\"entry.update\" /-->\n                                <input type=\"hidden\" [(ngModel)]=\"entry.idCategory\" />\n                            </div>\n                            <div class=\"entry-spacer\"></div>\n                        </div>\n                        <input type=\"button\" (click)=\"addEntry(category, category.id, i)\" value='+ Add new Entry' class=\"addNewEntryButton\" />\n                    </li>\n                </ng-container>\n            </ul>\n        </div>\n    </div>\n    <ul>\n        <li class=\"dictionary-buttons\">\n            <input type=\"button\" (click)=\"saveModifications()\" value='Save Modifications'  class=\"button is-small is-danger\" [disabled]=\"saving\"  />\n            <input type=\"button\" (click)=\"openOutside(true)\" value='Google Translate' class=\"button is-small is-info\" />\n            <input type=\"button\" (click)=\"openOutside(false)\" value='Open Keyword Translated Raw'  class=\"button is-small is-warning\" />\n        </li>\n    </ul>\n</div>\n"],"names":["RouterModule","ListComponent","DetailComponent","routes","path","component","data","title","loadChildren","then","m","DictionaryModule","breadcrumb","redirectTo","ChapterRoutingModule","forChild","imports","exports","CommonModule","SidebarComponent","FormsModule","ChapterModule","declarations","i0","constructor","router","route","sanitized","api","showSidebar","ngOnInit","loadedChapter","Promise","resolve","loadedChapterResolve","startContent","ngOnDestroy","console","log","ngDoCheck","noChapter","snapshot","params","Sidebar","categories","translateText","idNovel","all","Novel","get","id","Chapter","no","text","values","novel","chapter","renderDataView","cacheAdjecentChapters","prev","previous","chapterPrevious","next","numberChapters","Next","chapterNext","renderedTitle","renderedText","textRevision","textOriginal","_","length","entries","forEach","category","entry","entryOriginal","push","entryTranslation","idEntry","idCategory","name","i","regex","RegExp","replace","toogleSidebar","selectors","viewQuery","ctx","DictionaryCategory","EntryForm","FormService","rebuildCache","resolveDic","Category","getAll","idDictionary","Object","LoadedPromise","categoryIndex","resolveCat","rejectCat","Entry","resolveEnt","rejectEnt","categoriesOriginalValues","JSON","parse","stringify","addEntry","category_id","category_index","setTimeout","DOMLi","DOMInput","DOMcategories","DOMcategory","toArray","nativeElement","document","getElementById","children","focus","addCategory","changeEntry","catIdx","entIdx","reset","delete","splice","update","description","changeCategory","idx","factory","providedIn","environment","ctx_r6","ctx_r15","Dictionary","dictionaries","chapters","openGT","dictionary","url","backendServer","window","open","updateChapters","autoUpdate","res","err","decls","vars","consts","template","EventEmitter","ctx_r8","ctx_r9","ctx_r10","ctx_r16","ctx_r26","ctx_r29","ctx_r32","ctx_r35","ctx_r38","ctx_r42","ctx_r44","ctx_r46","ctx_r47","ctx_r48","ctx_r49","ctx_r50","ctx_r51","dictionarySelector","dictionarySelected","getCache","status","PrepareCacheThenTranslate","refreshTranslation","loadedDictionary","rejectDic","Sidebar2Chapter","emit","refreshOriginal","saveModifications","saving","fullSave","openOutside","translate","outputs","features"],"sourceRoot":"webpack:///"}