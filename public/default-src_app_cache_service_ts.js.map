{"version":3,"file":"default-src_app_cache_service_ts.js","mappings":"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G1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyF,YAAT,CAAsB+M,QAAtB,EAAgCC,eAAhC,EAAiD;AAC7C,SAAOf,WAAW,CAACjM,YAAZ,CAAyB+M,QAAzB,EAAmCC,eAAnC,EAAoD,IAApD,CAAP;AACH;;AACD3S,oBAAA,GAAuB2F,YAAvB;;;;;;;;;;;AC5Ca;;AACb7F,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2F,UAAT,CAAoB8M,eAApB,EAAqC;AACjC,SAAOf,WAAW,CAAC/L,UAAZ,CAAuB8M,eAAvB,EAAwC,IAAxC,CAAP;AACH;;AACD3S,kBAAA,GAAqB6F,UAArB;;;;;;;;;;;ACvCa;;AACb/F,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,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,CAAzB,EAA4B,CAAC,IAAD,EAAOlQ,MAAP,CAAc2P,WAAd,CAA5B,CAAf,CAAP;AACH;;AACD/S,cAAA,GAAiBoD,MAAjB;;;;;;;;;;;AC5Da;;AACbtD,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoG,SAAT,GAAqB;AACjB,SAAOsL,WAAW,CAACtL,SAAZ,GAAwB,IAAxB,CAAP;AACH;;AACDtG,iBAAA,GAAoBsG,SAApB;;;;;;;;;;;ACtDa;;AACbxG,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsG,SAAT,CAAmBsM,OAAnB,EAA4B;AACxB,SAAOlB,WAAW,CAACpL,SAAZ,CAAsBsM,OAAtB,EAA+B,IAA/B,CAAP;AACH;;AACD9S,iBAAA,GAAoBwG,SAApB;;;;;;;;;;;ACzDa;;AACb1G,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwG,WAAT,CAAqB8M,eAArB,EAAsC;AAClC,SAAO5B,WAAW,CAAClL,WAAZ,CAAwB8M,eAAxB,EAAyC,IAAzC,CAAP;AACH;;AACDxT,mBAAA,GAAsB0G,WAAtB;;;;;;;;;;;ACtDa;;AACb5G,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0G,KAAT,CAAe6M,SAAf,EAA0B;AACtB,SAAO7B,WAAW,CAAChL,KAAZ,CAAkB6M,SAAlB,EAA6B,IAA7B,CAAP;AACH;;AACDzT,aAAA,GAAgB4G,KAAhB;;;;;;;;;;;ACtDa;;AACb9G,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4G,QAAT,CAAkB+K,gBAAlB,EAAoC;AAChC,SAAOD,WAAW,CAAC9K,QAAZ,CAAqB+K,gBAArB,EAAuC,IAAvC,CAAP;AACH;;AACD7R,gBAAA,GAAmB8G,QAAnB;;;;;;;;;;;AChDa;;AACbhH,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIsB,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;;AACA,IAAI0R,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8G,YAAT,CAAsB0M,OAAtB,EAA+B3B,SAA/B,EAA0C;AACtC,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG9R,MAAM,CAAC2C,cAAnB;AAAoC;;AAChE,SAAOgP,WAAW,CAAC5K,YAAZ,CAAyB0M,OAAzB,EAAkC3B,SAAlC,EAA6C,IAA7C,CAAP;AACH;;AACD/R,oBAAA,GAAuBgH,YAAvB;;;;;;;;;;;ACtDa;;AACblH,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgH,cAAT,CAAwByM,YAAxB,EAAsC;AAClC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,IAAf;AAAsB;;AACrD,SAAO/B,WAAW,CAAC1K,cAAZ,CAA2ByM,YAA3B,EAAyC,IAAzC,CAAP;AACH;;AACD3T,sBAAA,GAAyBkH,cAAzB;;;;;;;;;;;ACtCa;;AACbpH,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIsB,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;;AACA,IAAI0R,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkH,KAAT,CAAeA,KAAf,EAAsB2K,SAAtB,EAAiC;AAC7B,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG9R,MAAM,CAAC2C,cAAnB;AAAoC;;AAChE,SAAOgP,WAAW,CAACxK,KAAZ,CAAkBA,KAAlB,EAAyB2K,SAAzB,EAAoC,IAApC,CAAP;AACH;;AACD/R,aAAA,GAAgBoH,KAAhB;;;;;;;;;;;AC/Ca;;AACbtH,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoH,SAAT,CAAmBsM,qBAAnB,EAA0CC,iBAA1C,EAA6D;AACzD,SAAOjC,WAAW,CAACtK,SAAZ,CAAsBsM,qBAAtB,EAA6CC,iBAA7C,EAAgE,IAAhE,CAAP;AACH;;AACD7T,iBAAA,GAAoBsH,SAApB;;;;;;;;;;;ACnDa;;AACbxH,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsH,aAAT,GAAyB;AACrB,SAAOoK,WAAW,CAACpK,aAAZ,GAA4B,IAA5B,CAAP;AACH;;AACDxH,qBAAA,GAAwBwH,aAAxB;;;;;;;;;;;AC9Ca;;AACb1H,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwH,QAAT,CAAkBoM,WAAlB,EAA+BC,OAA/B,EAAwC;AACpC,SAAOnC,WAAW,CAAClK,QAAZ,CAAqBoM,WAArB,EAAkCC,OAAlC,EAA2C,IAA3C,CAAP;AACH;;AACD/T,gBAAA,GAAmB0H,QAAnB;;;;;;;;;;;ACnDa;;AACb5H,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0H,oBAAT,CAA8BoM,OAA9B,EAAuCF,WAAvC,EAAoD;AAChD,SAAOlC,WAAW,CAAChK,oBAAZ,CAAiCoM,OAAjC,EAA0CF,WAA1C,EAAuD,IAAvD,CAAP;AACH;;AACD9T,4BAAA,GAA+B4H,oBAA/B;;;;;;;;;;;AC9Ca;;AACb9H,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4H,uBAAT,CAAiC3J,GAAjC,EAAsC6V,OAAtC,EAA+C;AAC3C,SAAOpC,WAAW,CAAC9J,uBAAZ,CAAoC3J,GAApC,EAAyC6V,OAAzC,EAAkD,IAAlD,CAAP;AACH;;AACDhU,+BAAA,GAAkC8H,uBAAlC;;;;;;;;;;;ACjEa;;AACbhI,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8H,GAAT,CAAaiM,cAAb,EAA6BC,KAA7B,EAAoCvU,QAApC,EAA8C;AAC1C,SAAOiS,WAAW,CAACuC,GAAZ,CAAgBF,cAAhB,EAAgCC,KAAhC,EAAuCvU,QAAvC,EAAiD,IAAjD,CAAP;AACH;;AACDK,WAAA,GAAcgI,GAAd;;;;;;;;;;;AClDa;;AACblI,8CAA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;;;;;;;;;;ACvDa;;AACb5I,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0I,MAAT,CAAgB6K,SAAhB,EAA2Ba,OAA3B,EAAoC;AAChC,SAAO1C,WAAW,CAAChJ,MAAZ,CAAmB6K,SAAnB,EAA8Ba,OAA9B,EAAuC,IAAvC,CAAP;AACH;;AACDtU,cAAA,GAAiB4I,MAAjB;;;;;;;;;;;AC9Ca;;AACb9I,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6I,QAAT,CAAkByL,QAAlB,EAA4B;AACxB,SAAO5C,WAAW,CAAC6C,QAAZ,CAAqBD,QAArB,EAA+B,IAA/B,CAAP;AACH;;AACDxU,gBAAA,GAAmB+I,QAAnB;;;;;;;;;;;AC5Ea;;AACbjJ,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+I,IAAT,CAAcwK,SAAd,EAAyBa,OAAzB,EAAkC;AAC9B,SAAO1C,WAAW,CAAC3I,IAAZ,CAAiBwK,SAAjB,EAA4Ba,OAA5B,EAAqC,IAArC,CAAP;AACH;;AACDtU,YAAA,GAAeiJ,IAAf;;;;;;;;;;;ACxCa;;AACbnJ,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiJ,SAAT,CAAmBsK,SAAnB,EAA8Ba,OAA9B,EAAuC;AACnC,SAAO1C,WAAW,CAACzI,SAAZ,CAAsBsK,SAAtB,EAAiCa,OAAjC,EAA0C,IAA1C,CAAP;AACH;;AACDtU,iBAAA,GAAoBmJ,SAApB;;;;;;;;;;;ACxCa;;AACbrJ,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmJ,KAAT,GAAiB;AACb,MAAIqL,IAAI,GAAG,EAAX;;AACA,OAAK,IAAI1B,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC3S,MAAh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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiK,GAAT,CAAa2I,OAAb,EAAsBwB,OAAtB,EAA+B;AAC3B,SAAO1C,WAAW,CAACzH,GAAZ,CAAgB2I,OAAhB,EAAyBwB,OAAzB,EAAkC,IAAlC,CAAP;AACH;;AACDtU,WAAA,GAAcmK,GAAd;;;;;;;;;;;ACvCa;;AACbrK,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmK,KAAT,CAAe1L,KAAf,EAAsB;AAClB,SAAOiT,WAAW,CAACvH,KAAZ,CAAkB1L,KAAlB,EAAyB,IAAzB,CAAP;AACH;;AACDqB,aAAA,GAAgBqK,KAAhB;;;;;;;;;;;AChCa;;AACbvK,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqK,WAAT,GAAuB;AACnB,SAAOqH,WAAW,CAACrH,WAAZ,GAA0B,IAA1B,CAAP;AACH;;AACDvK,mBAAA,GAAsBuK,WAAtB;;;;;;;;;;;AClDa;;AACbzK,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuK,GAAT,CAAaqK,QAAb,EAAuB;AACnB,SAAOlD,WAAW,CAACnH,GAAZ,CAAgBqK,QAAhB,EAA0B,IAA1B,CAAP;AACH;;AACD9U,WAAA,GAAcyK,GAAd;;;;;;;;;;;ACrCa;;AACb3K,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIsB,MAAM,GAAGC,mBAAO,CAAC,iBAAD,CAApB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiE,KAAT,GAAiB;AACb,MAAI4O,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC3S,MAAhC,EAAwCuT,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,WAAW,CAACC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,SAAO,KAAKI,IAAL,CAAUC,IAAV,CAAepT,MAAM,CAACkE,KAAP,CAAamP,KAAb,CAAmB,KAAK,CAAxB,EAA2B,CAAC,IAAD,EAAOlQ,MAAP,CAAc2P,WAAd,CAA3B,CAAf,CAAP;AACH;;AACD/S,aAAA,GAAgBmE,KAAhB;;;;;;;;;;;ACzDa;;AACbrE,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0K,QAAT,CAAkB2J,UAAlB,EAA8B;AAC1B,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAChH,QAAZ,CAAqB2J,UAArB,EAAiC,IAAjC,CAAP;AACH;;AACDvU,gBAAA,GAAmB4K,QAAnB;;;;;;;;;;;ACnDa;;AACb9K,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4K,QAAT,CAAkBgI,OAAlB,EAA2ByB,UAA3B,EAAuC;AACnC,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAC9G,QAAZ,CAAqBgI,OAArB,EAA8ByB,UAA9B,EAA0C,IAA1C,CAAP;AACH;;AACDvU,gBAAA,GAAmB8K,QAAnB;;;;;;;;;;;ACzDa;;AACbhL,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgL,UAAT,CAAoBsI,eAApB,EAAqCe,UAArC,EAAiD;AAC7C,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAAC1G,UAAZ,CAAuBsI,eAAvB,EAAwCe,UAAxC,EAAoD,IAApD,CAAP;AACH;;AACDvU,kBAAA,GAAqBkL,UAArB;;;;;;;;;;;ACzCa;;AACbpL,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkL,SAAT,CAAmB2J,WAAnB,EAAgCC,IAAhC,EAAsCT,UAAtC,EAAkD;AAC9C,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG/B,MAAM,CAACC,iBAApB;AAAwC;;AACrE,SAAOb,WAAW,CAACxG,SAAZ,CAAsB2J,WAAtB,EAAmCC,IAAnC,EAAyCT,UAAzC,EAAqD,IAArD,CAAP;AACH;;AACDvU,iBAAA,GAAoBoL,SAApB;;;;;;;;;;;ACtCa;;AACbtL,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoL,GAAT,CAAawJ,QAAb,EAAuB;AACnB,SAAOlD,WAAW,CAACtG,GAAZ,CAAgBwJ,QAAhB,EAA0B,IAA1B,CAAP;AACH;;AACD9U,WAAA,GAAcsL,GAAd;;;;;;;;;;;ACrCa;;AACbxL,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsL,SAAT,CAAmByJ,uBAAnB,EAA4CrC,QAA5C,EAAsD;AAClD,SAAOhB,WAAW,CAACpG,SAAZ,CAAsByJ,uBAAtB,EAA+CrC,QAA/C,EAAyD,IAAzD,CAAP;AACH;;AACD5S,iBAAA,GAAoBwL,SAApB;;;;;;;;;;;ACrGa;;AACb1L,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwL,SAAT,CAAmBqG,SAAnB,EAA8B3K,KAA9B,EAAqC;AACjC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,CAAR;AAAY;;AACpC,SAAOwK,WAAW,CAAClG,SAAZ,CAAsBqG,SAAtB,EAAiC3K,KAAjC,EAAwC,IAAxC,CAAP;AACH;;AACDpH,iBAAA,GAAoB0L,SAApB;;;;;;;;;;;ACrDa;;AACb5L,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqE,iBAAT,GAA6B;AACzB,MAAI2Q,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIlC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,SAAS,CAAC3S,MAAhC,EAAwCuT,EAAE,EAA1C,EAA8C;AAC1CkC,IAAAA,WAAW,CAAClC,EAAD,CAAX,GAAkBZ,SAAS,CAACY,EAAD,CAA3B;AACH;;AACD,SAAOpB,WAAW,CAACrN,iBAAZ,CAA8B+O,KAA9B,CAAoC,KAAK,CAAzC,EAA4C4B,WAA5C,EAAyD,IAAzD,CAAP;AACH;;AACDlV,yBAAA,GAA4BuE,iBAA5B;;;;;;;;;;;ACxEa;;AACbzE,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2L,QAAT,GAAoB;AAChB,SAAO+F,WAAW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AAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwN,IAAT,CAAcqH,WAAd,EAA2BC,IAA3B,EAAiC;AAC7B,MAAI5C,SAAS,CAAC3S,MAAV,IAAoB,CAAxB,EAA2B;AACvB,WAAOmS,WAAW,CAAClE,IAAZ,CAAiBqH,WAAjB,EAA8BC,IAA9B,EAAoC,IAApC,CAAP;AACH;;AACD,SAAOpD,WAAW,CAAClE,IAAZ,CAAiBqH,WAAjB,EAA8B,IAA9B,CAAP;AACH;;AACD/U,YAAA,GAAe0N,IAAf;;;;;;;;;;;AC/Ca;;AACb5N,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0N,aAAT,CAAuB2H,SAAvB,EAAkCC,QAAlC,EAA4C;AACxC,SAAO5D,WAAW,CAAChE,aAAZ,CAA0B2H,SAA1B,EAAqCC,QAArC,EAA+C,IAA/C,CAAP;AACH;;AACDxV,qBAAA,GAAwB4N,aAAxB;;;;;;;;;;;AC1Da;;AACb9N,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS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mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiP,SAAT,CAAmB2D,OAAnB,EAA4B;AACxB,SAAOlB,WAAW,CAACzC,SAAZ,CAAsB2D,OAAtB,EAA+B,IAA/B,CAAP;AACH;;AACD9S,iBAAA,GAAoBmP,SAApB;;;;;;;;;;;AC7Ca;;AACbrP,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmP,WAAT,CAAqBmE,eAArB,EAAsC;AAClC,SAAO5B,WAAW,CAACvC,WAAZ,CAAwBmE,eAAxB,EAAyC,IAAzC,CAAP;AACH;;AACDxT,mBAAA,GAAsBqP,WAAtB;;;;;;;;;;;ACzCa;;AACbvP,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqP,IAAT,CAAc3I,KAAd,EAAqB;AACjB,SAAOgL,WAAW,CAACrC,IAAZ,CAAiB3I,KAAjB,EAAwB,IAAxB,CAAP;AACH;;AACD5G,YAAA,GAAeuP,IAAf;;;;;;;;;;;ACvCa;;AACbzP,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuP,QAAT,CAAkB7I,KAAlB,EAAyB;AACrB,SAAOgL,WAAW,CAACnC,QAAZ,CAAqB7I,KAArB,EAA4B,IAA5B,CAAP;AACH;;AACD5G,gBAAA,GAAmByP,QAAnB;;;;;;;;;;;AC1Ca;;AACb3P,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyP,SAAT,CAAmB0F,QAAnB,EAA6B;AACzB,SAAOzD,WAAW,CAACjC,SAAZ,CAAsB0F,QAAtB,EAAgC,IAAhC,CAAP;AACH;;AACDrV,iBAAA,GAAoB2P,SAApB;;;;;;;;;;;ACxCa;;AACb7P,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2P,SAAT,CAAmB4D,SAAnB,EAA8B;AAC1B,SAAO7B,WAAW,CAAC/B,SAAZ,CAAsB4D,SAAtB,EAA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sB,SAAtB,EAAiC,IAAjC,CAAP;AACH;;AACD/R,iBAAA,GAAoByQ,SAApB;;;;;;;;;;;ACda;;AACb3Q,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyQ,OAAT,GAAmB;AACf,SAAOiB,WAAW,CAACjB,OAAZ,GAAsB,IAAtB,CAAP;AACH;;AACD3Q,eAAA,GAAkB2Q,OAAlB;;;;;;;;;;;AC7Ba;;AACb7Q,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2Q,MAAT,CAAgBkF,gBAAhB,EAAkC;AAC9B,SAAOnE,WAAW,CAACf,MAAZ,CAAmBkF,gBAAnB,EAAqC,IAArC,CAAP;AACH;;AACD/V,cAAA,GAAiB6Q,MAAjB;;;;;;;;;;;AC1Ca;;AACb/Q,8CAA6C;AAAEnB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIiT,WAAW,GAAG1R,mBAAO,CAAC,2BAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6Q,WAAT,CAAqBiF,UAArB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ACA,IAAI8pB,cAAJ;;AACA,SAASC,UAAT,GAAsB;AAClB9rB,EAAAA,uDAAA,GAAgB9D,SAAhB;;AACA,MAAI;AACA,WAAO2vB,cAAc,CAAC1wB,KAAf,CAAqB,IAArB,EAA2BlB,SAA3B,CAAP;AACH,GAFD,CAGA,OAAOwL,CAAP,EAAU;AACNzF,IAAAA,uDAAA,GAAgByF,CAAhB;AACA,WAAOzF,qDAAP;AACH,GAND,SAOQ;AACJ6rB,IAAAA,cAAc,GAAG3vB,SAAjB;AACH;AACJ;;AACM,SAASgF,QAAT,CAAkB6qB,EAAlB,EAAsB;AACzBF,EAAAA,cAAc,GAAGE,EAAjB;AACA,SAAOD,UAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErGA","sources":["./src/app/cache.service.ts","./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs-compat/Rx.js","./node_modules/rxjs-compat/add/observable/bindCallback.js","./node_modules/rxjs-compat/add/observable/bindNodeCallback.js","./node_modules/rxjs-compat/add/observable/combineLatest.js","./node_modules/rxjs-compat/add/observable/concat.js","./node_modules/rxjs-compat/add/observable/defer.js","./node_modules/rxjs-compat/add/observable/dom/ajax.js","./node_modules/rxjs-compat/add/observable/dom/webSocket.js","./node_modules/rxjs-compat/add/observable/empty.js","./node_modules/rxjs-compat/add/observable/forkJoin.js","./node_modules/rxjs-compat/add/observable/from.js","./node_modules/rxjs-compat/add/observable/fromEvent.js","./node_modules/rxjs-compat/add/observable/fromEventPattern.js","./node_modules/rxjs-compat/add/observable/fromPromise.js","./node_modules/rxjs-compat/add/observable/generate.js","./node_modules/rxjs-compat/add/observable/if.js","./node_modules/rxjs-compat/add/observable/interval.js","./node_modules/rxjs-compat/add/observable/merge.js","./node_modules/rxjs-compat/add/observable/never.js","./node_modules/rxjs-compat/add/observable/of.js","./node_modules/rxjs-compat/add/observable/onErrorResumeNext.js","./node_modules/rxjs-compat/add/observable/pairs.js","./node_modules/rxjs-compat/add/observable/race.js","./node_modules/rxjs-compat/add/observable/range.js","./node_modules/rxjs-compat/add/observable/throw.js","./node_modules/rxjs-compat/add/observable/timer.js","./node_modules/rxjs-compat/add/observable/using.js","./node_modules/rxjs-compat/add/observable/zip.js","./node_modules/rxjs-compat/add/operator/audit.js","./node_modules/rxjs-compat/add/operator/auditTime.js","./node_modules/rxjs-compat/add/operator/buffer.js","./node_modules/rxjs-compat/add/operator/bufferCount.js","./node_modules/rxjs-compat/add/operator/bufferTime.js","./node_modules/rxjs-compat/add/operator/bufferToggle.js","./node_modules/rxjs-compat/add/operator/bufferWhen.js","./node_modules/rxjs-compat/add/operator/catch.js","./node_modules/rxjs-compat/add/operator/combineAll.js","./node_modules/rxjs-compat/add/operator/combineLatest.js","./node_modules/rxjs-compat/add/operator/concat.js","./node_modules/rxjs-compat/add/operator/concatAll.js","./node_modules/rxjs-compat/add/operator/concatMap.js","./node_modules/rxjs-compat/add/operator/concatMapTo.js","./node_modules/rxjs-compat/add/operator/count.js","./node_modules/rxjs-compat/add/operator/debounce.js","./node_modules/rxjs-compat/add/operator/debounceTime.js","./node_modules/rxjs-compat/add/operator/defaultIfEmpty.js","./node_modules/rxjs-compat/add/operator/delay.js","./node_modules/rxjs-compat/add/operator/delayWhen.js","./node_modules/rxjs-compat/add/operator/dematerialize.js","./node_modules/rxjs-compat/add/operator/distinct.js","./node_modules/rxjs-compat/add/operator/distinctUntilChanged.js","./node_modules/rxjs-compat/add/operator/distinctUntilKeyChanged.js","./node_modules/rxjs-compat/add/operator/do.js","./node_modules/rxjs-compat/add/operator/elementAt.js","./node_modules/rxjs-compat/add/operator/every.js","./node_modules/rxjs-compat/add/operator/exhaust.js","./node_modules/rxjs-compat/add/operator/exhaustMap.js","./node_modules/rxjs-compat/add/operator/expand.js","./node_modules/rxjs-compat/add/operator/filter.js","./node_modules/rxjs-compat/add/operator/finally.js","./node_modules/rxjs-compat/add/operator/find.js","./node_modules/rxjs-compat/add/operator/findIndex.js","./node_modules/rxjs-compat/add/operator/first.js","./node_modules/rxjs-compat/add/operator/groupBy.js","./node_modules/rxjs-compat/add/operator/ignoreElements.js","./node_modules/rxjs-compat/add/operator/isEmpty.js","./node_modules/rxjs-compat/add/operator/last.js","./node_modules/rxjs-compat/add/operator/let.js","./node_modules/rxjs-compat/add/operator/map.js","./node_modules/rxjs-compat/add/operator/mapTo.js","./node_modules/rxjs-compat/add/operator/materialize.js","./node_modules/rxjs-compat/add/operator/max.js","./node_modules/rxjs-compat/add/operator/merge.js","./node_modules/rxjs-compat/add/operator/mergeAll.js","./node_modules/rxjs-compat/add/operator/mergeMap.js","./node_modules/rxjs-compat/add/operator/mergeMapTo.js","./node_modules/rxjs-compat/add/operator/mergeScan.js","./node_modules/rxjs-compat/add/operator/min.js","./node_modules/rxjs-compat/add/operator/multicast.js","./node_modules/rxjs-compat/add/operator/observeOn.js","./node_modules/rxjs-compat/add/operator/onErrorResumeNext.js","./node_modules/rxjs-compat/add/operator/pairwise.js","./node_modules/rxjs-compat/add/operator/partition.js","./node_modules/rxjs-compat/add/operator/pluck.js","./node_modules/rxjs-compat/add/operator/publish.js","./node_modules/rxjs-compat/add/operator/publishBehavior.js","./node_modules/rxjs-compat/add/operator/publishLast.js","./node_modules/rxjs-compat/add/operator/publishReplay.js","./node_modules/rxjs-compat/add/operator/race.js","./node_modules/rxjs-compat/add/operator/reduce.js","./node_modules/rxjs-compat/add/operator/repeat.js","./node_modules/rxjs-compat/add/operator/repeatWhen.js","./node_modules/rxjs-compat/add/operator/retry.js","./node_modules/rxjs-compat/add/operator/retryWhen.js","./node_modules/rxjs-compat/add/operator/sample.js","./node_modules/rxjs-compat/add/operator/sampleTime.js","./node_modules/rxjs-compat/add/operator/scan.js","./node_modules/rxjs-compat/add/operator/sequenceEqual.js","./node_modules/rxjs-compat/add/operator/share.js","./node_modules/rxjs-compat/add/operator/shareReplay.js","./node_modules/rxjs-compat/add/operator/single.js","./node_modules/rxjs-compat/add/operator/skip.js","./node_modules/rxjs-compat/add/operator/skipLast.js","./node_modules/rxjs-compat/add/operator/skipUntil.js","./node_modules/rxjs-compat/add/operator/skipWhile.js","./node_modules/rxjs-compat/add/operator/startWith.js","./node_modules/rxjs-compat/add/operator/subscribeOn.js","./node_modules/rxjs-compat/add/operator/switch.js","./node_modules/rxjs-compat/add/operator/switchMap.js","./node_modules/rxjs-compat/add/operator/switchMapTo.js","./node_modules/rxjs-compat/add/operator/take.js","./node_modules/rxjs-compat/add/operator/takeLast.js","./node_modules/rxjs-compat/add/operator/takeUntil.js","./node_modules/rxjs-compat/add/operator/takeWhile.js","./node_modules/rxjs-compat/add/operator/throttle.js","./node_modules/rxjs-compat/add/operator/throttleTime.js","./node_modules/rxjs-compat/add/operator/timeInterval.js","./node_modules/rxjs-compat/add/operator/timeout.js","./node_modules/rxjs-compat/add/operator/timeoutWith.js","./node_modules/rxjs-compat/add/operator/timestamp.js","./node_modules/rxjs-compat/add/operator/toArray.js","./node_modules/rxjs-compat/add/operator/toPromise.js","./node_modules/rxjs-compat/add/operator/window.js","./node_modules/rxjs-compat/add/operator/windowCount.js","./node_modules/rxjs-compat/add/operator/windowTime.js","./node_modules/rxjs-compat/add/operator/windowToggle.js","./node_modules/rxjs-compat/add/operator/windowWhen.js","./node_modules/rxjs-compat/add/operator/withLatestFrom.js","./node_modules/rxjs-compat/add/operator/zip.js","./node_modules/rxjs-compat/add/operator/zipAll.js","./node_modules/rxjs-compat/operator/audit.js","./node_modules/rxjs-compat/operator/auditTime.js","./node_modules/rxjs-compat/operator/buffer.js","./node_modules/rxjs-compat/operator/bufferCount.js","./node_modules/rxjs-compat/operator/bufferTime.js","./node_modules/rxjs-compat/operator/bufferToggle.js","./node_modules/rxjs-compat/operator/bufferWhen.js","./node_modules/rxjs-compat/operator/catch.js","./node_modules/rxjs-compat/operator/combineAll.js","./node_modules/rxjs-compat/operator/combineLatest.js","./node_modules/rxjs-compat/operator/concat.js","./node_modules/rxjs-compat/operator/concatAll.js","./node_modules/rxjs-compat/operator/concatMap.js","./node_modules/rxjs-compat/operator/concatMapTo.js","./node_modules/rxjs-compat/operator/count.js","./node_modules/rxjs-compat/operator/debounce.js","./node_modules/rxjs-compat/operator/debounceTime.js","./node_modules/rxjs-compat/operator/defaultIfEmpty.js","./node_modules/rxjs-compat/operator/delay.js","./node_modules/rxjs-compat/operator/delayWhen.js","./node_modules/rxjs-compat/operator/dematerialize.js","./node_modules/rxjs-compat/operator/distinct.js","./node_modules/rxjs-compat/operator/distinctUntilChanged.js","./node_modules/rxjs-compat/operator/distinctUntilKeyChanged.js","./node_modules/rxjs-compat/operator/do.js","./node_modules/rxjs-compat/operator/elementAt.js","./node_modules/rxjs-compat/operator/every.js","./node_modules/rxjs-compat/operator/exhaust.js","./node_modules/rxjs-compat/operator/exhaustMap.js","./node_modules/rxjs-compat/operator/expand.js","./node_modules/rxjs-compat/operator/filter.js","./node_modules/rxjs-compat/operator/finally.js","./node_modules/rxjs-compat/operator/find.js","./node_modules/rxjs-compat/operator/findIndex.js","./node_modules/rxjs-compat/operator/first.js","./node_modules/rxjs-compat/operator/groupBy.js","./node_modules/rxjs-compat/operator/ignoreElements.js","./node_modules/rxjs-compat/operator/isEmpty.js","./node_modules/rxjs-compat/operator/last.js","./node_modules/rxjs-compat/operator/let.js","./node_modules/rxjs-compat/operator/map.js","./node_modules/rxjs-compat/operator/mapTo.js","./node_modules/rxjs-compat/operator/materialize.js","./node_modules/rxjs-compat/operator/max.js","./node_modules/rxjs-compat/operator/merge.js","./node_modules/rxjs-compat/operator/mergeAll.js","./node_modules/rxjs-compat/operator/mergeMap.js","./node_modules/rxjs-compat/operator/mergeMapTo.js","./node_modules/rxjs-compat/operator/mergeScan.js","./node_modules/rxjs-compat/operator/min.js","./node_modules/rxjs-compat/operator/multicast.js","./node_modules/rxjs-compat/operator/observeOn.js","./node_modules/rxjs-compat/operator/onErrorResumeNext.js","./node_modules/rxjs-compat/operator/pairwise.js","./node_modules/rxjs-compat/operator/partition.js","./node_modules/rxjs-compat/operator/pluck.js","./node_modules/rxjs-compat/operator/publish.js","./node_modules/rxjs-compat/operator/publishBehavior.js","./node_modules/rxjs-compat/operator/publishLast.js","./node_modules/rxjs-compat/operator/publishReplay.js","./node_modules/rxjs-compat/operator/race.js","./node_modules/rxjs-compat/operator/reduce.js","./node_modules/rxjs-compat/operator/repeat.js","./node_modules/rxjs-compat/operator/repeatWhen.js","./node_modules/rxjs-compat/operator/retry.js","./node_modules/rxjs-compat/operator/retryWhen.js","./node_modules/rxjs-compat/operator/sample.js","./node_modules/rxjs-compat/operator/sampleTime.js","./node_modules/rxjs-compat/operator/scan.js","./node_modules/rxjs-compat/operator/sequenceEqual.js","./node_modules/rxjs-compat/operator/share.js","./node_modules/rxjs-compat/operator/shareReplay.js","./node_modules/rxjs-compat/operator/single.js","./node_modules/rxjs-compat/operator/skip.js","./node_modules/rxjs-compat/operator/skipLast.js","./node_modules/rxjs-compat/operator/skipUntil.js","./node_modules/rxjs-compat/operator/skipWhile.js","./node_modules/rxjs-compat/operator/startWith.js","./node_modules/rxjs-compat/operator/subscribeOn.js","./node_modules/rxjs-compat/operator/switch.js","./node_modules/rxjs-compat/operator/switchMap.js","./node_modules/rxjs-compat/operator/switchMapTo.js","./node_modules/rxjs-compat/operator/take.js","./node_modules/rxjs-compat/operator/takeLast.js","./node_modules/rxjs-compat/operator/takeUntil.js","./node_modules/rxjs-compat/operator/takeWhile.js","./node_modules/rxjs-compat/operator/throttle.js","./node_modules/rxjs-compat/operator/throttleTime.js","./node_modules/rxjs-compat/operator/timeInterval.js","./node_modules/rxjs-compat/operator/timeout.js","./node_modules/rxjs-compat/operator/timeoutWith.js","./node_modules/rxjs-compat/operator/timestamp.js","./node_modules/rxjs-compat/operator/toArray.js","./node_modules/rxjs-compat/operator/window.js","./node_modules/rxjs-compat/operator/windowCount.js","./node_modules/rxjs-compat/operator/windowTime.js","./node_modules/rxjs-compat/operator/windowToggle.js","./node_modules/rxjs-compat/operator/windowWhen.js","./node_modules/rxjs-compat/operator/withLatestFrom.js","./node_modules/rxjs-compat/operator/zip.js","./node_modules/rxjs-compat/operator/zipAll.js","./node_modules/rxjs/Observable.js","./node_modules/rxjs/Rx.js","./node_modules/rxjs/_esm2015/ajax/index.js","./node_modules/rxjs/_esm2015/index.js","./node_modules/rxjs/_esm2015/internal-compatibility/index.js","./node_modules/rxjs/_esm2015/internal/AsyncSubject.js","./node_modules/rxjs/_esm2015/internal/Notification.js","./node_modules/rxjs/_esm2015/internal/ReplaySubject.js","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js","./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js","./node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js","./node_modules/rxjs/_esm2015/internal/observable/dom/WebSocketSubject.js","./node_modules/rxjs/_esm2015/internal/observable/dom/ajax.js","./node_modules/rxjs/_esm2015/internal/observable/dom/webSocket.js","./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js","./node_modules/rxjs/_esm2015/internal/observable/fromIterable.js","./node_modules/rxjs/_esm2015/internal/observable/fromPromise.js","./node_modules/rxjs/_esm2015/internal/observable/generate.js","./node_modules/rxjs/_esm2015/internal/observable/iif.js","./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/observable/never.js","./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/observable/pairs.js","./node_modules/rxjs/_esm2015/internal/observable/partition.js","./node_modules/rxjs/_esm2015/internal/observable/race.js","./node_modules/rxjs/_esm2015/internal/observable/range.js","./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./node_modules/rxjs/_esm2015/internal/observable/using.js","./node_modules/rxjs/_esm2015/internal/observable/zip.js","./node_modules/rxjs/_esm2015/internal/operators/audit.js","./node_modules/rxjs/_esm2015/internal/operators/auditTime.js","./node_modules/rxjs/_esm2015/internal/operators/buffer.js","./node_modules/rxjs/_esm2015/internal/operators/bufferCount.js","./node_modules/rxjs/_esm2015/internal/operators/bufferTime.js","./node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js","./node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js","./node_modules/rxjs/_esm2015/internal/operators/combineAll.js","./node_modules/rxjs/_esm2015/internal/operators/combineLatest.js","./node_modules/rxjs/_esm2015/internal/operators/concat.js","./node_modules/rxjs/_esm2015/internal/operators/concatMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/count.js","./node_modules/rxjs/_esm2015/internal/operators/debounce.js","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/delayWhen.js","./node_modules/rxjs/_esm2015/internal/operators/dematerialize.js","./node_modules/rxjs/_esm2015/internal/operators/distinct.js","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./node_modules/rxjs/_esm2015/internal/operators/elementAt.js","./node_modules/rxjs/_esm2015/internal/operators/endWith.js","./node_modules/rxjs/_esm2015/internal/operators/every.js","./node_modules/rxjs/_esm2015/internal/operators/exhaust.js","./node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js","./node_modules/rxjs/_esm2015/internal/operators/expand.js","./node_modules/rxjs/_esm2015/internal/operators/find.js","./node_modules/rxjs/_esm2015/internal/operators/findIndex.js","./node_modules/rxjs/_esm2015/internal/operators/groupBy.js","./node_modules/rxjs/_esm2015/internal/operators/ignoreElements.js","./node_modules/rxjs/_esm2015/internal/operators/isEmpty.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/operators/materialize.js","./node_modules/rxjs/_esm2015/internal/operators/max.js","./node_modules/rxjs/_esm2015/internal/operators/merge.js","./node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/mergeScan.js","./node_modules/rxjs/_esm2015/internal/operators/min.js","./node_modules/rxjs/_esm2015/internal/operators/observeOn.js","./node_modules/rxjs/_esm2015/internal/operators/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/operators/pairwise.js","./node_modules/rxjs/_esm2015/internal/operators/partition.js","./node_modules/rxjs/_esm2015/internal/operators/pluck.js","./node_modules/rxjs/_esm2015/internal/operators/publish.js","./node_modules/rxjs/_esm2015/internal/operators/publishBehavior.js","./node_modules/rxjs/_esm2015/internal/operators/publishLast.js","./node_modules/rxjs/_esm2015/internal/operators/publishReplay.js","./node_modules/rxjs/_esm2015/internal/operators/race.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/rxjs/_esm2015/internal/operators/repeat.js","./node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js","./node_modules/rxjs/_esm2015/internal/operators/retry.js","./node_modules/rxjs/_esm2015/internal/operators/retryWhen.js","./node_modules/rxjs/_esm2015/internal/operators/sample.js","./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js","./node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js","./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js","./node_modules/rxjs/_esm2015/internal/operators/single.js","./node_modules/rxjs/_esm2015/internal/operators/skip.js","./node_modules/rxjs/_esm2015/internal/operators/skipLast.js","./node_modules/rxjs/_esm2015/internal/operators/skipUntil.js","./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js","./node_modules/rxjs/_esm2015/internal/operators/switchAll.js","./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./node_modules/rxjs/_esm2015/internal/operators/timeInterval.js","./node_modules/rxjs/_esm2015/internal/operators/timeout.js","./node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js","./node_modules/rxjs/_esm2015/internal/operators/timestamp.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./node_modules/rxjs/_esm2015/internal/operators/window.js","./node_modules/rxjs/_esm2015/internal/operators/windowCount.js","./node_modules/rxjs/_esm2015/internal/operators/windowTime.js","./node_modules/rxjs/_esm2015/internal/operators/windowToggle.js","./node_modules/rxjs/_esm2015/internal/operators/windowWhen.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/rxjs/_esm2015/internal/operators/zip.js","./node_modules/rxjs/_esm2015/internal/operators/zipAll.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js","./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","./node_modules/rxjs/_esm2015/internal/scheduler/asap.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/scheduler/queue.js","./node_modules/rxjs/_esm2015/internal/testing/ColdObservable.js","./node_modules/rxjs/_esm2015/internal/testing/HotObservable.js","./node_modules/rxjs/_esm2015/internal/testing/SubscriptionLog.js","./node_modules/rxjs/_esm2015/internal/testing/SubscriptionLoggable.js","./node_modules/rxjs/_esm2015/internal/testing/TestScheduler.js","./node_modules/rxjs/_esm2015/internal/util/Immediate.js","./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js","./node_modules/rxjs/_esm2015/internal/util/applyMixins.js","./node_modules/rxjs/_esm2015/internal/util/errorObject.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/util/isObservable.js","./node_modules/rxjs/_esm2015/internal/util/not.js","./node_modules/rxjs/_esm2015/internal/util/root.js","./node_modules/rxjs/_esm2015/internal/util/tryCatch.js","./node_modules/rxjs/_esm2015/operators/index.js","./node_modules/rxjs/_esm2015/testing/index.js","./node_modules/rxjs/_esm2015/webSocket/index.js"],"sourcesContent":["// https://hackernoon.com/angular-simple-in-memory-cache-service-on-the-ui-with-rxjs-77f167387e39\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Rx';\nimport { throwError } from 'rxjs';\n\ninterface CacheContent {\n  expiry: number;\n  value: any;\n}\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Cache Service is an observables based in-memory cache implementation\n * Keeps track of in-flight observables and sets a default expiry for cached values\n * @export\n * @class CacheService\n */\nexport class CacheService {\n  private cache: Map<string, CacheContent> = new Map<string, CacheContent>();\n  private inFlightObservables: Map<string, Subject<any>> = new Map<string, Subject<any>>();\n  readonly DEFAULT_MAX_AGE: number = 300000;\n\n  /**\n   * Gets the value from cache if the key is provided.\n   * If no value exists in cache, then check if the same call exists\n   * in flight, if so return the subject. If not create a new\n   * Subject inFlightObservable and return the source observable.\n   */\n  get(key: string, fallback?: Observable<any>, maxAge?: number): Observable<any> | Subject<any> {\n\n    if (this.hasValidCachedValue(key)) {\n      console.log(`%cGetting from cache ${key}`, 'color: green');\n      return Observable.of(this.cache.get(key).value);\n    }\n\n    if (!maxAge) {\n      maxAge = this.DEFAULT_MAX_AGE;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key);\n    } else if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n      console.log(`%c Calling api for ${key}`, 'color: purple');\n      return fallback.do((value) => { this.set(key, value, maxAge); });\n    } else {\n      return throwError('Requested key is not available in Cache');\n    }\n\n  }\n\n  /**\n   * Sets the value with key in the cache\n   * Notifies all observers of the new value\n   */\n  set(key: string, value: any, maxAge: number = this.DEFAULT_MAX_AGE): void {\n    this.cache.set(key, { value, expiry: Date.now() + maxAge });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  /**\n   * Checks if the a key exists in cache\n   */\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  /**\n   * Cleans cache\n   */\n  delete(key: string): boolean {\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Publishes the value to all observers of the given\n   * in progress observables if observers exist.\n   */\n  private notifyInFlightObservers(key: string, value: any): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n      if (observersCount) {\n        console.log(`%cNotifying ${inFlight.observers.length} flight subscribers for ${key}`, 'color: blue');\n        inFlight.next(value);\n      }\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  /**\n   * Checks if the key exists and   has not expired.\n   */\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry < Date.now()) {\n        this.cache.delete(key);\n        return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar rxjs_1 = require(\"rxjs\");\nexports.Observable = rxjs_1.Observable;\nexports.Subject = rxjs_1.Subject;\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nexports.AnonymousSubject = internal_compatibility_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar internal_compatibility_2 = require(\"rxjs/internal-compatibility\");\nexports.config = internal_compatibility_2.config;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire(\"./add/observable/bindCallback\");\nrequire(\"./add/observable/bindNodeCallback\");\nrequire(\"./add/observable/combineLatest\");\nrequire(\"./add/observable/concat\");\nrequire(\"./add/observable/defer\");\nrequire(\"./add/observable/empty\");\nrequire(\"./add/observable/forkJoin\");\nrequire(\"./add/observable/from\");\nrequire(\"./add/observable/fromEvent\");\nrequire(\"./add/observable/fromEventPattern\");\nrequire(\"./add/observable/fromPromise\");\nrequire(\"./add/observable/generate\");\nrequire(\"./add/observable/if\");\nrequire(\"./add/observable/interval\");\nrequire(\"./add/observable/merge\");\nrequire(\"./add/observable/race\");\nrequire(\"./add/observable/never\");\nrequire(\"./add/observable/of\");\nrequire(\"./add/observable/onErrorResumeNext\");\nrequire(\"./add/observable/pairs\");\nrequire(\"./add/observable/range\");\nrequire(\"./add/observable/using\");\nrequire(\"./add/observable/throw\");\nrequire(\"./add/observable/timer\");\nrequire(\"./add/observable/zip\");\n//dom\nrequire(\"./add/observable/dom/ajax\");\nrequire(\"./add/observable/dom/webSocket\");\n//internal/operators\nrequire(\"./add/operator/buffer\");\nrequire(\"./add/operator/bufferCount\");\nrequire(\"./add/operator/bufferTime\");\nrequire(\"./add/operator/bufferToggle\");\nrequire(\"./add/operator/bufferWhen\");\nrequire(\"./add/operator/catch\");\nrequire(\"./add/operator/combineAll\");\nrequire(\"./add/operator/combineLatest\");\nrequire(\"./add/operator/concat\");\nrequire(\"./add/operator/concatAll\");\nrequire(\"./add/operator/concatMap\");\nrequire(\"./add/operator/concatMapTo\");\nrequire(\"./add/operator/count\");\nrequire(\"./add/operator/dematerialize\");\nrequire(\"./add/operator/debounce\");\nrequire(\"./add/operator/debounceTime\");\nrequire(\"./add/operator/defaultIfEmpty\");\nrequire(\"./add/operator/delay\");\nrequire(\"./add/operator/delayWhen\");\nrequire(\"./add/operator/distinct\");\nrequire(\"./add/operator/distinctUntilChanged\");\nrequire(\"./add/operator/distinctUntilKeyChanged\");\nrequire(\"./add/operator/do\");\nrequire(\"./add/operator/exhaust\");\nrequire(\"./add/operator/exhaustMap\");\nrequire(\"./add/operator/expand\");\nrequire(\"./add/operator/elementAt\");\nrequire(\"./add/operator/filter\");\nrequire(\"./add/operator/finally\");\nrequire(\"./add/operator/find\");\nrequire(\"./add/operator/findIndex\");\nrequire(\"./add/operator/first\");\nrequire(\"./add/operator/groupBy\");\nrequire(\"./add/operator/ignoreElements\");\nrequire(\"./add/operator/isEmpty\");\nrequire(\"./add/operator/audit\");\nrequire(\"./add/operator/auditTime\");\nrequire(\"./add/operator/last\");\nrequire(\"./add/operator/let\");\nrequire(\"./add/operator/every\");\nrequire(\"./add/operator/map\");\nrequire(\"./add/operator/mapTo\");\nrequire(\"./add/operator/materialize\");\nrequire(\"./add/operator/max\");\nrequire(\"./add/operator/merge\");\nrequire(\"./add/operator/mergeAll\");\nrequire(\"./add/operator/mergeMap\");\nrequire(\"./add/operator/mergeMapTo\");\nrequire(\"./add/operator/mergeScan\");\nrequire(\"./add/operator/min\");\nrequire(\"./add/operator/multicast\");\nrequire(\"./add/operator/observeOn\");\nrequire(\"./add/operator/onErrorResumeNext\");\nrequire(\"./add/operator/pairwise\");\nrequire(\"./add/operator/partition\");\nrequire(\"./add/operator/pluck\");\nrequire(\"./add/operator/publish\");\nrequire(\"./add/operator/publishBehavior\");\nrequire(\"./add/operator/publishReplay\");\nrequire(\"./add/operator/publishLast\");\nrequire(\"./add/operator/race\");\nrequire(\"./add/operator/reduce\");\nrequire(\"./add/operator/repeat\");\nrequire(\"./add/operator/repeatWhen\");\nrequire(\"./add/operator/retry\");\nrequire(\"./add/operator/retryWhen\");\nrequire(\"./add/operator/sample\");\nrequire(\"./add/operator/sampleTime\");\nrequire(\"./add/operator/scan\");\nrequire(\"./add/operator/sequenceEqual\");\nrequire(\"./add/operator/share\");\nrequire(\"./add/operator/shareReplay\");\nrequire(\"./add/operator/single\");\nrequire(\"./add/operator/skip\");\nrequire(\"./add/operator/skipLast\");\nrequire(\"./add/operator/skipUntil\");\nrequire(\"./add/operator/skipWhile\");\nrequire(\"./add/operator/startWith\");\nrequire(\"./add/operator/subscribeOn\");\nrequire(\"./add/operator/switch\");\nrequire(\"./add/operator/switchMap\");\nrequire(\"./add/operator/switchMapTo\");\nrequire(\"./add/operator/take\");\nrequire(\"./add/operator/takeLast\");\nrequire(\"./add/operator/takeUntil\");\nrequire(\"./add/operator/takeWhile\");\nrequire(\"./add/operator/throttle\");\nrequire(\"./add/operator/throttleTime\");\nrequire(\"./add/operator/timeInterval\");\nrequire(\"./add/operator/timeout\");\nrequire(\"./add/operator/timeoutWith\");\nrequire(\"./add/operator/timestamp\");\nrequire(\"./add/operator/toArray\");\nrequire(\"./add/operator/toPromise\");\nrequire(\"./add/operator/window\");\nrequire(\"./add/operator/windowCount\");\nrequire(\"./add/operator/windowTime\");\nrequire(\"./add/operator/windowToggle\");\nrequire(\"./add/operator/windowWhen\");\nrequire(\"./add/operator/withLatestFrom\");\nrequire(\"./add/operator/zip\");\nrequire(\"./add/operator/zipAll\");\n/* tslint:disable:no-unused-variable */\nvar rxjs_2 = require(\"rxjs\");\nexports.Subscription = rxjs_2.Subscription;\nexports.ReplaySubject = rxjs_2.ReplaySubject;\nexports.BehaviorSubject = rxjs_2.BehaviorSubject;\nexports.Notification = rxjs_2.Notification;\nexports.EmptyError = rxjs_2.EmptyError;\nexports.ArgumentOutOfRangeError = rxjs_2.ArgumentOutOfRangeError;\nexports.ObjectUnsubscribedError = rxjs_2.ObjectUnsubscribedError;\nexports.UnsubscriptionError = rxjs_2.UnsubscriptionError;\nexports.pipe = rxjs_2.pipe;\nvar testing_1 = require(\"rxjs/testing\");\nexports.TestScheduler = testing_1.TestScheduler;\nvar rxjs_3 = require(\"rxjs\");\nexports.Subscriber = rxjs_3.Subscriber;\nexports.AsyncSubject = rxjs_3.AsyncSubject;\nexports.ConnectableObservable = rxjs_3.ConnectableObservable;\nexports.TimeoutError = rxjs_3.TimeoutError;\nexports.VirtualTimeScheduler = rxjs_3.VirtualTimeScheduler;\nvar ajax_1 = require(\"rxjs/ajax\");\nexports.AjaxResponse = ajax_1.AjaxResponse;\nexports.AjaxError = ajax_1.AjaxError;\nexports.AjaxTimeoutError = ajax_1.AjaxTimeoutError;\nvar rxjs_4 = require(\"rxjs\");\nvar internal_compatibility_3 = require(\"rxjs/internal-compatibility\");\nvar internal_compatibility_4 = require(\"rxjs/internal-compatibility\");\nexports.TimeInterval = internal_compatibility_4.TimeInterval;\nexports.Timestamp = internal_compatibility_4.Timestamp;\nvar _operators = require(\"rxjs/operators\");\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which is the same\n * queue used for promises. Basically after the current job, but before the next\n * job. Use this for asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: rxjs_4.asapScheduler,\n    queue: rxjs_4.queueScheduler,\n    animationFrame: rxjs_4.animationFrameScheduler,\n    async: rxjs_4.asyncScheduler\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: internal_compatibility_3.rxSubscriber,\n    observable: internal_compatibility_3.observable,\n    iterator: internal_compatibility_3.iterator\n};\nexports.Symbol = Symbol;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindCallback = rxjs_1.bindCallback;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.bindNodeCallback = rxjs_1.bindNodeCallback;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.combineLatest = rxjs_1.combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.concat = rxjs_1.concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.defer = rxjs_1.defer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ajax_1 = require(\"rxjs/ajax\");\nrxjs_1.Observable.ajax = ajax_1.ajax;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar webSocket_1 = require(\"rxjs/webSocket\");\nrxjs_1.Observable.webSocket = webSocket_1.webSocket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.empty = rxjs_1.empty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.forkJoin = rxjs_1.forkJoin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.from = rxjs_1.from;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEvent = rxjs_1.fromEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromEventPattern = rxjs_1.fromEventPattern;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.fromPromise = rxjs_1.from;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.generate = rxjs_1.generate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.if = rxjs_1.iif;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.interval = rxjs_1.interval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.merge = rxjs_1.merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nfunction staticNever() {\n    return rxjs_1.NEVER;\n}\nexports.staticNever = staticNever;\nrxjs_1.Observable.never = staticNever;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.of = rxjs_1.of;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.onErrorResumeNext = rxjs_1.onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.pairs = rxjs_1.pairs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.race = rxjs_1.race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.range = rxjs_1.range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.throw = rxjs_1.throwError;\nrxjs_1.Observable.throwError = rxjs_1.throwError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.timer = rxjs_1.timer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.using = rxjs_1.using;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.zip = rxjs_1.zip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar audit_1 = require(\"../../operator/audit\");\nrxjs_1.Observable.prototype.audit = audit_1.audit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar auditTime_1 = require(\"../../operator/auditTime\");\nrxjs_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar buffer_1 = require(\"../../operator/buffer\");\nrxjs_1.Observable.prototype.buffer = buffer_1.buffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferCount_1 = require(\"../../operator/bufferCount\");\nrxjs_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferTime_1 = require(\"../../operator/bufferTime\");\nrxjs_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferToggle_1 = require(\"../../operator/bufferToggle\");\nrxjs_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar bufferWhen_1 = require(\"../../operator/bufferWhen\");\nrxjs_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar catch_1 = require(\"../../operator/catch\");\nrxjs_1.Observable.prototype.catch = catch_1._catch;\nrxjs_1.Observable.prototype._catch = catch_1._catch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineAll_1 = require(\"../../operator/combineAll\");\nrxjs_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar combineLatest_1 = require(\"../../operator/combineLatest\");\nrxjs_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concat_1 = require(\"../../operator/concat\");\nrxjs_1.Observable.prototype.concat = concat_1.concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatAll_1 = require(\"../../operator/concatAll\");\nrxjs_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMap_1 = require(\"../../operator/concatMap\");\nrxjs_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar concatMapTo_1 = require(\"../../operator/concatMapTo\");\nrxjs_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar count_1 = require(\"../../operator/count\");\nrxjs_1.Observable.prototype.count = count_1.count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounce_1 = require(\"../../operator/debounce\");\nrxjs_1.Observable.prototype.debounce = debounce_1.debounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar debounceTime_1 = require(\"../../operator/debounceTime\");\nrxjs_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar defaultIfEmpty_1 = require(\"../../operator/defaultIfEmpty\");\nrxjs_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delay_1 = require(\"../../operator/delay\");\nrxjs_1.Observable.prototype.delay = delay_1.delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar delayWhen_1 = require(\"../../operator/delayWhen\");\nrxjs_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar dematerialize_1 = require(\"../../operator/dematerialize\");\nrxjs_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinct_1 = require(\"../../operator/distinct\");\nrxjs_1.Observable.prototype.distinct = distinct_1.distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilChanged_1 = require(\"../../operator/distinctUntilChanged\");\nrxjs_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar distinctUntilKeyChanged_1 = require(\"../../operator/distinctUntilKeyChanged\");\nrxjs_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar do_1 = require(\"../../operator/do\");\nrxjs_1.Observable.prototype.do = do_1._do;\nrxjs_1.Observable.prototype._do = do_1._do;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar elementAt_1 = require(\"../../operator/elementAt\");\nrxjs_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar every_1 = require(\"../../operator/every\");\nrxjs_1.Observable.prototype.every = every_1.every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaust_1 = require(\"../../operator/exhaust\");\nrxjs_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar exhaustMap_1 = require(\"../../operator/exhaustMap\");\nrxjs_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar expand_1 = require(\"../../operator/expand\");\nrxjs_1.Observable.prototype.expand = expand_1.expand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar filter_1 = require(\"../../operator/filter\");\nrxjs_1.Observable.prototype.filter = filter_1.filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar finally_1 = require(\"../../operator/finally\");\nrxjs_1.Observable.prototype.finally = finally_1._finally;\nrxjs_1.Observable.prototype._finally = finally_1._finally;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar find_1 = require(\"../../operator/find\");\nrxjs_1.Observable.prototype.find = find_1.find;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar findIndex_1 = require(\"../../operator/findIndex\");\nrxjs_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar first_1 = require(\"../../operator/first\");\nrxjs_1.Observable.prototype.first = first_1.first;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar groupBy_1 = require(\"../../operator/groupBy\");\nrxjs_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar ignoreElements_1 = require(\"../../operator/ignoreElements\");\nrxjs_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar isEmpty_1 = require(\"../../operator/isEmpty\");\nrxjs_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar last_1 = require(\"../../operator/last\");\nrxjs_1.Observable.prototype.last = last_1.last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar let_1 = require(\"../../operator/let\");\nrxjs_1.Observable.prototype.let = let_1.letProto;\nrxjs_1.Observable.prototype.letBind = let_1.letProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar map_1 = require(\"../../operator/map\");\nrxjs_1.Observable.prototype.map = map_1.map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mapTo_1 = require(\"../../operator/mapTo\");\nrxjs_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar materialize_1 = require(\"../../operator/materialize\");\nrxjs_1.Observable.prototype.materialize = materialize_1.materialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar max_1 = require(\"../../operator/max\");\nrxjs_1.Observable.prototype.max = max_1.max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar merge_1 = require(\"../../operator/merge\");\nrxjs_1.Observable.prototype.merge = merge_1.merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeAll_1 = require(\"../../operator/mergeAll\");\nrxjs_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMap_1 = require(\"../../operator/mergeMap\");\nrxjs_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nrxjs_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeMapTo_1 = require(\"../../operator/mergeMapTo\");\nrxjs_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nrxjs_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar mergeScan_1 = require(\"../../operator/mergeScan\");\nrxjs_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar min_1 = require(\"../../operator/min\");\nrxjs_1.Observable.prototype.min = min_1.min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar multicast_1 = require(\"../../operator/multicast\");\nrxjs_1.Observable.prototype.multicast = multicast_1.multicast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar observeOn_1 = require(\"../../operator/observeOn\");\nrxjs_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar onErrorResumeNext_1 = require(\"../../operator/onErrorResumeNext\");\nrxjs_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pairwise_1 = require(\"../../operator/pairwise\");\nrxjs_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar partition_1 = require(\"../../operator/partition\");\nrxjs_1.Observable.prototype.partition = partition_1.partition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar pluck_1 = require(\"../../operator/pluck\");\nrxjs_1.Observable.prototype.pluck = pluck_1.pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publish_1 = require(\"../../operator/publish\");\nrxjs_1.Observable.prototype.publish = publish_1.publish;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishBehavior_1 = require(\"../../operator/publishBehavior\");\nrxjs_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishLast_1 = require(\"../../operator/publishLast\");\nrxjs_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar publishReplay_1 = require(\"../../operator/publishReplay\");\nrxjs_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar race_1 = require(\"../../operator/race\");\nrxjs_1.Observable.prototype.race = race_1.race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar reduce_1 = require(\"../../operator/reduce\");\nrxjs_1.Observable.prototype.reduce = reduce_1.reduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeat_1 = require(\"../../operator/repeat\");\nrxjs_1.Observable.prototype.repeat = repeat_1.repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar repeatWhen_1 = require(\"../../operator/repeatWhen\");\nrxjs_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retry_1 = require(\"../../operator/retry\");\nrxjs_1.Observable.prototype.retry = retry_1.retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar retryWhen_1 = require(\"../../operator/retryWhen\");\nrxjs_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sample_1 = require(\"../../operator/sample\");\nrxjs_1.Observable.prototype.sample = sample_1.sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sampleTime_1 = require(\"../../operator/sampleTime\");\nrxjs_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar scan_1 = require(\"../../operator/scan\");\nrxjs_1.Observable.prototype.scan = scan_1.scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar sequenceEqual_1 = require(\"../../operator/sequenceEqual\");\nrxjs_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar share_1 = require(\"../../operator/share\");\nrxjs_1.Observable.prototype.share = share_1.share;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar shareReplay_1 = require(\"../../operator/shareReplay\");\nrxjs_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar single_1 = require(\"../../operator/single\");\nrxjs_1.Observable.prototype.single = single_1.single;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skip_1 = require(\"../../operator/skip\");\nrxjs_1.Observable.prototype.skip = skip_1.skip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipLast_1 = require(\"../../operator/skipLast\");\nrxjs_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipUntil_1 = require(\"../../operator/skipUntil\");\nrxjs_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar skipWhile_1 = require(\"../../operator/skipWhile\");\nrxjs_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar startWith_1 = require(\"../../operator/startWith\");\nrxjs_1.Observable.prototype.startWith = startWith_1.startWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar subscribeOn_1 = require(\"../../operator/subscribeOn\");\nrxjs_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switch_1 = require(\"../../operator/switch\");\nrxjs_1.Observable.prototype.switch = switch_1._switch;\nrxjs_1.Observable.prototype._switch = switch_1._switch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMap_1 = require(\"../../operator/switchMap\");\nrxjs_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar switchMapTo_1 = require(\"../../operator/switchMapTo\");\nrxjs_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar take_1 = require(\"../../operator/take\");\nrxjs_1.Observable.prototype.take = take_1.take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeLast_1 = require(\"../../operator/takeLast\");\nrxjs_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeUntil_1 = require(\"../../operator/takeUntil\");\nrxjs_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar takeWhile_1 = require(\"../../operator/takeWhile\");\nrxjs_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttle_1 = require(\"../../operator/throttle\");\nrxjs_1.Observable.prototype.throttle = throttle_1.throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar throttleTime_1 = require(\"../../operator/throttleTime\");\nrxjs_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeInterval_1 = require(\"../../operator/timeInterval\");\nrxjs_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeout_1 = require(\"../../operator/timeout\");\nrxjs_1.Observable.prototype.timeout = timeout_1.timeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timeoutWith_1 = require(\"../../operator/timeoutWith\");\nrxjs_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar timestamp_1 = require(\"../../operator/timestamp\");\nrxjs_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar toArray_1 = require(\"../../operator/toArray\");\nrxjs_1.Observable.prototype.toArray = toArray_1.toArray;\n","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar window_1 = require(\"../../operator/window\");\nrxjs_1.Observable.prototype.window = window_1.window;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowCount_1 = require(\"../../operator/windowCount\");\nrxjs_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowTime_1 = require(\"../../operator/windowTime\");\nrxjs_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowToggle_1 = require(\"../../operator/windowToggle\");\nrxjs_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar windowWhen_1 = require(\"../../operator/windowWhen\");\nrxjs_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar withLatestFrom_1 = require(\"../../operator/withLatestFrom\");\nrxjs_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zip_1 = require(\"../../operator/zip\");\nrxjs_1.Observable.prototype.zip = zip_1.zipProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar zipAll_1 = require(\"../../operator/zipAll\");\nrxjs_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return operators_1.audit(durationSelector)(this);\n}\nexports.audit = audit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.auditTime(duration, scheduler)(this);\n}\nexports.auditTime = auditTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return operators_1.buffer(closingNotifier)(this);\n}\nexports.buffer = buffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return operators_1.bufferCount(bufferSize, startBufferEvery)(this);\n}\nexports.bufferCount = bufferCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=asyncScheduler] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = rxjs_1.asyncScheduler;\n    if (internal_compatibility_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return operators_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nexports.bufferTime = bufferTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return operators_1.bufferToggle(openings, closingSelector)(this);\n}\nexports.bufferToggle = bufferToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return operators_1.bufferWhen(closingSelector)(this);\n}\nexports.bufferWhen = bufferWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return operators_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return operators_1.combineAll(project)(this);\n}\nexports.combineAll = combineAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && internal_compatibility_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return this.lift.call(rxjs_1.of.apply(void 0, [this].concat(observables)), new internal_compatibility_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.concat.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return operators_1.concatAll()(this);\n}\nexports.concatAll = concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project) {\n    return operators_1.concatMap(project)(this);\n}\nexports.concatMap = concatMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable) {\n    return operators_1.concatMapTo(innerObservable)(this);\n}\nexports.concatMapTo = concatMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return operators_1.count(predicate)(this);\n}\nexports.count = count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return operators_1.debounce(durationSelector)(this);\n}\nexports.debounce = debounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.debounceTime(dueTime, scheduler)(this);\n}\nexports.debounceTime = debounceTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return operators_1.defaultIfEmpty(defaultValue)(this);\n}\nexports.defaultIfEmpty = defaultIfEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=asyncScheduler] The SchedulerLike to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.delay(delay, scheduler)(this);\n}\nexports.delay = delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    return operators_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);\n}\nexports.delayWhen = delayWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return operators_1.dematerialize()(this);\n}\nexports.dematerialize = dematerialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return operators_1.distinct(keySelector, flushes)(this);\n}\nexports.distinct = distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return operators_1.distinctUntilChanged(compare, keySelector)(this);\n}\nexports.distinctUntilChanged = distinctUntilChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\n// tslint:disable-next-line:max-line-length\nfunction distinctUntilKeyChanged(key, compare) {\n    return operators_1.distinctUntilKeyChanged(key, compare)(this);\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return operators_1.tap(nextOrObserver, error, complete)(this);\n}\nexports._do = _do;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return operators_1.elementAt.apply(undefined, arguments)(this);\n}\nexports.elementAt = elementAt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return operators_1.every(predicate, thisArg)(this);\n}\nexports.every = every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n */\nfunction exhaust() {\n    return operators_1.exhaust()(this);\n}\nexports.exhaust = exhaust;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = fromEvent(document, 'click');\n * var result = clicks.pipe(exhaustMap((ev) => Rx.Observable.interval(1000).take(5)));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n */\nfunction exhaustMap(project) {\n    return operators_1.exhaustMap(project)(this);\n}\nexports.exhaustMap = exhaustMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return operators_1.expand(project, concurrent, scheduler)(this);\n}\nexports.expand = expand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return operators_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete, error or unsubscribe.\n *\n * <span class=\"informal\">Ensure a given function will be called when a stream ends, no matter why it ended.</span>\n *\n * `finally` method accepts as a single parameter a function. This function does not accept any parameters and\n * should not return anything. It will be called whenever source Observable completes, errors or is unsubscribed,\n * which makes it good candidate to perform any necessary clean up or side effects when Observable terminates,\n * no matter how or why it terminated.\n *\n * Observable returned by `finally` will simply mirror source Observable - each time it is subscribed, source\n * Observable will be subscribed underneath.\n *\n * Note that behavior of `finally` will be repeated per every subscription, so if resulting Observable has\n * many subscribers, function passed to `finally` might be potentially called multiple times.\n *\n * Remember also that `finally` differs quite a lot from passing complete or error handler to {@link subscribe}. It will\n * return an Observable which can be further chained, while `subscribe` returns Subscription, basically ending Observable\n * chain. Function passed to `finally` will be called also when consumer of resulting Observable unsubscribes from it,\n * while handlers passed to `subscribe` will not (even complete handler). But most importantly, `finally` does not start\n * an execution of source Observable, like `subscribe` does, allowing you to set up all necessary hooks before\n * passing Observable further, even without specific knowledge how or when it will be used.\n *\n *\n * @example <caption>Call finally after complete notification</caption>\n * Rx.Observable.of(1, 2, 3)\n * .finally(() => console.log('I was finalized!'))\n * .map(x => x * 2) // `finally` returns an Observable, so we still can chain operators.\n * .subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('I completed!')\n * );\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // \"I completed!\"\n * // \"I was finalized!\"\n *\n *\n *\n * @example <caption>Call finally after consumer unsubscribes</caption>\n * const o = Rx.Observable.interval(1000)\n * .finally(() => console.log('Timer stopped'));\n *\n * const subscription = o.subscribe(\n *   val => console.log(val),\n *   err => {},\n *   () => console.log('Complete!') // Will not be called, since complete handler\n * );                               // does not react to unsubscription, just to\n *                                  // complete notification sent by the Observable itself.\n *\n * setTimeout(() => subscription.unsubscribe(), 2500);\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // \"Timer stopped\" after 2.5s\n *\n * @see {@link using}\n *\n * @param {function} callback Function to be called when source terminates (completes, errors or is unsubscribed).\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @name finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return operators_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    return operators_1.find(predicate, thisArg)(this);\n}\nexports.find = find;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return operators_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {T} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.first.apply(void 0, args)(this);\n}\nexports.first = first;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return operators_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\nexports.groupBy = groupBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return operators_1.ignoreElements()(this);\n}\nexports.ignoreElements = ignoreElements;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return operators_1.isEmpty()(this);\n}\nexports.isEmpty = isEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - The default value to use if the predicate isn't\n * satisfied, or no values were emitted (if no predicate).\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.last.apply(void 0, args)(this);\n}\nexports.last = last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return operators_1.map(project, thisArg)(this);\n}\nexports.map = map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return operators_1.mapTo(value)(this);\n}\nexports.mapTo = mapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return operators_1.materialize()(this);\n}\nexports.materialize = materialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    return operators_1.max(comparer)(this);\n}\nexports.max = max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.merge.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeAll(concurrent)(this);\n}\nexports.mergeAll = mergeAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMap(project, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeMapTo(innerObservable, concurrent)(this);\n}\nexports.mergeMapTo = mergeMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return operators_1.mergeScan(accumulator, seed, concurrent)(this);\n}\nexports.mergeScan = mergeScan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    return operators_1.min(comparer)(this);\n}\nexports.min = min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return operators_1.multicast(subjectOrSubjectFactory, selector)(this);\n}\nexports.multicast = multicast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.observeOn(scheduler, delay)(this);\n}\nexports.observeOn = observeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    return operators_1.onErrorResumeNext.apply(void 0, nextSources)(this);\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return operators_1.pairwise()(this);\n}\nexports.pairwise = pairwise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return operators_1.partition(predicate, thisArg)(this);\n}\nexports.partition = partition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    return operators_1.pluck.apply(void 0, properties)(this);\n}\nexports.pluck = pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return operators_1.publish(selector)(this);\n}\nexports.publish = publish;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return operators_1.publishBehavior(value)(this);\n}\nexports.publishBehavior = publishBehavior;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    //TODO(benlesh): correct type-flow through here.\n    return operators_1.publishLast()(this);\n}\nexports.publishLast = publishLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return operators_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\nexports.publishReplay = publishReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return operators_1.race.apply(void 0, observables)(this);\n}\nexports.race = race;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return operators_1.reduce(accumulator, seed)(this);\n    }\n    return operators_1.reduce(accumulator)(this);\n}\nexports.reduce = reduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.repeat(count)(this);\n}\nexports.repeat = repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return operators_1.repeatWhen(notifier)(this);\n}\nexports.repeatWhen = repeatWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return operators_1.retry(count)(this);\n}\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return operators_1.retryWhen(notifier)(this);\n}\nexports.retryWhen = retryWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return operators_1.sample(notifier)(this);\n}\nexports.sample = sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.sampleTime(period, scheduler)(this);\n}\nexports.sampleTime = sampleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return operators_1.scan(accumulator, seed)(this);\n    }\n    return operators_1.scan(accumulator)(this);\n}\nexports.scan = scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return operators_1.sequenceEqual(compareTo, comparor)(this);\n}\nexports.sequenceEqual = sequenceEqual;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return operators_1.share()(this);\n}\nexports.share = share;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        return operators_1.shareReplay(configOrBufferSize)(this);\n    }\n    return operators_1.shareReplay(configOrBufferSize, windowTime, scheduler)(this);\n}\nexports.shareReplay = shareReplay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return operators_1.single(predicate)(this);\n}\nexports.single = single;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return operators_1.skip(count)(this);\n}\nexports.skip = skip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return operators_1.skipLast(count)(this);\n}\nexports.skipLast = skipLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return operators_1.skipUntil(notifier)(this);\n}\nexports.skipUntil = skipUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return operators_1.skipWhile(predicate)(this);\n}\nexports.skipWhile = skipWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return operators_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operators_1.subscribeOn(scheduler, delay)(this);\n}\nexports.subscribeOn = subscribeOn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return operators_1.switchAll()(this);\n}\nexports._switch = _switch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project) {\n    return operators_1.switchMap(project)(this);\n}\nexports.switchMap = switchMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable) {\n    return operators_1.switchMapTo(innerObservable)(this);\n}\nexports.switchMapTo = switchMapTo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return operators_1.take(count)(this);\n}\nexports.take = take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return operators_1.takeLast(count)(this);\n}\nexports.takeLast = takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return operators_1.takeUntil(notifier)(this);\n}\nexports.takeUntil = takeUntil;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return operators_1.takeWhile(predicate)(this);\n}\nexports.takeWhile = takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttle(durationSelector, config)(this);\n}\nexports.throttle = throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    if (config === void 0) { config = internal_compatibility_1.defaultThrottleConfig; }\n    return operators_1.throttleTime(duration, scheduler, config)(this);\n}\nexports.throttleTime = throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeInterval(scheduler)(this);\n}\nexports.timeInterval = timeInterval;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeout(due, scheduler)(this);\n}\nexports.timeout = timeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timeoutWith(due, withObservable, scheduler)(this);\n}\nexports.timeoutWith = timeoutWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = rxjs_1.asyncScheduler; }\n    return operators_1.timestamp(scheduler)(this);\n}\nexports.timestamp = timestamp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return operators_1.toArray()(this);\n}\nexports.toArray = toArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return operators_1.window(windowBoundaries)(this);\n}\nexports.window = window;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return operators_1.windowCount(windowSize, startWindowEvery)(this);\n}\nexports.windowCount = windowCount;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar internal_compatibility_1 = require(\"rxjs/internal-compatibility\");\nvar operators_1 = require(\"rxjs/operators\");\nfunction windowTime(windowTimeSpan) {\n    var scheduler = rxjs_1.asyncScheduler;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (internal_compatibility_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (internal_compatibility_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (internal_compatibility_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (internal_compatibility_1.isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return operators_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\nexports.windowTime = windowTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return operators_1.windowToggle(openings, closingSelector)(this);\n}\nexports.windowToggle = windowToggle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return operators_1.windowWhen(closingSelector)(this);\n}\nexports.windowWhen = windowWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return operators_1.withLatestFrom.apply(void 0, args)(this);\n}\nexports.withLatestFrom = withLatestFrom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return this.lift.call(rxjs_1.zip.apply(void 0, [this].concat(observables)));\n}\nexports.zipProto = zipProto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return operators_1.zipAll(project)(this);\n}\nexports.zipAll = zipAll;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat\"));\n","export { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n","export { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification, NotificationKind } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n","export { config } from '../internal/config';\nexport { InnerSubscriber } from '../internal/InnerSubscriber';\nexport { OuterSubscriber } from '../internal/OuterSubscriber';\nexport { Scheduler } from '../internal/Scheduler';\nexport { AnonymousSubject } from '../internal/Subject';\nexport { SubjectSubscription } from '../internal/SubjectSubscription';\nexport { Subscriber } from '../internal/Subscriber';\nexport { fromPromise } from '../internal/observable/fromPromise';\nexport { fromIterable } from '../internal/observable/fromIterable';\nexport { ajax } from '../internal/observable/dom/ajax';\nexport { webSocket } from '../internal/observable/dom/webSocket';\nexport { ajaxGet, ajaxPost, ajaxDelete, ajaxPut, ajaxPatch, ajaxGetJSON, AjaxObservable, AjaxSubscriber, AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\nexport { CombineLatestOperator } from '../internal/observable/combineLatest';\nexport { dispatch } from '../internal/observable/range';\nexport { SubscribeOnObservable } from '../internal/observable/SubscribeOnObservable';\nexport { Timestamp } from '../internal/operators/timestamp';\nexport { TimeInterval } from '../internal/operators/timeInterval';\nexport { GroupedObservable } from '../internal/operators/groupBy';\nexport { defaultThrottleConfig } from '../internal/operators/throttle';\nexport { rxSubscriber } from '../internal/symbol/rxSubscriber';\nexport { iterator } from '../internal/symbol/iterator';\nexport { observable } from '../internal/symbol/observable';\nexport { ArgumentOutOfRangeError } from '../internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from '../internal/util/EmptyError';\nexport { Immediate } from '../internal/util/Immediate';\nexport { ObjectUnsubscribedError } from '../internal/util/ObjectUnsubscribedError';\nexport { TimeoutError } from '../internal/util/TimeoutError';\nexport { UnsubscriptionError } from '../internal/util/UnsubscriptionError';\nexport { applyMixins } from '../internal/util/applyMixins';\nexport { errorObject } from '../internal/util/errorObject';\nexport { hostReportError } from '../internal/util/hostReportError';\nexport { identity } from '../internal/util/identity';\nexport { isArray } from '../internal/util/isArray';\nexport { isArrayLike } from '../internal/util/isArrayLike';\nexport { isDate } from '../internal/util/isDate';\nexport { isFunction } from '../internal/util/isFunction';\nexport { isIterable } from '../internal/util/isIterable';\nexport { isNumeric } from '../internal/util/isNumeric';\nexport { isObject } from '../internal/util/isObject';\nexport { isInteropObservable as isObservable } from '../internal/util/isInteropObservable';\nexport { isPromise } from '../internal/util/isPromise';\nexport { isScheduler } from '../internal/util/isScheduler';\nexport { noop } from '../internal/util/noop';\nexport { not } from '../internal/util/not';\nexport { pipe } from '../internal/util/pipe';\nexport { root } from '../internal/util/root';\nexport { subscribeTo } from '../internal/util/subscribeTo';\nexport { subscribeToArray } from '../internal/util/subscribeToArray';\nexport { subscribeToIterable } from '../internal/util/subscribeToIterable';\nexport { subscribeToObservable } from '../internal/util/subscribeToObservable';\nexport { subscribeToPromise } from '../internal/util/subscribeToPromise';\nexport { subscribeToResult } from '../internal/util/subscribeToResult';\nexport { toSubscriber } from '../internal/util/toSubscriber';\nexport { tryCatch } from '../internal/util/tryCatch';\n","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n","import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nconst DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: (e) => JSON.parse(e.data),\n    serializer: (value) => JSON.stringify(value),\n};\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nexport class WebSocketSubject extends AnonymousSubject {\n    constructor(urlConfigOrSource, destination) {\n        super();\n        if (urlConfigOrSource instanceof Observable) {\n            this.destination = destination;\n            this.source = urlConfigOrSource;\n        }\n        else {\n            const config = this._config = Object.assign({}, DEFAULT_WEBSOCKET_CONFIG);\n            this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (let key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject();\n        }\n    }\n    lift(operator) {\n        const sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    }\n    _resetState() {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    }\n    multiplex(subMsg, unsubMsg, messageFilter) {\n        const self = this;\n        return new Observable((observer) => {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            const subscription = self.subscribe(x => {\n                try {\n                    if (messageFilter(x)) {\n                        observer.next(x);\n                    }\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n            }, err => observer.error(err), () => observer.complete());\n            return () => {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    }\n    _connectSocket() {\n        const { WebSocketCtor, protocol, url, binaryType } = this._config;\n        const observer = this._output;\n        let socket = null;\n        try {\n            socket = protocol ?\n                new WebSocketCtor(url, protocol) :\n                new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        const subscription = new Subscription(() => {\n            this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = (e) => {\n            const { _socket } = this;\n            if (!_socket) {\n                socket.close();\n                this._resetState();\n                return;\n            }\n            const { openObserver } = this._config;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            const queue = this.destination;\n            this.destination = Subscriber.create((x) => {\n                if (socket.readyState === 1) {\n                    try {\n                        const { serializer } = this._config;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        this.destination.error(e);\n                    }\n                }\n            }, (e) => {\n                const { closingObserver } = this._config;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                this._resetState();\n            }, () => {\n                const { closingObserver } = this._config;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(this.destination));\n            }\n        };\n        socket.onerror = (e) => {\n            this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = (e) => {\n            this._resetState();\n            const { closeObserver } = this._config;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = (e) => {\n            try {\n                const { deserializer } = this._config;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(() => {\n            const { _socket } = this;\n            if (this._output.observers.length === 0) {\n                if (_socket && _socket.readyState === 1) {\n                    _socket.close();\n                }\n                this._resetState();\n            }\n        });\n        return subscriber;\n    }\n    unsubscribe() {\n        const { _socket } = this;\n        if (_socket && _socket.readyState === 1) {\n            _socket.close();\n        }\n        this._resetState();\n        super.unsubscribe();\n    }\n}\n","import { AjaxObservable } from './AjaxObservable';\nexport const ajax = (() => AjaxObservable.create)();\n","import { WebSocketSubject } from './WebSocketSubject';\nexport function webSocket(urlConfigOrSource) {\n    return new WebSocketSubject(urlConfigOrSource);\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = (() => Object.prototype.toString)();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n","import { Observable } from '../Observable';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return scheduleIterable(input, scheduler);\n    }\n}\n","import { Observable } from '../Observable';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nimport { schedulePromise } from '../scheduled/schedulePromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return schedulePromise(input, scheduler);\n    }\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n","import { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { Observable } from '../Observable';\nexport function partition(source, predicate, thisArg) {\n    return [\n        filter(predicate, thisArg)(new Observable(subscribeTo(source))),\n        filter(not(predicate, thisArg))(new Observable(subscribeTo(source)))\n    ];\n}\n","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                const observable = observables[i];\n                const subscription = subscribeToResult(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n","import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass AuditSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            let duration;\n            try {\n                const { durationSelector } = this;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = undefined;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = undefined;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext() {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nclass BufferOperator {\n    constructor(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n}\nclass BufferSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingNotifier) {\n        super(destination);\n        this.buffer = [];\n        this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    notifyNext() {\n        const buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n","import { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nexport function bufferTime(bufferTimeSpan) {\n    let length = arguments.length;\n    let scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    let bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    let maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nclass BufferTimeOperator {\n    constructor(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    }\n}\nclass Context {\n    constructor() {\n        this.buffer = [];\n    }\n}\nclass BufferTimeSubscriber extends Subscriber {\n    constructor(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        super(destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        const context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            const closeState = { subscriber: this, context };\n            const creationState = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        let filledBufferContext;\n        for (let i = 0; i < len; i++) {\n            const context = contexts[i];\n            const buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    }\n    _error(err) {\n        this.contexts.length = 0;\n        super._error(err);\n    }\n    _complete() {\n        const { contexts, destination } = this;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.contexts = null;\n    }\n    onBufferFull(context) {\n        this.closeContext(context);\n        const closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            const bufferTimeSpan = this.bufferTimeSpan;\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    openContext() {\n        const context = new Context();\n        this.contexts.push(context);\n        return context;\n    }\n    closeContext(context) {\n        this.destination.next(context.buffer);\n        const contexts = this.contexts;\n        const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    }\n}\nfunction dispatchBufferTimeSpanOnly(state) {\n    const subscriber = state.subscriber;\n    const prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n    const context = subscriber.openContext();\n    const action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    const { subscriber, context } = arg;\n    subscriber.closeContext(context);\n}\n","import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n","import { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass BufferWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.buffer = undefined;\n        this.subscribing = false;\n    }\n    notifyNext() {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return (source) => source.lift(new CombineLatestOperator(project));\n}\n","import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import { concat as concatStatic } from '../observable/concat';\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { concatMap } from './concatMap';\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(() => innerObservable, resultSelector);\n}\n","import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function debounce(durationSelector) {\n    return (source) => source.lift(new DebounceOperator(durationSelector));\n}\nclass DebounceOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass DebounceSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        try {\n            const result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.emitValue();\n        this.destination.complete();\n    }\n    _tryNext(value, duration) {\n        let subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            const value = this.value;\n            const subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = undefined;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = undefined;\n            this.hasValue = false;\n            super._next(value);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nclass DeMaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    }\n}\nclass DeMaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        value.observe(this.destination);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue\n        ? defaultIfEmpty(defaultValue)\n        : throwIfEmpty(() => new ArgumentOutOfRangeError()));\n}\n","import { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith(...array) {\n    return (source) => concat(source, of(...array));\n}\n","import { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return (source) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\nclass EveryOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n}\nclass EverySubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    notifyComplete(everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    }\n    _next(value) {\n        let result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\nclass SwitchFirstSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n","import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhaustMapOperator(project));\n}\nclass ExhaustMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\nclass ExhaustMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\nexport class ExpandSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                const { project } = this;\n                const result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    const state = { subscriber: this, result, value, index };\n                    const destination = this.destination;\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        const destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this._next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return (source) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\nexport class FindValueOperator {\n    constructor(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    call(observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n}\nexport class FindValueSubscriber extends Subscriber {\n    constructor(destination, predicate, source, yieldIndex, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    notifyComplete(value) {\n        const destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    }\n    _next(value) {\n        const { predicate, thisArg } = this;\n        const index = this.index++;\n        try {\n            const result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n}\n","import { FindValueOperator } from '../operators/find';\nexport function findIndex(predicate, thisArg) {\n    return (source) => source.lift(new FindValueOperator(predicate, source, true, thisArg));\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nclass IgnoreElementsOperator {\n    call(subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    }\n}\nclass IgnoreElementsSubscriber extends Subscriber {\n    _next(unused) {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nclass MaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    }\n}\nclass MaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        this.destination.next(Notification.createNext(value));\n    }\n    _error(err) {\n        const destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    }\n    _complete() {\n        const destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    }\n}\n","import { reduce } from './reduce';\nexport function max(comparer) {\n    const max = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) > 0 ? x : y\n        : (x, y) => x > y ? x : y;\n    return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent = Number.POSITIVE_INFINITY) {\n    return (source) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexport class MergeScanOperator {\n    constructor(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n}\nexport class MergeScanSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, accumulator, acc, concurrent) {\n        super(destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            const index = this.index++;\n            const destination = this.destination;\n            let ish;\n            try {\n                const { accumulator } = this;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _innerSub(ish) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        const { destination } = this;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n}\n","import { reduce } from './reduce';\nexport function min(comparer) {\n    const min = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) < 0 ? x : y\n        : (x, y) => x < y ? x : y;\n    return reduce(min);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n","import { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext(...nextSources) {\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return (source) => source.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexport function onErrorResumeNextStatic(...nextSources) {\n    let source = undefined;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nclass OnErrorResumeNextOperator {\n    constructor(nextSources) {\n        this.nextSources = nextSources;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n}\nclass OnErrorResumeNextSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, nextSources) {\n        super(destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    notifyError() {\n        this.subscribeToNextSource();\n    }\n    notifyComplete() {\n        this.subscribeToNextSource();\n    }\n    _error(err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    _complete() {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    subscribeToNextSource() {\n        const next = this.nextSources.shift();\n        if (!!next) {\n            const innerSubscriber = new SimpleInnerSubscriber(this);\n            const destination = this.destination;\n            destination.add(innerSubscriber);\n            const innerSubscription = innerSubscribe(next, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                destination.add(innerSubscription);\n            }\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        let pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nexport function partition(predicate, thisArg) {\n    return (source) => [\n        filter(predicate, thisArg)(source),\n        filter(not(predicate, thisArg))(source)\n    ];\n}\n","import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\nexport function publish(selector) {\n    return selector ?\n        multicast(() => new Subject(), selector) :\n        multicast(new Subject());\n}\n","import { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nexport function publishBehavior(value) {\n    return (source) => multicast(new BehaviorSubject(value))(source);\n}\n","import { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return (source) => multicast(new AsyncSubject())(source);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    const subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return (source) => multicast(() => subject, selector)(source);\n}\n","import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n","import { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count = -1) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nclass RepeatOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RepeatSubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.complete();\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext() {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete() {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    notifyNext() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n        return subscription;\n    }\n}\nclass SampleSubscriber extends SimpleOuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n","import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparator) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    }\n    checkValues() {\n        const { _a, _b, comparator } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n    completeB() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.completeB();\n        this.unsubscribe();\n    }\n}\n","import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler,\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler, }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        let innerSub;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            innerSub = subject.subscribe(this);\n            subscription = source.subscribe({\n                next(value) {\n                    subject.next(value);\n                },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n            if (isComplete) {\n                subscription = undefined;\n            }\n        }\n        else {\n            innerSub = subject.subscribe(this);\n        }\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            innerSub = undefined;\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n","import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n    return (source) => source.lift(new SkipLastOperator(count));\n}\nclass SkipLastOperator {\n    constructor(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    }\n}\nclass SkipLastSubscriber extends Subscriber {\n    constructor(destination, _skipCount) {\n        super(destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    _next(value) {\n        const skipCount = this._skipCount;\n        const count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            const currentIndex = count % skipCount;\n            const ring = this._ring;\n            const oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    }\n}\n","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\nclass SkipUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        this.add(innerSubscriber);\n        this.innerSubscription = innerSubscriber;\n        const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            this.add(innerSubscription);\n            this.innerSubscription = innerSubscription;\n        }\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext() {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n","import { switchMap } from './switchMap';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n","import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n    return (source) => defer(() => {\n        return source.pipe(scan(({ current }, value) => ({ value, current: scheduler.now(), last: current }), { current: scheduler.now(), value: undefined, last: undefined }), map(({ current, last, value }) => new TimeInterval(value, current - last)));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n","import { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\nexport function timeout(due, scheduler = async) {\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function timeoutWith(due, withObservable, scheduler = async) {\n    return (source) => {\n        let absoluteTimeout = isDate(due);\n        let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nclass TimeoutWithOperator {\n    constructor(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n}\nclass TimeoutWithSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        super(destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.scheduleTimeout();\n    }\n    static dispatchTimeout(subscriber) {\n        const { withObservable } = subscriber;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n    }\n    scheduleTimeout() {\n        const { action } = this;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    }\n    _next(value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        super._next(value);\n    }\n    _unsubscribe() {\n        this.action = undefined;\n        this.scheduler = null;\n        this.withObservable = null;\n    }\n}\n","import { async } from '../scheduler/async';\nimport { map } from './map';\nexport function timestamp(scheduler = async) {\n    return map((value) => new Timestamp(value, scheduler.now()));\n}\nexport class Timestamp {\n    constructor(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n}\n","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext() {\n        this.openWindow();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete() {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery = 0) {\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nclass WindowCountOperator {\n    constructor(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    }\n}\nclass WindowCountSubscriber extends Subscriber {\n    constructor(destination, windowSize, startWindowEvery) {\n        super(destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    _next(value) {\n        const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        const destination = this.destination;\n        const windowSize = this.windowSize;\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        const c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            const window = new Subject();\n            windows.push(window);\n            destination.next(window);\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.count = 0;\n        this.windows = null;\n    }\n}\n","import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return (source) => source.lift(new WindowToggleOperator(openings, closingSelector));\n}\nclass WindowToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass WindowToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    _next(value) {\n        const { contexts } = this;\n        if (contexts) {\n            const len = contexts.length;\n            for (let i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    }\n    _error(err) {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        super._error(err);\n    }\n    _complete() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            let closingNotifier;\n            try {\n                const { closingSelector } = this;\n                closingNotifier = closingSelector(innerValue);\n            }\n            catch (e) {\n                return this.error(e);\n            }\n            const window = new Subject();\n            const subscription = new Subscription();\n            const context = { window, subscription };\n            this.contexts.push(context);\n            const innerSubscription = subscribeToResult(this, closingNotifier, context);\n            if (innerSubscription.closed) {\n                this.closeWindow(this.contexts.length - 1);\n            }\n            else {\n                innerSubscription.context = context;\n                subscription.add(innerSubscription);\n            }\n            this.destination.next(window);\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    }\n    notifyError(err) {\n        this.error(err);\n    }\n    notifyComplete(inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    }\n    closeWindow(index) {\n        if (index === -1) {\n            return;\n        }\n        const { contexts } = this;\n        const context = contexts[index];\n        const { window, subscription } = context;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    }\n}\n","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","import { zip as zipStatic } from '../observable/zip';\nexport function zip(...observables) {\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic(source, ...observables));\n    };\n}\n","import { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return (source) => source.lift(new ZipOperator(project));\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class ColdObservable extends Observable {\n    constructor(messages, scheduler) {\n        super(function (subscriber) {\n            const observable = this;\n            const index = observable.logSubscribedFrame();\n            const subscription = new Subscription();\n            subscription.add(new Subscription(() => {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscription;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    scheduleMessages(subscriber) {\n        const messagesLength = this.messages.length;\n        for (let i = 0; i < messagesLength; i++) {\n            const message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(({ message, subscriber }) => { message.notification.observe(subscriber); }, message.frame, { message, subscriber }));\n        }\n    }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        const subscription = new Subscription();\n        subscription.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(super._subscribe(subscriber));\n        return subscription;\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (() => {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n","export class SubscriptionLog {\n    constructor(subscribedFrame, unsubscribedFrame = Number.POSITIVE_INFINITY) {\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n}\n","import { SubscriptionLog } from './SubscriptionLog';\nexport class SubscriptionLoggable {\n    constructor() {\n        this.subscriptions = [];\n    }\n    logSubscribedFrame() {\n        this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    }\n    logUnsubscribedFrame(index) {\n        const subscriptionLogs = this.subscriptions;\n        const oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    }\n}\n","import { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nimport { AsyncScheduler } from '../scheduler/AsyncScheduler';\nconst defaultMaxFrame = 750;\nexport class TestScheduler extends VirtualTimeScheduler {\n    constructor(assertDeepEqual) {\n        super(VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n        this.runMode = false;\n    }\n    createTime(marbles) {\n        const indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    }\n    createColdObservable(marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        const cold = new ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    }\n    createHotObservable(marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        const subject = new HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    }\n    materializeInnerObservable(observable, outerFrame) {\n        const messages = [];\n        observable.subscribe((value) => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createNext(value) });\n        }, (err) => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createError(err) });\n        }, () => {\n            messages.push({ frame: this.frame - outerFrame, notification: Notification.createComplete() });\n        });\n        return messages;\n    }\n    expectObservable(observable, subscriptionMarbles = null) {\n        const actual = [];\n        const flushTest = { actual, ready: false };\n        const subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n        const subscriptionFrame = subscriptionParsed.subscribedFrame === Number.POSITIVE_INFINITY ?\n            0 : subscriptionParsed.subscribedFrame;\n        const unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n        let subscription;\n        this.schedule(() => {\n            subscription = observable.subscribe(x => {\n                let value = x;\n                if (x instanceof Observable) {\n                    value = this.materializeInnerObservable(value, this.frame);\n                }\n                actual.push({ frame: this.frame, notification: Notification.createNext(value) });\n            }, (err) => {\n                actual.push({ frame: this.frame, notification: Notification.createError(err) });\n            }, () => {\n                actual.push({ frame: this.frame, notification: Notification.createComplete() });\n            });\n        }, subscriptionFrame);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        const { runMode } = this;\n        return {\n            toBe(marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n            }\n        };\n    }\n    expectSubscriptions(actualSubscriptionLogs) {\n        const flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        const { runMode } = this;\n        return {\n            toBe(marbles) {\n                const marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(marbles => TestScheduler.parseMarblesAsSubscriptions(marbles, runMode));\n            }\n        };\n    }\n    flush() {\n        const hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        super.flush();\n        this.flushTests = this.flushTests.filter(test => {\n            if (test.ready) {\n                this.assertDeepEqual(test.actual, test.expected);\n                return false;\n            }\n            return true;\n        });\n    }\n    static parseMarblesAsSubscriptions(marbles, runMode = false) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        const len = marbles.length;\n        let groupStart = -1;\n        let subscriptionFrame = Number.POSITIVE_INFINITY;\n        let unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        let frame = 0;\n        for (let i = 0; i < len; i++) {\n            let nextFrame = frame;\n            const advanceFrameBy = (count) => {\n                nextFrame += count * this.frameTimeFactor;\n            };\n            const c = marbles[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    advanceFrameBy(1);\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            const buffer = marbles.slice(i);\n                            const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                const duration = parseFloat(match[1]);\n                                const unit = match[2];\n                                let durationInMs;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n            frame = nextFrame;\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    }\n    static parseMarbles(marbles, values, errorValue, materializeInnerObservables = false, runMode = false) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        const len = marbles.length;\n        const testMessages = [];\n        const subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n        let frame = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        const getValue = typeof values !== 'object' ?\n            (x) => x :\n            (x) => {\n                if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        let groupStart = -1;\n        for (let i = 0; i < len; i++) {\n            let nextFrame = frame;\n            const advanceFrameBy = (count) => {\n                nextFrame += count * this.frameTimeFactor;\n            };\n            let notification;\n            const c = marbles[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '|':\n                    notification = Notification.createComplete();\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    advanceFrameBy(1);\n                    break;\n                case '#':\n                    notification = Notification.createError(errorValue || 'error');\n                    advanceFrameBy(1);\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || marbles[i - 1] === ' ') {\n                            const buffer = marbles.slice(i);\n                            const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                const duration = parseFloat(match[1]);\n                                const unit = match[2];\n                                let durationInMs;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    notification = Notification.createNext(getValue(c));\n                    advanceFrameBy(1);\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n            }\n            frame = nextFrame;\n        }\n        return testMessages;\n    }\n    run(callback) {\n        const prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n        const prevMaxFrames = this.maxFrames;\n        TestScheduler.frameTimeFactor = 1;\n        this.maxFrames = Number.POSITIVE_INFINITY;\n        this.runMode = true;\n        AsyncScheduler.delegate = this;\n        const helpers = {\n            cold: this.createColdObservable.bind(this),\n            hot: this.createHotObservable.bind(this),\n            flush: this.flush.bind(this),\n            expectObservable: this.expectObservable.bind(this),\n            expectSubscriptions: this.expectSubscriptions.bind(this),\n        };\n        try {\n            const ret = callback(helpers);\n            this.flush();\n            return ret;\n        }\n        finally {\n            TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n            this.maxFrames = prevMaxFrames;\n            this.runMode = false;\n            AsyncScheduler.delegate = undefined;\n        }\n    }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","const TimeoutErrorImpl = (() => {\n    function TimeoutErrorImpl() {\n        Error.call(this);\n        this.message = 'Timeout has occurred';\n        this.name = 'TimeoutError';\n        return this;\n    }\n    TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n    return TimeoutErrorImpl;\n})();\nexport const TimeoutError = TimeoutErrorImpl;\n","export function applyMixins(derivedCtor, baseCtors) {\n    for (let i = 0, len = baseCtors.length; i < len; i++) {\n        const baseCtor = baseCtors[i];\n        const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            const name = propertyKeys[j];\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        }\n    }\n}\n","export const errorObject = { e: {} };\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n","const __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root = __window || __global || __self;\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n","import { errorObject } from './errorObject';\nlet tryCatchTarget;\nfunction tryCatcher() {\n    errorObject.e = undefined;\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n    finally {\n        tryCatchTarget = undefined;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n","export { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap, flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","export { TestScheduler } from '../internal/testing/TestScheduler';\n","export { webSocket as webSocket } from '../internal/observable/dom/webSocket';\nexport { WebSocketSubject } from '../internal/observable/dom/WebSocketSubject';\n"],"names":["Observable","Subject","throwError","CacheService","constructor","Map","get","key","fallback","maxAge","hasValidCachedValue","console","log","of","cache","value","DEFAULT_MAX_AGE","inFlightObservables","has","set","do","expiry","Date","now","notifyInFlightObservers","delete","inFlight","observersCount","observers","length","next","complete","factory","providedIn","Object","defineProperty","exports","rxjs_1","require","internal_compatibility_1","AnonymousSubject","internal_compatibility_2","config","rxjs_2","Subscription","ReplaySubject","BehaviorSubject","Notification","EmptyError","ArgumentOutOfRangeError","ObjectUnsubscribedError","UnsubscriptionError","pipe","testing_1","TestScheduler","rxjs_3","Subscriber","AsyncSubject","ConnectableObservable","TimeoutError","VirtualTimeScheduler","ajax_1","AjaxResponse","AjaxError","AjaxTimeoutError","rxjs_4","internal_compatibility_3","internal_compatibility_4","TimeInterval","Timestamp","_operators","operators","Scheduler","asap","asapScheduler","queue","queueScheduler","animationFrame","animationFrameScheduler","async","asyncScheduler","Symbol","rxSubscriber","observable","iterator","bindCallback","bindNodeCallback","combineLatest","concat","defer","ajax","webSocket_1","webSocket","empty","forkJoin","from","fromEvent","fromEventPattern","fromPromise","generate","if","iif","interval","merge","staticNever","NEVER","never","onErrorResumeNext","pairs","race","range","throw","timer","using","zip","audit_1","prototype","audit","auditTime_1","auditTime","buffer_1","buffer","bufferCount_1","bufferCount","bufferTime_1","bufferTime","bufferToggle_1","bufferToggle","bufferWhen_1","bufferWhen","catch_1","catch","_catch","combineAll_1","combineAll","combineLatest_1","concat_1","concatAll_1","concatAll","concatMap_1","concatMap","concatMapTo_1","concatMapTo","count_1","count","debounce_1","debounce","debounceTime_1","debounceTime","defaultIfEmpty_1","defaultIfEmpty","delay_1","delay","delayWhen_1","delayWhen","dematerialize_1","dematerialize","distinct_1","distinct","distinctUntilChanged_1","distinctUntilChanged","distinctUntilKeyChanged_1","distinctUntilKeyChanged","do_1","_do","elementAt_1","elementAt","every_1","every","exhaust_1","exhaust","exhaustMap_1","exhaustMap","expand_1","expand","filter_1","filter","finally_1","finally","_finally","find_1","find","findIndex_1","findIndex","first_1","first","groupBy_1","groupBy","ignoreElements_1","ignoreElements","isEmpty_1","isEmpty","last_1","last","let_1","let","letProto","letBind","map_1","map","mapTo_1","mapTo","materialize_1","materialize","max_1","max","merge_1","mergeAll_1","mergeAll","mergeMap_1","mergeMap","flatMap","mergeMapTo_1","flatMapTo","mergeMapTo","mergeScan_1","mergeScan","min_1","min","multicast_1","multicast","observeOn_1","observeOn","onErrorResumeNext_1","pairwise_1","pairwise","partition_1","partition","pluck_1","pluck","publish_1","publish","publishBehavior_1","publishBehavior","publishLast_1","publishLast","publishReplay_1","publishReplay","race_1","reduce_1","reduce","repeat_1","repeat","repeatWhen_1","repeatWhen","retry_1","retry","retryWhen_1","retryWhen","sample_1","sample","sampleTime_1","sampleTime","scan_1","scan","sequenceEqual_1","sequenceEqual","share_1","share","shareReplay_1","shareReplay","single_1","single","skip_1","skip","skipLast_1","skipLast","skipUntil_1","skipUntil","skipWhile_1","skipWhile","startWith_1","startWith","subscribeOn_1","subscribeOn","switch_1","switch","_switch","switchMap_1","switchMap","switchMapTo_1","switchMapTo","take_1","take","takeLast_1","takeLast","takeUntil_1","takeUntil","takeWhile_1","takeWhile","throttle_1","throttle","throttleTime_1","throttleTime","timeInterval_1","timeInterval","timeout_1","timeout","timeoutWith_1","timeoutWith","timestamp_1","timestamp","toArray_1","toArray","window_1","window","windowCount_1","windowCount","windowTime_1","windowTime","windowToggle_1","windowToggle","windowWhen_1","windowWhen","withLatestFrom_1","withLatestFrom","zip_1","zipProto","zipAll_1","zipAll","operators_1","durationSelector","duration","scheduler","closingNotifier","bufferSize","startBufferEvery","bufferTimeSpan","arguments","isScheduler","bufferCreationInterval","maxBufferSize","Number","POSITIVE_INFINITY","openings","closingSelector","selector","catchError","project","observables","_i","pop","isArray","slice","lift","call","apply","CombineLatestOperator","innerObservable","predicate","dueTime","defaultValue","delayDurationSelector","subscriptionDelay","keySelector","flushes","compare","nextOrObserver","error","tap","index","undefined","thisArg","concurrent","callback","finalize","args","elementSelector","subjectSelector","func","comparer","accumulator","seed","subjectOrSubjectFactory","nextSources","properties","selectorOrScheduler","notifier","period","compareTo","comparor","configOrBufferSize","array","switchAll","defaultThrottleConfig","due","withObservable","windowBoundaries","windowSize","startWindowEvery","windowTimeSpan","windowCreationInterval","maxWindowSize","isNumeric","__export","m","p","hasOwnProperty","GroupedObservable","VirtualAction","NotificationKind","noop","identity","isObservable","scheduled","EMPTY","InnerSubscriber","OuterSubscriber","SubjectSubscription","fromIterable","ajaxGet","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","AjaxObservable","AjaxSubscriber","WebSocketSubject","dispatch","SubscribeOnObservable","Immediate","applyMixins","errorObject","hostReportError","isArrayLike","isDate","isFunction","isIterable","isObject","isInteropObservable","isPromise","not","root","subscribeTo","subscribeToArray","subscribeToIterable","subscribeToObservable","subscribeToPromise","subscribeToResult","toSubscriber","tryCatch","hasNext","hasCompleted","_subscribe","subscriber","hasError","thrownError","kind","hasValue","observe","observer","accept","toObservable","Error","createNext","undefinedValueNotification","createError","err","createComplete","completeNotification","ObserveOnSubscriber","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","isStopped","push","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","len","subscription","closed","add","i","eventsCount","spliceCount","time","Math","splice","SchedulerAction","schedule","work","state","source","delayTime","create","arg","subscribe","canReportError","callbackFunc","resultSelector","context","subject","params","handler","innerArgs","warn","self","dispatchNext","dispatchError","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","e","url","headers","method","body","mapResponse","x","response","responseType","urlOrRequest","request","createXHR","crossDomain","withCredentials","prop","post","put","patch","getJSON","destination","done","getHeader","contentTypeHeader","FormData","serializeBody","send","xhr","result","user","password","setupEvents","open","setHeaders","contentType","splitIndex","indexOf","substring","keys","encodeURIComponent","join","JSON","stringify","setRequestHeader","headerName","toLowerCase","progressSubscriber","xhrTimeout","ontimeout","upload","xhrProgress","onprogress","xhrError","onerror","xhrReadyStateChange","onreadystatechange","xhrLoad","readyState","status","responseText","onload","unsubscribe","abort","originalEvent","parseXhrResponse","AjaxErrorImpl","message","name","parseJson","parse","responseXML","AjaxTimeoutErrorImpl","DEFAULT_WEBSOCKET_CONFIG","deserializer","data","serializer","WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT","urlConfigOrSource","_config","assign","_output","WebSocketCtor","WebSocket","operator","sock","_resetState","_socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","socket","close","onopen","openObserver","closingObserver","code","reason","TypeError","onclose","closeObserver","wasClean","onmessage","toString","target","eventName","options","Array","setupSubscription","sourceObj","isEventTarget","addEventListener","removeEventListener","isJQueryStyleEventEmitter","on","off","isNodeStyleEventEmitter","addListener","removeListener","addHandler","removeHandler","retValue","scheduleIterable","input","schedulePromise","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","initialState","conditionResult","needIterate","trueResult","falseResult","counter","sources","remainder","subNext","obj","fromArray","RaceOperator","RaceSubscriber","hasFirst","subscriptions","_next","_complete","notifyNext","_outerValue","innerValue","outerIndex","remove","start","current","periodOrScheduler","resourceFactory","observableFactory","resource","Symbol_iterator","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","ZipOperator","ZipSubscriber","values","iterators","active","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","Boolean","parent","isComplete","notifyComplete","auditOperatorFunction","AuditOperator","AuditSubscriber","throttled","innerSubscription","clearThrottle","bufferOperatorFunction","BufferOperator","BufferSubscriber","bufferCountOperatorFunction","BufferCountOperator","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","buffers","bufferTimeOperatorFunction","BufferTimeOperator","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","_error","_unsubscribe","closeContext","spliceIndex","prevContext","action","bufferToggleOperatorFunction","BufferToggleOperator","BufferToggleSubscriber","outerValue","closeBuffer","openBuffer","innerSub","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","none","concatStatic","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","_tryNext","emitValue","durationSubscription","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","absoluteDelay","delayFor","abs","DelayOperator","DelaySubscriber","errored","notification","_schedule","scheduleNotification","DelayMessage","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","completed","delayNotifierSubscriptions","_innerValue","_outerIndex","_innerIndex","removeSubscription","tryComplete","notifyError","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","unused","subscribeToSource","dematerializeOperatorFunction","DeMaterializeOperator","DeMaterializeSubscriber","DistinctOperator","DistinctSubscriber","Set","clear","_useKeySelector","_finalizeNext","y","throwIfEmpty","hasDefaultValue","v","endWith","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","a","b","ii","ExhaustMapOperator","ExhaustMapSubscriber","tryNext","_innerSub","innerSubscriber","ExpandOperator","ExpandSubscriber","subscribeToProjection","FindValueOperator","yieldIndex","FindValueSubscriber","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","element","groupedObservable","GroupDurationSubscriber","forEach","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","ignoreElementsOperatorFunction","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","materializeOperatorFunction","MaterializeOperator","MaterializeSubscriber","mergeStatic","MergeScanOperator","MergeScanSubscriber","acc","ish","observeOnOperatorFunction","ObserveOnOperator","scheduleMessage","ObserveOnMessage","OnErrorResumeNextOperator","onErrorResumeNextStatic","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","pair","prev","plucker","props","mapper","currentProp","raceStatic","raceOperatorFunction","reduceOperatorFunctionWithSeed","reduceOperatorFunction","RepeatOperator","RepeatSubscriber","_unsubscribeAndRecycle","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","errors","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","comparator","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","completeB","refCount","shareReplayOperator","useRefCount","shareReplayOperation","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","total","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","ring","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","subscribeOnOperatorFunction","SubscribeOnOperator","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasValue","_sendValue","_throttled","tryDurationSelector","throttlingDone","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","absoluteTimeout","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","toArrayReducer","arr","item","windowOperatorFunction","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowCountOperatorFunction","WindowCountOperator","WindowCountSubscriber","windows","c","windowTimeOperatorFunction","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","closeWindow","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","innerIndex","inner","windowWhenOperatorFunction","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","found","_tryProject","zipStatic","zipOperatorFunction","Action","AsyncAction","AnimationFrameAction","requestAsyncId","id","actions","requestAnimationFrame","flush","recycleAsyncId","cancelAnimationFrame","AsyncScheduler","AnimationFrameScheduler","execute","AsapAction","setImmediate","bind","clearImmediate","AsapScheduler","pending","setInterval","clearInterval","_execute","errorValue","delegate","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","sort","sortActions","SubscriptionLoggable","ColdObservable","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","messagesLength","HotObservable","setup","SubscriptionLog","subscribedFrame","unsubscribedFrame","subscriptionLogs","oldSubscriptionLog","defaultMaxFrame","assertDeepEqual","hotObservables","coldObservables","flushTests","runMode","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","subscriptionMarbles","actual","flushTest","ready","subscriptionParsed","parseMarblesAsSubscriptions","subscriptionFrame","unsubscriptionFrame","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","test","groupStart","nextFrame","advanceFrameBy","match","parseFloat","unit","durationInMs","materializeInnerObservables","testMessages","subIndex","replace","getValue","run","prevFrameTimeFactor","prevMaxFrames","helpers","hot","ret","nextHandle","RESOLVED","Promise","resolve","activeHandles","findAndClearHandle","handle","cb","then","TestTools","TimeoutErrorImpl","derivedCtor","baseCtors","baseCtor","propertyKeys","getOwnPropertyNames","j","len2","isNaN","val","pred","notPred","__window","__self","WorkerGlobalScope","__global","global","_root","tryCatchTarget","tryCatcher","fn"],"sourceRoot":"webpack:///"}