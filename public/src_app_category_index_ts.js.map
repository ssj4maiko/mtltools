{"version":3,"file":"src_app_category_index_ts.js","mappings":"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","sources":["./src/app/category/add/add.component.ts","./src/app/_views/form/form.component.html","./src/app/category/category-routing.module.ts","./src/app/category/category.module.ts","./src/app/category/edit/edit.component.ts","./src/app/category/form.service.ts","./src/app/category/index.ts","./src/app/category/list/list.component.ts","./src/app/category/list/list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { DictionaryCategory } from '../../_models/dictionarycategory';\nimport { Dictionary } from '../../_models/dictionary';\nimport { FormField, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-category-add',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\n\nexport class AddComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.formTitle = 'Add new Category';\n    this.getForm(true);\n  }\n\n  submitForm(form: NgForm) {\n    const values = this.getValues();\n    this.api.Category.add({ idDictionary: this.idDictionary,  category: values.dictionaryCategory })\n      .then(category => {\n        this.router.navigate(['/dictionary', this.idDictionary, category.id]);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  goBack() {\n    this.router.navigate(['/dictionary', this.idDictionary]);\n  }\n\n}\n","<div class=\"form-content\">\n    <h1 class=\"title\">{{ formTitle }}</h1>\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm(formGroup.value)\">\n        <div *ngFor=\"let field of form\" class='field'>\n\n            <ng-container [ngSwitch]=\"field.type\">\n\n                <ng-container #tempHidden *ngSwitchCase=\"'hidden'\">\n                    <input type=\"hidden\" formControlName=\"{{ field.name }}\">\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'checkbox'\">\n                    <label class='checkbox'>\n                        <input type=\"checkbox\" formControlName=\"{{ field.name }}\">\n                        {{ field.label }}\n                    </label>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'select'\">\n                    <label>{{ field.label }}</label>\n                    <div class=\"control\">\n                        <select formControlName=\"{{ field.name }}\">\n                            <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                        </select>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'multiselect'\">\n                    <label>{{ field.label }} - {{ field.name }}</label>\n                    <div class=\"control\">\n                        <!--p *ngFor=\"let option of field.options; let i = index\"-->\n                        <p *ngFor=\"let option of field.options; let i = index\">\n                            <label>\n                                <!--<input type=\"checkbox\" value=\"{{option.value}}\" (change)=\"option.setChecked(!this.checked);\" [checked]=\"option.checked\" />-->\n                                <!--{{option.label}}-->\n                                <input type=\"checkbox\" [formControl]=\"option.control\" /> {{ option.label}}\n                            </label>\n                            <!--select multiple='multiple' formControlName=\"{{ field.name }}\" (change)=\"onDebug(this.value)\">\n                                <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                            </select-->\n                        </p>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempText *ngSwitchDefault>\n                    <label class='label' for=\"{{ field.name }}\">{{ field.label }}</label>\n                    <div class=\"control\">\n                        <input type=\"{{ field.type }}\" id=\"{{ field.name }}\" formControlName=\"{{ field.name }}\" class=\"input\">\n                    </div>\n                    <!--p class=\"help is-success\"></p-->\n                    <!--p class=\"help is-danger\"></p-->\n                </ng-container>\n\n            </ng-container>\n        </div>\n\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <input type=\"submit\" class=\"button is-link\" value=\"Submit\" />\n            </div>\n            <div class=\"control\">\n                <input (click)=\"goBack()\" class=\"button is-danger\" value=\"Cancel\" />\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EntryModule } from '../entry';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Categories' }\n  },\n  {\n     path: 'add'\n    , component: AddComponent\n    , data: { title: 'Add Categories', breadcrumb: 'Add Category' }\n  },\n  {\n    path: 'edit/:idCategory'\n    , component: EditComponent\n    , data: { title: 'Edit Category', breadcrumb: 'Edit Category' }\n  },\n  {\n     path: ':idCategory'\n        , loadChildren: () => import('../entry').then(m => m.EntryModule)\n    , data: { title: 'View Category', breadcrumb: 'Entries' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoryRoutingModule } from './category-routing.module';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ListComponent } from './list/list.component';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [AddComponent, EditComponent, ListComponent],\n\timports: [\n\t\tCommonModule,\n\t\tCategoryRoutingModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t]\n})\nexport class CategoryModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Dictionary } from '../../_models/dictionary';\nimport { FormField, Option } from '../../_models/formField';\nimport { DictionaryCategory } from 'src/app/_models/dictionarycategory';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\n\nexport class EditComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n  idCategory: number;\n  category: DictionaryCategory;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.idCategory = this.route.snapshot.params.idCategory;\n\n    this.api.Category.get({ idDictionary: this.idDictionary, id: this.idCategory })\n      .then((category: DictionaryCategory) => {\n          this.category = category;\n          this.setValues(category);\n          this.getForm(false);\n      });\n  }\n\n  submitForm(form: NgForm) {\n    const values = this.getValues();\n    this.api.Category.update({ idDictionary: this.idDictionary, id: this.idCategory, category: values.dictionaryCategory })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  goBack() {\n    this.router.navigate(['/dictionary',  this.idDictionary]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { DictionaryCategory } from '../_models';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor(\n      public formBuilder: FormBuilder\n  ) {\n    this.formGroup = formBuilder.group({\n        id: [null]\n      , idDictionary: [null]\n      , name: [null]\n    });\n  }\n\n  formGroup: FormGroup;\n  form: FormField[];\n\n  indexes: string[] = [];\n\n  addForm(name?: string, label?: string, type?: string, options?: Option[]): void {\n    this.indexes.push(name);\n    this.form.push(new FormField(name, label, type, options));\n  }\n  getForm(insert: boolean): void {\n    this.form = [];\n    if (insert) { this.addForm('id', '', 'hidden'); }\n    this.addForm('idDictionary', '', 'hidden');\n    this.addForm('name', 'Name', 'text');\n  }\n\n  setValues(category: DictionaryCategory): void {\n    this.formGroup.setValue({\n        id: category.id\n      , idDictionary: category.idDictionary\n      , name: category.name\n    });\n  }\n\n  getValues(): {dictionaryCategory: DictionaryCategory} {\n    const values2return = { dictionaryCategory: null};\n    values2return.dictionaryCategory = new DictionaryCategory(this.formGroup.value);\n    delete (values2return.dictionaryCategory.entries);\n\n    return values2return;\n  }\n}\n","export * from './category.module';","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { DictionaryCategory } from '../../_models/dictionarycategory';\nimport { Dictionary } from '../../_models/dictionary';\nimport { Novel } from '../../_models/novel';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  categories: DictionaryCategory[] = [];\n  dictionary: Dictionary;\n  idDictionary: number;\n  idNovel: number;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    ) { }\n\n  ngOnInit() {\n    this.loadList();\n  }\n  loadList() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    Promise.all([\n      this.api.Dictionary.get({ id: this.idDictionary }),\n      this.api.Category.getAll({ idDictionary: this.idDictionary }),\n    ]).then((values: [Dictionary, DictionaryCategory[]]) => {\n      this.dictionary = values[0];\n      this.categories = Object.values(values[1]);\n    });\n  }\n  rebuildCache() {\n    this.api.Dictionary.rebuildCache(this.idDictionary)\n        .then(res => {\n          alert(res);\n        }, err => {\n          console.log(err);\n        });\n  }\n  LINK(idCategory?: number, action?: string) {\n    const base = [];\n    if (this.idNovel) {\n      base.push('novel');\n      base.push(this.idNovel);\n    }\n    base.push('dictionary');\n    base.push(this.idDictionary);\n    if (action) {\n      base.push(action);\n    }\n    if (idCategory) {\n      base.push(idCategory);\n    }\n    console.log(base);\n    this.router.navigate(base);\n  }\n  delete(idCategory: number) {\n    if (confirm('Are you sure?')) {\n      this.api.Category.delete({ idDictionary: this.idDictionary, id: idCategory })\n        .then((_) => {\n          // this.novels = [novels];\n          this.loadList();\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    return true;\n  }\n\n}\n","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n\t\t<div class=\"column\">\n\t\t\t<a (click)=\"rebuildCache();\" class=\"button is-primary\">Update Dictionary Cache</a>\n\t\t</div>\n\t\t<div class=\"column\">\n\t\t\t<a (click)=\"LINK(null,'add');\" class=\"button is-info\">Add Category</a>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th style=\"width: 200px;\"># of Entries</th>\n\t\t\t\t<th style=\"width: 150px;\">Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody class=\"clickable-table\">\n\t\t\t<tr *ngFor=\"let category of categories\">\n\t\t\t\t<td (click)=\"LINK(category.id);\">{{ category.name }}</td>\n\t\t\t\t<td (click)=\"LINK(category.id);\">{{ category.count_entries[0] ? category.count_entries[0].count : \"-\" }}</td>\n\t\t\t\t<td>\n                    <a  (click)=\"LINK(category.id,'edit');\" class=\"icon has-text-success\">\n                        <i class=\"fas fa-info-circle\"></i>\n                    </a>\n                    /\n                    <a [routerLink]=\"[]\" (click)=\"delete(category.id);\"  class=\"icon has-text-danger\">\n                        <i class=\"fas fa-ban\"></i>\n                    </a>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}