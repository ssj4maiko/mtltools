{"version":3,"file":"src_app_novel_index_ts.js","mappings":"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","sources":["./src/app/novel/add/add.component.ts","./src/app/_views/form/form.component.html","./src/app/novel/edit/edit.component.ts","./src/app/novel/form.service.ts","./src/app/novel/index.ts","./src/app/novel/list/list.component.html","./src/app/novel/list/list.component.ts","./src/app/novel/novel-routing.module.ts","./src/app/novel/novel.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel } from '../../_models/novel';\nimport { FormField, Meta } from '../../_models/formField';\nimport { Dictionary } from 'src/app/_models/dictionary';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-novel-add',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class AddComponent extends FormService implements OnInit {\n\n  formTitle: string;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.formTitle = 'Add new Novel';\n    Promise.all([\n      this.api.Meta.get('drivers'),\n      this.api.Dictionary.getAll(),\n    ]).then((values: [Meta, Dictionary[]]) => {\n      this.loadMeta(values[0], values[1]);\n      this.getForm(true);\n    });\n  }\n\n  submitForm(form: NgForm) {\n    const values = this.getValues();\n    this.api.Novel.add({ values })\n      .then(res => {\n        this.router.navigate(['/novel/', res.id]);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  goBack() {\n    this.router.navigate(['/novel']);\n  }\n}\n","<div class=\"form-content\">\n    <h1 class=\"title\">{{ formTitle }}</h1>\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm(formGroup.value)\">\n        <div *ngFor=\"let field of form\" class='field'>\n\n            <ng-container [ngSwitch]=\"field.type\">\n\n                <ng-container #tempHidden *ngSwitchCase=\"'hidden'\">\n                    <input type=\"hidden\" formControlName=\"{{ field.name }}\">\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'checkbox'\">\n                    <label class='checkbox'>\n                        <input type=\"checkbox\" formControlName=\"{{ field.name }}\">\n                        {{ field.label }}\n                    </label>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'select'\">\n                    <label>{{ field.label }}</label>\n                    <div class=\"control\">\n                        <select formControlName=\"{{ field.name }}\">\n                            <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                        </select>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'multiselect'\">\n                    <label>{{ field.label }} - {{ field.name }}</label>\n                    <div class=\"control\">\n                        <!--p *ngFor=\"let option of field.options; let i = index\"-->\n                        <p *ngFor=\"let option of field.options; let i = index\">\n                            <label>\n                                <!--<input type=\"checkbox\" value=\"{{option.value}}\" (change)=\"option.setChecked(!this.checked);\" [checked]=\"option.checked\" />-->\n                                <!--{{option.label}}-->\n                                <input type=\"checkbox\" [formControl]=\"option.control\" /> {{ option.label}}\n                            </label>\n                            <!--select multiple='multiple' formControlName=\"{{ field.name }}\" (change)=\"onDebug(this.value)\">\n                                <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                            </select-->\n                        </p>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempText *ngSwitchDefault>\n                    <label class='label' for=\"{{ field.name }}\">{{ field.label }}</label>\n                    <div class=\"control\">\n                        <input type=\"{{ field.type }}\" id=\"{{ field.name }}\" formControlName=\"{{ field.name }}\" class=\"input\">\n                    </div>\n                    <!--p class=\"help is-success\"></p-->\n                    <!--p class=\"help is-danger\"></p-->\n                </ng-container>\n\n            </ng-container>\n        </div>\n\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <input type=\"submit\" class=\"button is-link\" value=\"Submit\" />\n            </div>\n            <div class=\"control\">\n                <input (click)=\"goBack()\" class=\"button is-danger\" value=\"Cancel\" />\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel } from '../../_models/novel';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\nimport { Dictionary } from 'src/app/_models/dictionary';\n\n@Component({\n  selector: 'app-novel-edit',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class EditComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idNovel: number;\n  novel: Novel;\n  dictionaries: Dictionary[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n    ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n\n    this.formTitle = 'Edit Novel';\n\n    Promise.all([\n      this.api.Meta.get('drivers'),\n      this.api.Novel.get({id : this.idNovel }),\n      this.api.Dictionary.getAll({idNovel : this.idNovel}),\n      this.api.Dictionary.getAll(),\n    ]).then((values: [Meta, Novel, Dictionary[], Dictionary[]]) => {\n      this.novel = values[1];\n      this.dictionaries = values[2];\n      this.loadMeta(values[0], values[3]);\n      this.setValues(values[1], values[2]);\n      this.getForm(false);\n    });\n  }\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.dictionaries);\n    this.api.Novel.update({ id: this.idNovel, values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  goBack() {\n    this.router.navigate(['/novel']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor(\n      public formBuilder: FormBuilder\n  ) {\n    this.formGroup = formBuilder.group({\n        id: [null]\n      , code: [null]\n      , nameOriginal: [null]\n      , nameCustom: [null]\n      , addedBy: [null]\n      , dictionary: [null]\n      , driver: [null]\n      , flagR18: [null]\n      , completed: [null]\n      , show: [null]\n    });\n  }\n\n  formGroup: FormGroup;\n  form: FormField[];\n\n  selectDictionaries: Option[] = [];\n  selectDrivers: Option[] = [];\n  indexes: string[] = [];\n\n  loadMeta(meta: Meta, dictionaries: Dictionary[]): void {\n    this.selectDrivers = [];\n    for (const value of Object.keys(meta.drivers)) {\n      this.selectDrivers.push(new Option(value, meta.drivers[value]));\n    }\n    this.selectDictionaries = [];\n    for (const value of Object.keys(dictionaries)) {\n      this.selectDictionaries.push(new Option(value + '', dictionaries[value].name, false));\n    }\n  }\n  addForm(name?: string, label?: string, type?: string, options?: Option[]): void {\n    this.indexes.push(name);\n    this.form.push(new FormField(name, label, type, options));\n  }\n  getForm(insert: boolean): void {\n    this.form = [];\n    if (insert) { this.addForm('id', '', 'hidden'); }\n    this.addForm('code', 'Syosetsu code', 'text');\n    this.addForm('nameOriginal', 'Original Name', 'text');\n    this.addForm('nameCustom', 'Translated Name', 'text');\n    if (insert) { this.addForm('addedBy', 'Added by', 'text'); }\n    this.addForm('dictionary', 'Dictionaries', 'multiselect', this.selectDictionaries);\n    this.addForm('driver', 'Driver', 'select', this.selectDrivers);\n    this.addForm('flagR18', 'R18?', 'checkbox');\n    this.addForm('completed', 'Completed?', 'checkbox');\n    this.addForm('show', 'Show on list?', 'checkbox');\n  }\n\n  setValues(novel: Novel, dictionaries: Dictionary[]): void {\n\n    const dicValues = dictionaries.map((dict: Dictionary) => dict.id + '');\n    const dic = new FormArray(this.selectDictionaries.map((option) => {\n      if (dicValues.includes(option.value)) {\n        option.setChecked(true);\n      }\n      return option.control;\n    }));\n\n    this.formGroup.setValue({\n        id: novel.id\n      , code: novel.code\n      , nameOriginal: novel.nameOriginal\n      , nameCustom: novel.nameCustom\n      , addedBy: novel.addedBy\n      , dictionary: dic\n      , driver: novel.driver\n      , flagR18: novel.flagR18\n      , completed: novel.completed\n      , show: novel.show\n    });\n  }\n\n  getValues(dictionariesAlreadyThere?:Dictionary[]): {novel: Novel, dictionaries?: number[]} {\n    const values2return = {novel: null, dictionaries: null};\n    values2return.novel = new Novel(this.formGroup.value);\n    delete (values2return.novel.dictionary);\n\n    const dictIndex = this.indexes.indexOf('dictionary');\n    values2return.dictionaries = this.form[dictIndex].getValues().map(item => parseInt(item, 10));\n    if (dictionariesAlreadyThere && dictionariesAlreadyThere.length === values2return.dictionaries.length) {\n      const dictValues = dictionariesAlreadyThere.map(item => item.id);\n      if (JSON.stringify(dictValues) === JSON.stringify(values2return.dictionaries)) {\n        delete values2return.dictionaries;\n      }\n    }\n\n    return values2return;\n  }\n}\n","export * from './novel.module';\n","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n\t\t<div class=\"column\">\n\t\t\t<a [routerLink]=\"['/novel/add']\" class=\"button is-info\">Add Novel</a>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Code</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Name Japanese</th>\n\t\t\t\t<th>Chapters</th>\n\t\t\t\t<th>Driver</th>\n\t\t\t\t<th>Completed</th>\n\t\t\t\t<th>R18</th>\n\t\t\t\t<th>Added By</th>\n\t\t\t\t<th>Dictionary</th>\n\t\t\t\t<th>Update Chapters</th>\n\t\t\t\t<th>Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let novel of novels\" >\n\t\t\t\t<tr title=\"{{ novel.nameOriginal }}\" *ngIf=\"novel.show\">\n\t\t\t\t\t<td>{{ novel.id }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.code }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameCustom }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameOriginal }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.numberChapters }}</td>\n\t\t\t\t\t<td>{{ novel.driver }}</td>\n\t\t\t\t\t<td><ng-container *ngIf=\"novel.completed == 1; then success else danger\"></ng-container></td>\n\t\t\t\t\t<td><ng-container *ngIf=\"novel.flagR18 == 1; then success else danger\"></ng-container></td>\n\t\t\t\t\t<td>{{ novel.addedBy }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/dictionary', novel.id]\"><a>Check</a></td>\n\t\t\t\t\t<td (click)=\"updateChapters(novel.id)\"><a>Update</a></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/edit', novel.id]\"><i class=\"fas fa-edit\"></i></a>\n\t\t\t\t\t\t/\n\t\t\t\t\t\t<a (click)=\"delete(novel.id);\"><i class=\"fas fa-trash\"></i></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t\t<ng-template #success>\n\t\t\t\t<a class='button is-success'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t\t<ng-template #danger>\n\t\t\t\t<a class='button is-danger'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n// import { ApiService } from '../../api.service';\nimport { ApiService } from '../../api';\nimport { Novel } from '../../_models/novel';\n\n@Component({\n  selector: 'app-novel-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  novels: Novel[] = [];\n\n  constructor(\n      private api: ApiService,\n      // private cacheService: CacheService\n  ) {}\n\n  ngOnInit() {\n    this.loadList();\n  }\n\n  loadList() {\n    // Get list of novels\n    this.api.Novel.getAll()\n      .then((novels) => {\n        // this.novels = [novels];\n        this.novels = Object.values(novels);\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  updateChapters(idNovel: number) {\n    this.api.Chapter.autoUpdate({ idNovel })\n        .then(res => {\n            console.log('Novel updated', res);\n            /**\n             * Auto update on the list too\n             */\n            this.api.Novel.get({id: idNovel})\n                          .then((novel) => {\n                              let updated = false;\n                              for (const i in this.novels) {\n                                if (this.novels[i].id === novel.id) {\n                                    this.novels[i] = novel;\n                                    updated = true;\n                                    break;\n                                }\n                              }\n                              if (!updated) {\n                                console.log('The novel was not found on the list? Impossible...');\n                              }\n\n                          });\n        }, err => {\n            console.log(err);\n        });\n  }\n  delete(idNovel: number) {\n    if (confirm('Are you sure?')) {\n      this.api.Novel.delete({id: idNovel})\n        .then((_) => {\n          console.log(_);\n          // this.novels = [novels];\n          this.loadList();\n        }, (error) => {\n          console.log(error);\n        });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChapterModule } from '../chapter';\nimport { DictionaryModule } from '../dictionary';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Novels', breadcrumb: 'List' }\n  },\n  {\n     path: 'add'\n    , component: AddComponent\n    , data: { title: 'Add New Novel', breadcrumb: 'Add Novel' }\n  },\n  {\n     path: 'edit/:idNovel'\n    , component: EditComponent\n    , data: { title: 'Edit Novel', breadcrumb: 'Edit Novel' }\n  },\n  {\n     path: ':idNovel'\n    , loadChildren: () => import('../chapter').then(m => m.ChapterModule)\n    , data: { title: 'View chapters', breadcrumb: 'Chapters' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n    , RouterModule.forChild(\n      routes\n    // ,{ enableTracing: true  }\n    )\n  ]// ,\n  // exports : [ListComponent]\n})\nexport class NovelRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\n\nimport { NovelRoutingModule } from './novel-routing.module';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    AddComponent,\n    EditComponent,\n  ],\n  imports: [\n    CommonModule,\n    NovelRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\t// Necessary for SVG\n  ]\n})\nexport class NovelModule { }\n"],"names":["FormService","i0","AddComponent","constructor","router","route","api","formBuilder","ngOnInit","formTitle","Promise","all","Meta","get","Dictionary","getAll","then","values","loadMeta","getForm","submitForm","form","getValues","Novel","add","res","navigate","id","err","console","log","goBack","selectors","features","decls","vars","consts","template","ctx","EditComponent","idNovel","snapshot","params","novel","dictionaries","setValues","update","FormArray","FormField","Option","formGroup","group","code","nameOriginal","nameCustom","addedBy","dictionary","driver","flagR18","completed","show","meta","selectDrivers","value","Object","keys","drivers","push","selectDictionaries","name","addForm","label","type","options","indexes","insert","dicValues","map","dict","dic","option","includes","setChecked","control","setValue","dictionariesAlreadyThere","values2return","dictIndex","indexOf","item","parseInt","length","dictValues","JSON","stringify","factory","providedIn","ctx_r12","ctx_r15","_r4","_r6","ListComponent","loadList","novels","error","updateChapters","Chapter","autoUpdate","updated","i","delete","confirm","_","CommonModule","RouterModule","routes","path","component","data","title","breadcrumb","loadChildren","m","ChapterModule","redirectTo","NovelRoutingModule","forChild","imports","i1","FormsModule","ReactiveFormsModule","FontAwesomeModule","NovelModule","declarations"],"sourceRoot":"webpack:///"}