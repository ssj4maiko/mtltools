{"version":3,"file":"src_app_novel_index_ts.js","mappings":"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","sources":["./src/app/novel/add/add.component.ts","./src/app/_views/form/form.component.html","./src/app/novel/edit/edit.component.ts","./src/app/novel/form.service.ts","./src/app/novel/index.ts","./src/app/novel/list/list.component.ts","./src/app/novel/list/list.component.html","./src/app/novel/novel-routing.module.ts","./src/app/novel/novel.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel } from '../../_models/novel';\nimport { FormField, Meta } from '../../_models/formField';\nimport { Dictionary } from 'src/app/_models/dictionary';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-novel-add',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class AddComponent extends FormService implements OnInit {\n\n  formTitle: string;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.formTitle = 'Add new Novel';\n    Promise.all([\n      this.api.Meta.get('drivers'),\n      this.api.Dictionary.getAll(),\n    ]).then((values: [Meta, Dictionary[]]) => {\n      this.loadMeta(values[0], values[1]);\n      this.getForm(true);\n    });\n  }\n\n  submitForm(form: NgForm) {\n    const values = this.getValues();\n    this.api.Novel.add({ values })\n      .then(res => {\n        this.router.navigate(['/novel/', res.id]);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  goBack() {\n    this.router.navigate(['/novel']);\n  }\n}\n","<div class=\"form-content\">\n    <h1 class=\"title\">{{ formTitle }}</h1>\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm(formGroup.value)\">\n        <div *ngFor=\"let field of form\" class='field'>\n\n            <ng-container [ngSwitch]=\"field.type\">\n\n                <ng-container #tempHidden *ngSwitchCase=\"'hidden'\">\n                    <input type=\"hidden\" formControlName=\"{{ field.name }}\">\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'checkbox'\">\n                    <label class='checkbox'>\n                        <input type=\"checkbox\" formControlName=\"{{ field.name }}\">\n                        {{ field.label }}\n                    </label>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'select'\">\n                    <label>{{ field.label }}</label>\n                    <div class=\"control\">\n                        <select formControlName=\"{{ field.name }}\">\n                            <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                        </select>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'multiselect'\">\n                    <label>{{ field.label }} - {{ field.name }}</label>\n                    <div class=\"control\">\n                        <!--p *ngFor=\"let option of field.options; let i = index\"-->\n                        <p *ngFor=\"let option of field.options; let i = index\">\n                            <label>\n                                <!--<input type=\"checkbox\" value=\"{{option.value}}\" (change)=\"option.setChecked(!this.checked);\" [checked]=\"option.checked\" />-->\n                                <!--{{option.label}}-->\n                                <input type=\"checkbox\" [formControl]=\"option.control\" /> {{ option.label}}\n                            </label>\n                            <!--select multiple='multiple' formControlName=\"{{ field.name }}\" (change)=\"onDebug(this.value)\">\n                                <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                            </select-->\n                        </p>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempText *ngSwitchDefault>\n                    <label class='label' for=\"{{ field.name }}\">{{ field.label }}</label>\n                    <div class=\"control\">\n                        <input type=\"{{ field.type }}\" id=\"{{ field.name }}\" formControlName=\"{{ field.name }}\" class=\"input\">\n                    </div>\n                    <!--p class=\"help is-success\"></p-->\n                    <!--p class=\"help is-danger\"></p-->\n                </ng-container>\n\n            </ng-container>\n        </div>\n\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <input type=\"submit\" class=\"button is-link\" value=\"Submit\" />\n            </div>\n            <div class=\"control\">\n                <input (click)=\"goBack()\" class=\"button is-danger\" value=\"Cancel\" />\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel } from '../../_models/novel';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\nimport { Dictionary } from 'src/app/_models/dictionary';\n\n@Component({\n  selector: 'app-novel-edit',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class EditComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idNovel: number;\n  novel: Novel;\n  dictionaries: Dictionary[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n    ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n\n    this.formTitle = 'Edit Novel';\n\n    Promise.all([\n      this.api.Meta.get('drivers'),\n      this.api.Novel.get({id : this.idNovel }),\n      this.api.Dictionary.getAll({idNovel : this.idNovel}),\n      this.api.Dictionary.getAll(),\n    ]).then((values: [Meta, Novel, Dictionary[], Dictionary[]]) => {\n      this.novel = values[1];\n      this.dictionaries = values[2];\n      this.loadMeta(values[0], values[3]);\n      this.setValues(values[1], values[2]);\n      this.getForm(false);\n    });\n  }\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.dictionaries);\n    this.api.Novel.update({ id: this.idNovel, values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  goBack() {\n    this.router.navigate(['/novel']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor(\n      public formBuilder: FormBuilder\n  ) {\n    this.formGroup = formBuilder.group({\n        id: [null]\n      , code: [null]\n      , nameOriginal: [null]\n      , nameCustom: [null]\n      , addedBy: [null]\n      , dictionary: [null]\n      , driver: [null]\n      , flagR18: [null]\n      , completed: [null]\n      , show: [null]\n    });\n  }\n\n  formGroup: FormGroup;\n  form: FormField[];\n\n  selectDictionaries: Option[] = [];\n  selectDrivers: Option[] = [];\n  indexes: string[] = [];\n\n  loadMeta(meta: Meta, dictionaries: Dictionary[]): void {\n    this.selectDrivers = [];\n    for (const value of Object.keys(meta.drivers)) {\n      this.selectDrivers.push(new Option(value, meta.drivers[value]));\n    }\n    this.selectDictionaries = [];\n    for (const value of Object.keys(dictionaries)) {\n      this.selectDictionaries.push(new Option(value + '', dictionaries[value].name, false));\n    }\n  }\n  addForm(name?: string, label?: string, type?: string, options?: Option[]): void {\n    this.indexes.push(name);\n    this.form.push(new FormField(name, label, type, options));\n  }\n  getForm(insert: boolean): void {\n    this.form = [];\n    if (insert) { this.addForm('id', '', 'hidden'); }\n    this.addForm('code', 'Syosetsu code', 'text');\n    this.addForm('nameOriginal', 'Original Name', 'text');\n    this.addForm('nameCustom', 'Translated Name', 'text');\n    if (insert) { this.addForm('addedBy', 'Added by', 'text'); }\n    this.addForm('dictionary', 'Dictionaries', 'multiselect', this.selectDictionaries);\n    this.addForm('driver', 'Driver', 'select', this.selectDrivers);\n    this.addForm('flagR18', 'R18?', 'checkbox');\n    this.addForm('completed', 'Completed?', 'checkbox');\n    this.addForm('show', 'Show on list?', 'checkbox');\n  }\n\n  setValues(novel: Novel, dictionaries: Dictionary[]): void {\n\n    const dicValues = dictionaries.map((dict: Dictionary) => dict.id + '');\n    const dic = new FormArray(this.selectDictionaries.map((option) => {\n      if (dicValues.includes(option.value)) {\n        option.setChecked(true);\n      }\n      return option.control;\n    }));\n\n    this.formGroup.setValue({\n        id: novel.id\n      , code: novel.code\n      , nameOriginal: novel.nameOriginal\n      , nameCustom: novel.nameCustom\n      , addedBy: novel.addedBy\n      , dictionary: dic\n      , driver: novel.driver\n      , flagR18: novel.flagR18\n      , completed: novel.flagR18\n      , show: novel.show\n    });\n  }\n\n  getValues(dictionariesAlreadyThere?:Dictionary[]): {novel: Novel, dictionaries: number[]} {\n    const values2return = {novel: null, dictionaries: null};\n    values2return.novel = new Novel(this.formGroup.value);\n    delete (values2return.novel.dictionary);\n\n    const dictIndex = this.indexes.indexOf('dictionary');\n    values2return.dictionaries = this.form[dictIndex].getValues().map(item => parseInt(item, 10));\n    if (dictionariesAlreadyThere && dictionariesAlreadyThere.length === values2return.dictionaries.length) {\n      const dictValues = dictionariesAlreadyThere.map(item => item.id);\n      if (JSON.stringify(dictValues) === JSON.stringify(values2return.dictionaries)) {\n        delete values2return.dictionaries;\n      }\n    }\n\n    return values2return;\n  }\n}\n","export * from './novel.module';\n","import { Component, OnInit } from '@angular/core';\n// import { ApiService } from '../../api.service';\nimport { ApiService } from '../../api';\nimport { Novel } from '../../_models/novel';\n\n@Component({\n  selector: 'app-novel-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  novels: Novel[] = [];\n\n  constructor(\n      private api: ApiService,\n      // private cacheService: CacheService\n  ) {}\n\n  ngOnInit() {\n    this.loadList();\n  }\n\n  loadList() {\n    // Get list of novels\n    this.api.Novel.getAll()\n      .then((novels) => {\n        // this.novels = [novels];\n        this.novels = Object.values(novels);\n        console.log(this.novels);\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  updateChapters(idNovel: number) {\n    this.api.Chapter.autoUpdate({ idNovel })\n        .then(res => {\n            console.log('Novel updated', res);\n            /**\n             * Auto update on the list too\n             */\n            this.api.Novel.get({id: idNovel})\n                          .then((novel) => {\n                              let updated = false;\n                              for (const i in this.novels) {\n                                if (this.novels[i].id === novel.id) {\n                                    this.novels[i] = novel;\n                                    updated = true;\n                                    break;\n                                }\n                              }\n                              if (!updated) {\n                                console.log('The novel was not found on the list? Impossible...');\n                              }\n\n                          });\n        }, err => {\n            console.log(err);\n        });\n  }\n  delete(idNovel: number) {\n    if (confirm('Are you sure?')) {\n      this.api.Novel.delete({id: idNovel})\n        .then((_) => {\n          console.log(_);\n          // this.novels = [novels];\n          this.loadList();\n        }, (error) => {\n          console.log(error);\n        });\n    }\n  }\n}\n","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n\t\t<div class=\"column\">\n\t\t\t<a [routerLink]=\"['/novel/add']\" class=\"button is-info\">Add Novel</a>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Code</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Name Japanese</th>\n\t\t\t\t<th>Chapters</th>\n\t\t\t\t<th>Driver</th>\n\t\t\t\t<th>Completed</th>\n\t\t\t\t<th>R18</th>\n\t\t\t\t<th>Added By</th>\n\t\t\t\t<th>Dictionary</th>\n\t\t\t\t<th>Update Chapters</th>\n\t\t\t\t<th>Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let novel of novels\" >\n\t\t\t\t<tr title=\"{{ novel.nameOriginal }}\" *ngIf=\"novel.show\">\n\t\t\t\t\t<td>{{ novel.id }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.code }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameCustom }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.nameOriginal }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/', novel.id]\">{{ novel.numberChapters }}</td>\n\t\t\t\t\t<td>{{ novel.driver }}</td>\n\t\t\t\t\t<td><ng-container *ngIf=\"novel.completed == 1; then success else danger\"></ng-container></td>\n\t\t\t\t\t<td><ng-container *ngIf=\"novel.flagR18 == 1; then success else danger\"></ng-container></td>\n\t\t\t\t\t<td>{{ novel.addedBy }}</td>\n\t\t\t\t\t<td [routerLink]=\"['/novel/dictionary', novel.id]\"><a>Check</a></td>\n\t\t\t\t\t<td (click)=\"updateChapters(novel.id)\"><a>Update</a></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a [routerLink]=\"['/novel/edit', novel.id]\"><i class=\"fas fa-edit\"></i></a>\n\t\t\t\t\t\t/\n\t\t\t\t\t\t<a (click)=\"delete(novel.id);\"><i class=\"fas fa-trash\"></i></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t\t<ng-template #success>\n\t\t\t\t<a class='button is-success'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t\t<ng-template #danger>\n\t\t\t\t<a class='button is-danger'>\n\t\t\t\t\t<span class=\"icon is-small\">\n\t\t\t\t\t\t<i class=\"fas fa-times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</ng-template>\n\t\t</tbody>\n\t</table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChapterModule } from '../chapter';\nimport { DictionaryModule } from '../dictionary';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Novels', breadcrumb: 'Novels' }\n  },\n  {\n     path: 'add'\n    , component: AddComponent\n    , data: { title: 'Add New Novel', breadcrumb: 'Add Novel' }\n  },\n  {\n     path: 'edit/:idNovel'\n    , component: EditComponent\n    , data: { title: 'Edit Novel', breadcrumb: 'Edit Novel' }\n  },\n  {\n     path: ':idNovel'\n    , loadChildren: () => import('../chapter').then(m => m.ChapterModule)\n    , data: { title: 'View chapters', breadcrumb: 'Chapters' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n    , RouterModule.forChild(\n      routes\n    // ,{ enableTracing: true  }\n    )\n  ]// ,\n  // exports : [ListComponent]\n})\nexport class NovelRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\n\nimport { NovelRoutingModule } from './novel-routing.module';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    AddComponent,\n    EditComponent,\n  ],\n  imports: [\n    CommonModule,\n    NovelRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\t// Necessary for SVG\n  ]\n})\nexport class NovelModule { }\n"],"names":[],"sourceRoot":"webpack:///"}