{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_models/chapter.ts","./src/app/_models/dictionary.ts","./src/app/_models/dictionarycategory.ts","./src/app/_models/dictionaryentry.ts","./src/app/_models/index.ts","./src/app/_models/novel.ts","./src/app/_models/noveldictionary.ts","./src/app/_services/modal/modal.component.ts","./src/app/_services/modal/modal.component.html","./src/app/_services/modal/modal.service.ts","./src/app/api/ajax.service.ts","./src/app/api/api.service.ts","./src/app/api/categories.service.ts","./src/app/api/chapters.service.ts","./src/app/api/dictionaries.service.ts","./src/app/api/entries.service.ts","./src/app/api/index.ts","./src/app/api/meta.service.ts","./src/app/api/novels.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export class Chapter {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  no: number;\n  idNovel: number;\n  title: string;\n  hasText: boolean;\n  textOriginal: string;\n  textRevision: string;\n  textCustom: string;\n  dateOriginalPost: Date;\n  dateOriginalRevision: Date;\n  dateCreated: Date;\n  dateRevision: Date;\n}\n","import { Optional } from '@angular/core';\nimport { Novel } from './';\nimport { DictionaryCategory } from './dictionarycategory';\nimport { DictionaryEntry } from './dictionaryentry';\n\nexport class Dictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  name: string;\n  language: string;\n  dateCreated: Date;\n  dateRevision: Date;\n  /*@Optional()*/ changes?: boolean; // Use on FullSave, to learn if there is a need to get a new cache\n  /*@Optional()*/ novel?: Novel[];\n  /*@Optional()*/ count_categories?: number;\n\n  countCategories(): number {\n    return this.count_categories ?? 0;\n  }\n}\n\nexport class CacheDictionary {\n  dateCreated: Date;\n  dateRevision: Date;\n  id: number;\n  name: string;\n  language: string;\n  dictionary_category: DictionaryCategory[];\n  dictionary_entry: DictionaryEntry[];\n}\n\nexport class returnFullSave {\n  changes: boolean\n  dateRevision: Date\n}","import { DictionaryEntry, EntryForm } from './dictionaryentry';\n\nexport class DictionaryCategory {\n  public constructor(init?: any, idDictionary?: number) {\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idDictionary) {\n      this.idDictionary = idDictionary;\n    }\n  }\n  id: number;\n  idDictionary: number;\n  name: string;\n  entries: (DictionaryEntry | EntryForm)[];\n  update: boolean;\n}\n","export class DictionaryEntry {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  length: number;\n}\nexport class EntryForm {\n  public constructor(init?: DictionaryEntry | EntryForm, idCategory?: number) {\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idCategory) {\n      this.idCategory = idCategory;\n    }\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  update: boolean;\n  delete: boolean;\n  reset: boolean;\n}\n","export * from './novel';\nexport * from './chapter';\nexport * from './dictionary';\nexport * from './dictionarycategory';\nexport * from './dictionaryentry';\nexport * from './noveldictionary';\n","import { Optional } from '@angular/core';\nimport { Dictionary } from './';\n\nexport class Novel {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  code: string;\n  nameOriginal: string;\n  nameCustom: string;\n  numberChapters: number;\n  driver: string;\n  flagR18: boolean;\n  completed: boolean;\n  addedBy: Date;\n  show: boolean;\n  /*@Optional()*/ dictionary: Dictionary[];\n}\n","export class NovelDictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  idNovel: number;\n  idDictionary: number;\n}\n","import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalService } from './modal.service';\n\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\n\n@Component({\n\tselector: 'jw-modal',\n\ttemplateUrl: './modal.component.html',\n\tstyleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n\n    constructor(\n        private modalService: ModalService,\n        private el: ElementRef\n        ) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit(): void {\n        let modal = this;\n\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', function (e: any) {\n            if (e.target.className === 'jw-modal') {\n                modal.close();\n            }\n        });\n\n        // add self (this modal instance) to the modal service so it's accessible from controllers\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        this.element.style.display = 'block';\n        document.body.classList.add('jw-modal-open');\n    }\n\n    // close modal\n    close(): void {\n        this.element.style.display = 'none';\n        document.body.classList.remove('jw-modal-open');\n    }\n}\n","<div class=\"jw-modal\">\n    <div class=\"jw-modal-body\">\n        <ng-content></ng-content>\n    </div>\n</div>\n<div class=\"jw-modal-background\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ModalService {\n\tprivate modals: any[] = [];\n\n\tconstructor() { }\n\n\tadd(modal: any) {\n\t\t// add modal to array of active modals\n\t\tthis.modals.push(modal);\n\t}\n\n\tremove(id: string) {\n\t\t// remove modal from array of active modals\n\t\tthis.modals = this.modals.filter(x => x.id !== id);\n\t}\n\n\topen(id: string) {\n\t\t// open modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.open();\n\t}\n\n\tclose(id: string) {\n\t\t// close modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.close();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, VirtualTimeScheduler } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst apiUrl = environment.backendServer + '/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AjaxService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public _call(params: {\n    type: string;\n    url: string;\n    content?: any;\n  }): Observable<any> {\n    const type = params.type.toLowerCase();\n    let HTTP = null;\n\n    switch (type) {\n      case 'get':\n      case 'delete':\n        HTTP = this.http[type](apiUrl + params.url);\n        break;\n      case 'post':\n      case 'put':\n        HTTP = this.http[type](apiUrl + params.url, params.content, httpOptions);\n        break;\n    }\n    HTTP.pipe(\n      tap()\n      , catchError((err: any, caught: Observable<any>) => {\n        console.error(err, caught);\n        this.handleError(err);\n        return of(caught as any);\n      })\n    );\n    return HTTP;\n  }\n  public _get(url: string): Observable<any> {\n    return this._call({ type: 'get', url });\n  }\n  public _post(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'post', url, content });\n  }\n  public _put(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'put', url, content });\n  }\n  public _delete(url: string): Observable<any> {\n    return this._call({ type: 'delete', url });\n  }\n  public DEBUG(...args: any): void {\n    console.log('AJAXService Debug', args);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NovelsService } from './novels.service';\nimport { ChaptersService } from './chapters.service';\nimport { DictionariesService } from './dictionaries.service';\nimport { CategoriesService } from './categories.service';\nimport { EntriesService } from './entries.service';\nimport { MetaService } from './meta.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    // private cacheService: CacheService\n    public Novel: NovelsService,\n    public Chapter: ChaptersService,\n    public Dictionary: DictionariesService,\n    public Category: CategoriesService,\n    public Entry: EntriesService,\n    public Meta: MetaService,\n  ) {\n    this.Novel.setApi(this);\n    this.Chapter.setApi(this);\n    this.Dictionary.setApi(this);\n    this.Category.setApi(this);\n    this.Entry.setApi(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory } from '../_models/dictionarycategory';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService extends AjaxService {\n  route = 'category/';\n  items: DictionaryCategory[][] = [];\n  hasAll: boolean[] = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: DictionaryCategory[], idDictionary: number, force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [];\n    }\n    for (const item of items) {\n      this.items[idDictionary][item.id] = item;\n      if (!this.items[idDictionary][item.id].entries) {\n        this.items[idDictionary][item.id].entries = [];\n      }\n    }\n    if (force) {\n      this.hasAll[idDictionary] = true;\n    }\n  }\n  has(params: { idDictionary: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, id: number }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      if (this.items[params.idDictionary] && this.items[params.idDictionary][params.id]) {\n        resolve(this.items[params.idDictionary][params.id]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' + params.id)\n          .subscribe((item: DictionaryCategory) => {\n            if (item) {\n              this.set([item], params.idDictionary);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryCategory ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, search?: number }): Promise<DictionaryCategory[]> {\n    return new Promise<DictionaryCategory[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]) {\n        resolve(this.items[params.idDictionary]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' )\n          .subscribe((items: DictionaryCategory[]) => {\n            this.hasAll[params.idDictionary] = true;\n            this.set(items, params.idDictionary);\n            resolve(this.items[params.idDictionary]);\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._post(this.route + params.idDictionary + '/' , params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on inserting category ' + params.category.name);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, id: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._put(this.route + params.idDictionary + '/'  + params.id, params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on updating category ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idDictionary + '/'  + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.idDictionary][params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting category ' + params.id);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Chapter } from '../_models/chapter';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChaptersService extends AjaxService {\n  route = 'chapter/';\n  items: [Chapter[]] = [[]];\n  hasAll: [boolean] = [false];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(idNovel: number, items: Chapter[]): void {\n    if (!this.items[idNovel]) {\n      this.items[idNovel] = [];\n    }\n    if (items.length > 0) {\n      for (const item of items) {\n        this.items[idNovel][item.no] = item;\n      }\n    }\n  }\n  has(params: { idNovel: number, no?: number, text?: boolean }): boolean {\n    if (!params.no ) {\n      return !!(this.items[params.idNovel]);\n    } else {\n      if (!params.text) {\n        return !!(this.items[params.idNovel] && this.items[params.idNovel][params.no]);\n      } else {\n        return !!(this.items[params.idNovel]\n              && this.items[params.idNovel][params.no]\n              && this.items[params.idNovel][params.no].textOriginal);\n      }\n    }\n  }\n  /**\n   * Basic CRUD stuff here. <params.text> is for when I need the texts available (Only used in Detail View)\n   */\n  get(params: { idNovel: number, no: number, text?: boolean } ): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      if (this.has({idNovel: params.idNovel, no: params.no, text: params.text})) {\n        resolve(this.items[params.idNovel][params.no]);\n      } else {\n        this._get(this.route + params.idNovel + '/' + params.no)\n          .subscribe((item: Chapter) => {\n            if (item) {\n              this.set(params.idNovel, [item]);\n              resolve(this.items[params.idNovel][params.no]);\n            } else {\n              reject('Invalid Chapter on Novel ' + params.idNovel + ' / ' + params.no);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idNovel: number, search?: string } ): Promise<Chapter[]> {\n    return new Promise<Chapter[]>((resolve, reject) => {\n      if (this.hasAll[params.idNovel]) {\n        resolve(this.items[params.idNovel]);\n      } else {\n        this._get(this.route + params.idNovel)\n          .subscribe((items: Chapter[]) => {\n            if (items.length > 0) {\n              this.set(params.idNovel, items);\n\n              this.hasAll[params.idNovel] = true;\n              resolve(items);\n            } else {\n              reject('No Chapters for Novel ' + params.idNovel);\n            }\n          });\n      }\n    });\n  }\n  add(params: { idNovel: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._post(this.route, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting chapter ' + params.idNovel);\n          }\n        });\n    });\n  }\n  update(params: { idNovel: number, no: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._put(this.route + params.idNovel + '/' + params.no, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating chapter ' + params.no);\n          }\n        });\n    });\n  }\n  delete(params: { idNovel: number, no: number } ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idNovel + '/' + params.no)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idNovel][params.no] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting chapter ' + params.no);\n          }\n        });\n    });\n  }\n  /**\n   * More complex stuff starting here\n   */\n\n  // Lots of automated services here\n  autoUpdate(params: { idNovel: number }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this._get(this.route + 'autoUpdate/' + params.idNovel)\n        .subscribe((novel: Novel) => {\n          // If we already have a register, we should check if anything relevant was updated.\n          if (this.api.Novel.has({ id: params.idNovel })) {\n            this.api.Novel\n                  .get({id: params.idNovel})\n                  .then((novelCurrent) => {\n                    // If there are more chapters, we update the novel folder, and point we don't have everything anymore\n                    if (novel.numberChapters !== novelCurrent.numberChapters ) {\n                      this.api.Novel.set([novel]);\n                      this.hasAll[params.idNovel] = false;\n                      //  Then if we already have chapters in, we reload, otherwise, no need to do that.\n                      if (this.has({ idNovel : params.idNovel })) {\n                        this.getAll({ idNovel : params.idNovel })\n                            .then(_ => {\n                              resolve(true);\n                            });\n                      } else {\n                        resolve(true);\n                      }\n                    } else {\n                      resolve(false);\n                    }\n                  });\n          } else {\n            this.api.Novel.set([novel]);\n            resolve(true);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { CacheDictionary, Dictionary, DictionaryCategory, returnFullSave } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionariesService extends AjaxService {\n  route = 'dictionary/';\n  items: Dictionary[] = [];\n  hasAll = false;\n  hasAllNovels = [];\n  pivots = []; // pivots[idNovel] = idDictionary[]\n\n  api: ApiService = null;\n  hasCache: boolean[] = [];\n\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Dictionary[], idNovel?: number): void {\n    // If idNovel is being sent, I'm considering that it's sending all Dictionaries from one novel\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the detached dictionaries too\n    if (idNovel) {\n      this.pivots[idNovel] = [];\n    }\n    for (const item of items) {\n      if (typeof item.novel !== 'undefined') {\n        this.api.Novel.set(item.novel, item.id);\n        delete (item.novel);\n      }\n      this.items[item.id] = new Dictionary(item);\n      if (idNovel) {\n        this.pivots[idNovel].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idNovel) {\n      this.hasAllNovels[idNovel] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { id?: number } ): Promise<Dictionary> {\n    if (params.id) {\n      return new Promise<Dictionary>((resolve, reject) => {\n        if (this.items[params.id]) {\n          resolve(this.items[params.id]);\n        } else {\n          this._get(this.route + params.id)\n            .subscribe((item: Dictionary) => {\n              if (item) {\n                this.set([item]);\n                resolve(item);\n              } else {\n                reject('Invalid Dictionary ' + params.id);\n              }\n            });\n        }\n      });\n    }\n  }\n  getAll(params?: { idNovel?: number, search?: number } ): Promise<Dictionary[]> {\n    return new Promise<Dictionary[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idNovel = params && params.idNovel ? params.idNovel : null;\n      if (idNovel && this.hasAllNovels[idNovel]) {\n        resolve(this.getDictionaryPivots(idNovel));\n      } else\n      // If we are looking only for all Dictionaries, we do it here\n      if (this.hasAll && !idNovel) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idNovel ? 'novel/' + idNovel : ''))\n          .subscribe((items: Dictionary[]) => {\n            if (items.length > 0) {\n              this.set(items, idNovel);\n              // Here we also set the different paths\n              if (!idNovel) {\n                this.hasAll = true;\n                resolve(this.items);\n              } else {\n                resolve(this.getDictionaryPivots(idNovel));\n              }\n            } else {\n              reject('No Dictionaries');\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { dictionary: Dictionary, novels?: number[] } } ): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting dictionary ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: { dictionary: Dictionary, novels?: number[] } }): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating dictionary ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting dictionary ' + params.id);\n          }\n        });\n    });\n  }\n\n  getDictionaryPivots(idNovel: number): Dictionary[] {\n    if (!this.pivots[idNovel]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idDic of this.pivots[idNovel]) {\n        arr.push(this.items[idDic]);\n      }\n      return arr;\n    }\n  }\n  getCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.hasCache[idDictionary]) {\n        resolve (true);\n      } else {\n        this._get('cache/dictionary/' + idDictionary)\n          .subscribe((cache: CacheDictionary) => {\n            this.hasCache[idDictionary] = true;\n            this.reworkCache(cache);\n            resolve(true);\n          });\n      }\n    });\n  }\n  rebuildCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('cache/dictionary/' + idDictionary)\n        .subscribe((cache: CacheDictionary) => {\n          this.hasCache[idDictionary] = true;\n          this.reworkCache(cache);\n          resolve(true);\n        });\n    });\n  }\n  reworkCache(cache: CacheDictionary): void {\n    if (cache.dictionary_category) {\n      this.api.Category.set(cache.dictionary_category, cache.id, true);\n    }\n    if (cache.dictionary_entry.length >= 0) {\n      this.api.Entry.set(cache.id, null, cache.dictionary_entry, true);\n    }\n  }\n  fullSave(idDictionary: number, categories: DictionaryCategory[]): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('dictionary/fullSave/' + idDictionary, categories)\n        .subscribe((returnFS: returnFullSave) => {\n          if (returnFS.changes) {\n            this.hasCache[idDictionary] = false;\n            console.log('full Save Dictionary.Service', this.items[idDictionary]);\n            this.items[idDictionary].dateRevision = returnFS.dateRevision;\n          }\n          resolve(true);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory, DictionaryEntry, EntryForm } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntriesService extends AjaxService {\n  route = 'entry/';\n  items: [[DictionaryEntry[]]] = [[[]]];\n  hasAll: boolean[][] = [[]];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  setHasAll(idDictionary: number, idCategory: number, set: boolean = true): void {\n    if (!this.hasAll[idDictionary]) {\n      this.hasAll[idDictionary] = [];\n    }\n    this.hasAll[idDictionary][idCategory] = set;\n  }\n  set(idDictionary: number, idCategory: number, items: DictionaryEntry[] | EntryForm[], force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [[]];\n    }\n    if (idCategory) {\n      if (!this.items[idDictionary][idCategory]) {\n        this.items[idDictionary][idCategory] = [];\n      }\n      if (items.length > 0) {\n        for (const item of items) {\n          this.items[idDictionary][idCategory][item.id] = new DictionaryEntry(item);\n        }\n      }\n      if (force) {\n        this.setHasAll(idDictionary, idCategory);\n      }\n    } else {\n      if (items.length > 0) {\n        for (const item of items) {\n          if (!this.items[idDictionary][item.idCategory]) {\n            this.items[idDictionary][item.idCategory] = [];\n          }\n          this.items[idDictionary][item.idCategory][item.id] = new DictionaryEntry(item);\n          if (force) {\n            this.setHasAll(idDictionary, item.idCategory);\n          }\n        }\n      }\n    }\n  }\n  has(params: { idDictionary: number, idCategory: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]\n             && this.items[params.idDictionary][params.idCategory][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, idCategory: number, id: number }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      if (this.items[params.idDictionary]\n        && this.items[params.idDictionary][params.idCategory]\n        && this.items[params.idDictionary][params.idCategory][params.id] ) {\n        resolve(this.items[params.idDictionary][params.idCategory][params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: DictionaryEntry) => {\n            if (item) {\n              this.set(params.idDictionary, params.idCategory, [item]);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryEntry ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, idCategory: number, search?: number }): Promise<DictionaryEntry[]> {\n    return new Promise<DictionaryEntry[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]\n        && this.hasAll[params.idDictionary][params.idCategory]) {\n        resolve(this.items[params.idDictionary][params.idCategory]);\n      } else {\n        this._get(this.route + [params.idDictionary, params.idCategory].join('/'))\n          .subscribe((items: DictionaryEntry[]) => {\n            if (items.length >= 0) {\n              this.set(params.idDictionary, params.idCategory, items);\n              this.setHasAll(params.idDictionary, params.idCategory);\n              resolve(items);\n            } else {\n              reject('No DictionaryEntrys');\n            }\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, idCategory: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._post(this.route, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting entry ' + params.entry.entryTranslation);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, idCategory: number, id: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._put(this.route + params.id, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating entry ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, idCategory: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idDictionary][params.idCategory][params.id] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting entry ' + params.id);\n          }\n        });\n    });\n  }\n\n  saveByCategory(params: { idDictionary: number, idCategory: number, entries: EntryForm[]}): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put(this.route + [params.idDictionary, 'updatebycategory', params.idCategory].join('/'), params.entries)\n        .subscribe((items: {categories: DictionaryCategory[], entries: DictionaryEntry[]}) => {\n          if (items) {\n            /**\n             * Because multiple categories may have been changed, the backend returns all affected categories\n             */\n            if (items.categories) {\n              items.categories.map((category) => {\n                this.setHasAll(category.idDictionary, category.id, false);\n                this.api.Category.set([category], category.idDictionary);\n              });\n            }\n            this.setHasAll(params.idDictionary, params.idCategory);\n            this.set(params.idDictionary, params.idCategory, items.entries, true);\n            resolve(true);\n          } else {\n            reject('Error on updating entry ' + params.idCategory);\n          }\n        });\n      return true;\n    });\n  }\n}\n","export * from './api.service';\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Meta } from '../_models/formField';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService extends AjaxService {\n  route = 'meta';\n  items = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n\n  set(type: string, value: []): void {\n    this.items[type] = value;\n  }\n  has(type: string) {\n    return !!(this.items[type]);\n  }\n\n  get(...params: string[]): Promise<Meta> {\n    return new Promise<Meta>((resolve, reject) => {\n      this._post(this.route, { meta: params })\n        .subscribe((items: Meta) => {\n          resolve(items);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\nimport { ApiService } from '.';\nimport { NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NovelsService extends AjaxService {\n  route = 'novel/';\n  items: Novel[] = [];\n  hasAll = false;\n  hasAllDictionaries = [];\n  pivots = []; // pivots[idDictionary] = idNovel[]\n\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Novel[], idDictionary?: number): void {\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the atached dictionaries too\n    if (idDictionary) {\n      this.pivots[idDictionary] = [];\n    }\n    for (const item of items) {\n      if (typeof item.dictionary !== 'undefined') {\n        this.api.Dictionary.set(item.dictionary, item.id);\n        delete(item.dictionary);\n      }\n      this.items[item.id] = item;\n      if (idDictionary) {\n        this.pivots[idDictionary].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idDictionary) {\n      this.hasAllDictionaries[idDictionary] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: {id: number} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      if (this.items[params.id]) {\n        resolve(this.items[params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: Novel) => {\n            if (item) {\n              this.set([item]);\n              resolve(item);\n            } else {\n              reject('Invalid Novel ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params?: { idDictionary?: number, search?: string } ): Promise<Novel[]> {\n    return new Promise<Novel[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idDictionary = params && params.idDictionary ? params.idDictionary : null;\n      if (idDictionary && this.hasAllDictionaries[idDictionary]) {\n        resolve(this.getNovelPivots(idDictionary));\n      } else\n      if (this.hasAll && !idDictionary) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idDictionary ? 'dictionary/' + idDictionary : ''))\n          .subscribe((items: Novel[]) => {\n            this.set(items, idDictionary);\n              // Here we also set the different paths\n            if (!idDictionary) {\n              this.hasAll = true;\n              resolve(this.items);\n            } else {\n              resolve(this.getNovelPivots(idDictionary));\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { novel: Novel, dictionaries?: number[] } } ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting novel ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: {novel: Novel, dictionaries?: number[]}} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating novel ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting novel ' + params.id);\n          }\n        });\n    });\n  }\n\n  getNovelPivots(idDictionary: number): Novel[] {\n    if (!this.pivots[idDictionary]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idNov of this.pivots[idDictionary]) {\n        arr.push(this.items[idNov]);\n      }\n      return arr;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovelModule } from './novel';\nimport { DictionaryModule } from './dictionary';\nimport { DashboardModule } from './dashboard';\n\nconst routes: Routes = [\n  {\n     path: 'dashboard'\n    , loadChildren: () => import('./dashboard').then(m => m.DashboardModule)\n    , data: { title: 'Dashboard', breadcrumb: 'Dashboard' }\n  },\n  {\n     path: 'novel'\n    , loadChildren: () => import('./novel').then(m => m.NovelModule)\n    , data: { title: 'List Novels', breadcrumb: 'Novels' }\n  },\n  {\n    path: 'dictionary'\n    , loadChildren: () => import('./dictionary').then(m => m.DictionaryModule)\n    , data: { title: 'List Dictionaries', breadcrumb: 'Dictionaries' }\n  },\n  {\n     path: '**'\n    , redirectTo: 'dashboard'\n  },\n];\n\n@NgModule({\n    imports: [\n    RouterModule.forRoot(\n       routes\n       , { enableTracing: false  }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.scss',\n        './_services/modal/modal.component.scss',\n  ]\n})\nexport class AppComponent {\n    title = 'frontend';\n    base = environment.currentUrl;\n  constructor(\n    private router: Router\n  ) {\n    this.title = 'false';\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Papa } from 'ngx-papaparse';\n\nimport { HeaderComponent } from './header/header.component';\nimport { ModalComponent } from './_services/modal/modal.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    //Papa,    // Necessary for CSV\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule, \t// Necessary for API Services\n    FormsModule,\t\t// Necessary for Dynamic Forms\n    ReactiveFormsModule, // Necessary for Dynamic Forms\n        FontAwesomeModule,\t// Necessary for SVG\n        //Papa,    // Necessary for CSV\n    ],\n  exports: [\n    //Papa,    // Necessary for CSV\n  ],\n  providers: [\n        ModalComponent,\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Event as RouterEvent } from '@angular/router';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\nimport { ApiService } from '../api';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    public breadcrumbs: IBreadCrumb[];\n\n    constructor(\n          private router: Router\n        , private activatedRoute: ActivatedRoute\n        , private api: ApiService\n        ) {\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n        }\n\n    ngOnInit() {\n        this.router.events.pipe(\n            filter((event: RouterEvent) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((next) => {\n            //console.log('ROUTER', next, this.activatedRoute.root);\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n            this.renameLabels();\n            //console.log('ROUTER END');\n        });\n  }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n        // If no routeConfig is avalailable we are on the root path\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        if (path === 'dashboard' ) {\n            return [];\n        }\n\n        // If the route is dynamic route such as ':id', remove it\n        // Nota that here, the id appears before the actions, thus, using \"shift\" instead of \"pop\"\n        const lastRoutePart = path.split('/').shift();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n        let type = null;\n        if (isDynamicRoute && !!route.snapshot) {\n            const paramName = lastRoutePart.split(':')[1];\n            path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n            label = route.snapshot.params[paramName]; // '_' + paramName + ':' + route.snapshot.params[paramName];\n            type = paramName;\n        }\n\n        // In the routeConfig the complete path is not available,\n        // so we rebuild it each time\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const breadcrumb: IBreadCrumb = {\n            label,\n            url: nextUrl,\n            type\n        };\n        // Only adding route with non-empty label\n        const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [...breadcrumbs];\n        if (route.firstChild) {\n            // If we are not on our current path yet,\n            // there will be more children to look after, to build our breadcumb\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n        return newBreadcrumbs;\n    }\n\n    private renameLabels() {\n        const rememberVariables = {\n            idNovel: null,\n            idDictionary: null,\n            idCategory: null,\n            noChapter: null\n        };\n        //console.log('header calls');\n        this.breadcrumbs.forEach(el => {\n            if (el.type) {\n                rememberVariables[el.type] = parseInt(el.label, 10);\n                el.label = '';\n                switch (el.type) {\n                    case 'idNovel':\n                        this.api.Novel.get({ id: rememberVariables.idNovel})\n                            .then(novel => {\n                                el.label = 'Chapters: ' + novel.nameCustom;\n                            });\n                        break;\n                    case 'idDictionary':\n                        this.api.Dictionary.get({ id: rememberVariables.idDictionary })\n                            .then(dictionary => {\n                                el.label = 'Cat: ' + dictionary.name;\n                            });\n                        break;\n                    case 'idCategory':\n                        this.api.Category.get({ idDictionary: rememberVariables.idDictionary, id: rememberVariables.idCategory })\n                            .then(category => {\n                                el.label = 'Entries: ' + category.name;\n                            });\n                        break;\n                    case 'noChapter':\n                        this.api.Chapter.get({ idNovel: rememberVariables.idNovel, no: rememberVariables.noChapter })\n                            .then(chapter => {\n                                el.label = 'Chapter: ' + chapter.title;\n                            });\n                        break;\n                }\n            }\n        });\n        //console.log('header calls end');\n    }\n}\n","<header>\n\t<img src=\"assets/mtl_tools.png\" class='appName'  routerLink=\"/\" />\n\t<ul>\n        <li routerLink=\"/dashboard\" routerLinkActive=\"router-link-active\">\n            <a>Dashboard</a>\n        </li>\n        <ng-container  *ngFor=\"let breadcrumb of breadcrumbs\">\n            <li [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n                <a>/ {{ breadcrumb.label }}</a>\n            </li>\n        </ng-container>\n\t</ul>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    currentUrl: 'http://api.mtltools.docker:800',\n    backendServer: 'http://api.mtltools.docker:800',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Chapter","constructor","init","Object","assign","Dictionary","countCategories","count_categories","CacheDictionary","returnFullSave","DictionaryCategory","idDictionary","DictionaryEntry","EntryForm","idCategory","Novel","NovelDictionary","ModalComponent","modalService","el","element","nativeElement","ngOnInit","modal","id","console","error","document","body","appendChild","addEventListener","e","target","className","close","add","ngOnDestroy","remove","open","style","display","classList","i0","selectors","inputs","ngContentSelectors","decls","vars","consts","template","ModalService","modals","push","filter","x","factory","providedIn","of","HttpHeaders","catchError","tap","environment","httpOptions","headers","apiUrl","backendServer","AjaxService","http","handleError","operation","result","_call","params","type","toLowerCase","HTTP","url","content","pipe","err","caught","_get","_post","_put","_delete","DEBUG","args","log","ApiService","Category","Entry","Meta","setApi","CategoriesService","api","set","items","force","item","entries","hasAll","has","get","Promise","resolve","reject","route","subscribe","getAll","category","name","update","delete","t","ChaptersService","idNovel","length","no","text","textOriginal","chapter","autoUpdate","novel","then","novelCurrent","numberChapters","_","DictionariesService","pivots","hasAllNovels","getDictionaryPivots","values","arr","idDic","getCache","hasCache","cache","reworkCache","rebuildCache","dictionary_category","dictionary_entry","fullSave","categories","returnFS","changes","dateRevision","EntriesService","setHasAll","join","entry","entryTranslation","saveByCategory","map","MetaService","value","meta","NovelsService","dictionary","hasAllDictionaries","getNovelPivots","idNov","RouterModule","routes","path","loadChildren","m","DashboardModule","data","title","breadcrumb","NovelModule","DictionaryModule","redirectTo","AppRoutingModule","forRoot","enableTracing","imports","exports","AppComponent","router","currentUrl","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","HeaderComponent","FontAwesomeModule","library","fas","AppModule","bootstrap","declarations","NavigationEnd","distinctUntilChanged","activatedRoute","breadcrumbs","buildBreadCrumb","root","events","event","next","renameLabels","label","routeConfig","lastRoutePart","split","shift","isDynamicRoute","startsWith","snapshot","paramName","replace","nextUrl","newBreadcrumbs","firstChild","rememberVariables","noChapter","forEach","parseInt","nameCustom","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///"}