{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_models/chapter.ts","./src/app/_models/dictionary.ts","./src/app/_models/dictionarycategory.ts","./src/app/_models/dictionaryentry.ts","./src/app/_models/index.ts","./src/app/_models/novel.ts","./src/app/_models/noveldictionary.ts","./src/app/_pipes/safe-html.pipe.ts","./src/app/_services/modal/modal.component.ts","./src/app/_services/modal/modal.component.html","./src/app/_services/modal/modal.service.ts","./src/app/api/ajax.service.ts","./src/app/api/api.service.ts","./src/app/api/categories.service.ts","./src/app/api/chapters.service.ts","./src/app/api/dictionaries.service.ts","./src/app/api/entries.service.ts","./src/app/api/index.ts","./src/app/api/meta.service.ts","./src/app/api/novels.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export class Chapter {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  no: number;\n  idNovel: number;\n  title: string;\n  hasText: boolean;\n  textOriginal: string;\n  textRevision: string;\n  textCustom: string;\n  dateOriginalPost: Date;\n  dateOriginalRevision: Date;\n  dateCreated: Date;\n  dateRevision: Date;\n}\n","import { Optional } from '@angular/core';\nimport { Novel } from './';\nimport { DictionaryCategory } from './dictionarycategory';\nimport { DictionaryEntry } from './dictionaryentry';\n\nexport class Dictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  name: string;\n  language: string;\n  dateCreated: Date;\n  dateRevision: Date;\n  /*@Optional()*/ changes?: boolean; // Use on FullSave, to learn if there is a need to get a new cache\n  /*@Optional()*/ novel?: Novel[];\n  /*@Optional()*/ count_categories?: number;\n\n  countCategories(): number {\n    return this.count_categories ?? 0;\n  }\n}\n\nexport class CacheDictionary {\n  dateCreated: Date;\n  dateRevision: Date;\n  id: number;\n  name: string;\n  language: string;\n  dictionary_category: DictionaryCategory[];\n  dictionary_entry: DictionaryEntry[];\n}\n\nexport class returnFullSave {\n  changes: boolean\n  dateRevision: Date\n}","import { DictionaryEntry, EntryForm } from './dictionaryentry';\n\nexport class DictionaryCategory {\n  public constructor(init?: any, idDictionary?: number) {\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idDictionary) {\n      this.idDictionary = idDictionary;\n    }\n  }\n  id: number;\n  idDictionary: number;\n  name: string;\n  entries: (DictionaryEntry | EntryForm)[];\n  update: boolean;\n}\n","export class DictionaryEntry {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  sufix: number;\n  prefix: number;\n  simplified: string;\n  length: number;\n\n  category?: string;\n  index?: [number, number];\n}\nexport class EntryForm {\n  public constructor(init?: DictionaryEntry | EntryForm, idCategory?: number) {\n    this.sufix = null;\n    this.prefix = null;\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idCategory) {\n      this.idCategory = idCategory;\n    }\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  sufix: number;\n  prefix: number;\n  update: boolean;\n  delete: boolean;\n  reset: boolean;\n}\n","export * from './novel';\nexport * from './chapter';\nexport * from './dictionary';\nexport * from './dictionarycategory';\nexport * from './dictionaryentry';\nexport * from './noveldictionary';\n","import { Optional } from '@angular/core';\nimport { Dictionary } from './';\n\nexport class Novel {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  code: string;\n  nameOriginal: string;\n  nameCustom: string;\n  numberChapters: number;\n  driver: string;\n  flagR18: boolean;\n  completed: boolean;\n  addedBy: Date;\n  show: boolean;\n  /*@Optional()*/ dictionary: Dictionary[];\n}\n","export class NovelDictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  idNovel: number;\n  idDictionary: number;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\n@Pipe({\n  name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}","import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalService } from './modal.service';\n\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\n\n@Component({\n\tselector: 'jw-modal',\n\ttemplateUrl: './modal.component.html',\n\tstyleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n\n    constructor(\n        private modalService: ModalService,\n        private el: ElementRef\n        ) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit(): void {\n        let modal = this;\n\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', function (e: any) {\n            if (e.target.className === 'jw-modal') {\n                modal.close();\n            }\n        });\n\n        // add self (this modal instance) to the modal service so it's accessible from controllers\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        this.element.style.display = 'block';\n        document.body.classList.add('jw-modal-open');\n    }\n\n    // close modal\n    close(): void {\n        this.element.style.display = 'none';\n        document.body.classList.remove('jw-modal-open');\n    }\n}\n","<div class=\"jw-modal\">\n    <div class=\"jw-modal-body\">\n        <ng-content></ng-content>\n    </div>\n</div>\n<div class=\"jw-modal-background\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ModalService {\n\tprivate modals: any[] = [];\n\n\tconstructor() { }\n\n\tadd(modal: any) {\n\t\t// add modal to array of active modals\n\t\tthis.modals.push(modal);\n\t}\n\n\tremove(id: string) {\n\t\t// remove modal from array of active modals\n\t\tthis.modals = this.modals.filter(x => x.id !== id);\n\t}\n\n\topen(id: string) {\n\t\t// open modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.open();\n\t}\n\n\tclose(id: string) {\n\t\t// close modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.close();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, VirtualTimeScheduler } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst apiUrl = environment.backendServer + '/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AjaxService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public _call(params: {\n    type: string;\n    url: string;\n    content?: any;\n  }): Observable<any> {\n    const type = params.type.toLowerCase();\n    let HTTP = null;\n\n    switch (type) {\n      case 'get':\n      case 'delete':\n        HTTP = this.http[type](apiUrl + params.url);\n        break;\n      case 'post':\n      case 'put':\n        HTTP = this.http[type](apiUrl + params.url, params.content, httpOptions);\n        break;\n    }\n    HTTP.pipe(\n      tap()\n      , catchError((err: any, caught: Observable<any>) => {\n        console.error(err, caught);\n        this.handleError(err);\n        return of(caught as any);\n      })\n    );\n    return HTTP;\n  }\n  public _get(url: string): Observable<any> {\n    return this._call({ type: 'get', url });\n  }\n  public _post(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'post', url, content });\n  }\n  public _put(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'put', url, content });\n  }\n  public _delete(url: string): Observable<any> {\n    return this._call({ type: 'delete', url });\n  }\n  public DEBUG(...args: any): void {\n    console.log('AJAXService Debug', args);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NovelsService } from './novels.service';\nimport { ChaptersService } from './chapters.service';\nimport { DictionariesService } from './dictionaries.service';\nimport { CategoriesService } from './categories.service';\nimport { EntriesService } from './entries.service';\nimport { MetaService } from './meta.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    // private cacheService: CacheService\n    public Novel: NovelsService,\n    public Chapter: ChaptersService,\n    public Dictionary: DictionariesService,\n    public Category: CategoriesService,\n    public Entry: EntriesService,\n    public Meta: MetaService,\n  ) {\n    this.Novel.setApi(this);\n    this.Chapter.setApi(this);\n    this.Dictionary.setApi(this);\n    this.Category.setApi(this);\n    this.Entry.setApi(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory } from '../_models/dictionarycategory';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService extends AjaxService {\n  route = 'category/';\n  items: DictionaryCategory[][] = [];\n  hasAll: boolean[] = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: DictionaryCategory[], idDictionary: number, force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [];\n    }\n    for (const item of items) {\n      this.items[idDictionary][item.id] = item;\n      if (!this.items[idDictionary][item.id].entries) {\n        this.items[idDictionary][item.id].entries = [];\n      }\n    }\n    if (force) {\n      this.hasAll[idDictionary] = true;\n    }\n  }\n  has(params: { idDictionary: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, id: number }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      if (this.items[params.idDictionary] && this.items[params.idDictionary][params.id]) {\n        resolve(this.items[params.idDictionary][params.id]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' + params.id)\n          .subscribe((item: DictionaryCategory) => {\n            if (item) {\n              this.set([item], params.idDictionary);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryCategory ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, search?: number }): Promise<DictionaryCategory[]> {\n    return new Promise<DictionaryCategory[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]) {\n        resolve(this.items[params.idDictionary]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' )\n          .subscribe((items: DictionaryCategory[]) => {\n            this.hasAll[params.idDictionary] = true;\n            this.set(items, params.idDictionary);\n            resolve(this.items[params.idDictionary]);\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._post(this.route + params.idDictionary + '/' , params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on inserting category ' + params.category.name);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, id: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._put(this.route + params.idDictionary + '/'  + params.id, params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on updating category ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idDictionary + '/'  + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.idDictionary][params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting category ' + params.id);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Chapter } from '../_models/chapter';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChaptersService extends AjaxService {\n  route = 'chapter/';\n  items: [Chapter[]] = [[]];\n  hasAll: [boolean] = [false];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(idNovel: number, items: Chapter[]): void {\n    if (!this.items[idNovel]) {\n      this.items[idNovel] = [];\n    }\n    if (items.length > 0) {\n      for (const item of items) {\n        this.items[idNovel][item.no] = item;\n      }\n    }\n  }\n  has(params: { idNovel: number, no?: number, text?: boolean }): boolean {\n    if (!params.no ) {\n      return !!(this.items[params.idNovel]);\n    } else {\n      if (!params.text) {\n        return !!(this.items[params.idNovel] && this.items[params.idNovel][params.no]);\n      } else {\n        return !!(this.items[params.idNovel]\n              && this.items[params.idNovel][params.no]\n              && this.items[params.idNovel][params.no].textOriginal);\n      }\n    }\n  }\n  /**\n   * Basic CRUD stuff here. <params.text> is for when I need the texts available (Only used in Detail View)\n   */\n  get(params: { idNovel: number, no: number, text?: boolean } ): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      if (this.has({idNovel: params.idNovel, no: params.no, text: params.text})) {\n        resolve(this.items[params.idNovel][params.no]);\n      } else {\n        this._get(this.route + params.idNovel + '/' + params.no)\n          .subscribe((item: Chapter) => {\n            if (item) {\n              this.set(params.idNovel, [item]);\n              resolve(this.items[params.idNovel][params.no]);\n            } else {\n              reject('Invalid Chapter on Novel ' + params.idNovel + ' / ' + params.no);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idNovel: number, search?: string } ): Promise<Chapter[]> {\n    return new Promise<Chapter[]>((resolve, reject) => {\n      if (this.hasAll[params.idNovel]) {\n        resolve(this.items[params.idNovel]);\n      } else {\n        this._get(this.route + params.idNovel)\n          .subscribe((items: Chapter[]) => {\n            if (items.length > 0) {\n              this.set(params.idNovel, items);\n\n              this.hasAll[params.idNovel] = true;\n              resolve(items);\n            } else {\n              reject('No Chapters for Novel ' + params.idNovel);\n            }\n          });\n      }\n    });\n  }\n  add(params: { idNovel: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._post(this.route, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting chapter ' + params.idNovel);\n          }\n        });\n    });\n  }\n  update(params: { idNovel: number, no: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._put(this.route + params.idNovel + '/' + params.no, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating chapter ' + params.no);\n          }\n        });\n    });\n  }\n  delete(params: { idNovel: number, no: number } ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idNovel + '/' + params.no)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idNovel][params.no] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting chapter ' + params.no);\n          }\n        });\n    });\n  }\n  /**\n   * More complex stuff starting here\n   */\n\n  // Lots of automated services here\n  autoUpdate(params: { idNovel: number }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this._get(this.route + 'autoUpdate/' + params.idNovel)\n        .subscribe((novel: Novel) => {\n          // If we already have a register, we should check if anything relevant was updated.\n          if (this.api.Novel.has({ id: params.idNovel })) {\n            this.api.Novel\n                  .get({id: params.idNovel})\n                  .then((novelCurrent) => {\n                    // If there are more chapters, we update the novel folder, and point we don't have everything anymore\n                    if (novel.numberChapters !== novelCurrent.numberChapters ) {\n                      this.api.Novel.set([novel]);\n                      this.hasAll[params.idNovel] = false;\n                      //  Then if we already have chapters in, we reload, otherwise, no need to do that.\n                      if (this.has({ idNovel : params.idNovel })) {\n                        this.getAll({ idNovel : params.idNovel })\n                            .then(_ => {\n                              resolve(true);\n                            });\n                      } else {\n                        resolve(true);\n                      }\n                    } else {\n                      resolve(false);\n                    }\n                  });\n          } else {\n            this.api.Novel.set([novel]);\n            resolve(true);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { CacheDictionary, Dictionary, DictionaryCategory, returnFullSave } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionariesService extends AjaxService {\n  route = 'dictionary/';\n  items: Dictionary[] = [];\n  hasAll = false;\n  hasAllNovels = [];\n  pivots = []; // pivots[idNovel] = idDictionary[]\n\n  api: ApiService = null;\n  hasCache: boolean[] = [];\n\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Dictionary[], idNovel?: number): void {\n    // If idNovel is being sent, I'm considering that it's sending all Dictionaries from one novel\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the detached dictionaries too\n    if (idNovel) {\n      this.pivots[idNovel] = [];\n    }\n    for (const item of items) {\n      if (typeof item.novel !== 'undefined') {\n        this.api.Novel.set(item.novel, item.id);\n        delete (item.novel);\n      }\n      this.items[item.id] = new Dictionary(item);\n      if (idNovel) {\n        this.pivots[idNovel].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idNovel) {\n      this.hasAllNovels[idNovel] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { id?: number } ): Promise<Dictionary> {\n    if (params.id) {\n      return new Promise<Dictionary>((resolve, reject) => {\n        if (this.items[params.id]) {\n          resolve(this.items[params.id]);\n        } else {\n          this._get(this.route + params.id)\n            .subscribe((item: Dictionary) => {\n              if (item) {\n                this.set([item]);\n                resolve(item);\n              } else {\n                reject('Invalid Dictionary ' + params.id);\n              }\n            });\n        }\n      });\n    }\n  }\n  getAll(params?: { idNovel?: number, search?: number } ): Promise<Dictionary[]> {\n    return new Promise<Dictionary[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idNovel = params && params.idNovel ? params.idNovel : null;\n      if (idNovel && this.hasAllNovels[idNovel]) {\n        resolve(this.getDictionaryPivots(idNovel));\n      } else\n      // If we are looking only for all Dictionaries, we do it here\n      if (this.hasAll && !idNovel) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idNovel ? 'novel/' + idNovel : ''))\n          .subscribe((items: Dictionary[]) => {\n            if (items.length > 0) {\n              this.set(items, idNovel);\n              // Here we also set the different paths\n              if (!idNovel) {\n                this.hasAll = true;\n                resolve(this.items);\n              } else {\n                resolve(this.getDictionaryPivots(idNovel));\n              }\n            } else {\n              reject('No Dictionaries');\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { dictionary: Dictionary, novels?: number[] } } ): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting dictionary ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: { dictionary: Dictionary, novels?: number[] } }): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating dictionary ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting dictionary ' + params.id);\n          }\n        });\n    });\n  }\n\n  getDictionaryPivots(idNovel: number): Dictionary[] {\n    if (!this.pivots[idNovel]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idDic of this.pivots[idNovel]) {\n        arr.push(this.items[idDic]);\n      }\n      return arr;\n    }\n  }\n  getCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.hasCache[idDictionary]) {\n        resolve (true);\n      } else {\n        this._get('cache/dictionary/' + idDictionary)\n          .subscribe((cache: CacheDictionary) => {\n            this.hasCache[idDictionary] = true;\n            this.reworkCache(cache);\n            resolve(true);\n          });\n      }\n    });\n  }\n  rebuildCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('cache/dictionary/' + idDictionary)\n        .subscribe((cache: CacheDictionary) => {\n          this.hasCache[idDictionary] = true;\n          this.reworkCache(cache);\n          resolve(true);\n        });\n    });\n  }\n  reworkCache(cache: CacheDictionary): void {\n    if (cache.dictionary_category) {\n      this.api.Category.set(cache.dictionary_category, cache.id, true);\n    }\n    if (cache.dictionary_entry.length >= 0) {\n      this.api.Entry.set(cache.id, null, cache.dictionary_entry, true);\n    }\n  }\n  fullSave(idDictionary: number, categories: DictionaryCategory[]): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('dictionary/fullSave/' + idDictionary, categories)\n        .subscribe((returnFS: returnFullSave) => {\n          if (returnFS.changes) {\n            this.hasCache[idDictionary] = false;\n            console.log('full Save Dictionary.Service', this.items[idDictionary]);\n            this.items[idDictionary].dateRevision = returnFS.dateRevision;\n          }\n          resolve(true);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory, DictionaryEntry, EntryForm } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntriesService extends AjaxService {\n  route = 'entry/';\n  items: [[DictionaryEntry[]]] = [[[]]];\n  hasAll: boolean[][] = [[]];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  setHasAll(idDictionary: number, idCategory: number, set: boolean = true): void {\n    if (!this.hasAll[idDictionary]) {\n      this.hasAll[idDictionary] = [];\n    }\n    this.hasAll[idDictionary][idCategory] = set;\n  }\n  set(idDictionary: number, idCategory: number, items: DictionaryEntry[] | EntryForm[], force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [[]];\n    }\n    if (idCategory) {\n      if (!this.items[idDictionary][idCategory]) {\n        this.items[idDictionary][idCategory] = [];\n      }\n      if (items.length > 0) {\n        for (const item of items) {\n          this.items[idDictionary][idCategory][item.id] = new DictionaryEntry(item);\n        }\n      }\n      if (force) {\n        this.setHasAll(idDictionary, idCategory);\n      }\n    } else {\n      if (items.length > 0) {\n        for (const item of items) {\n          if (!this.items[idDictionary][item.idCategory]) {\n            this.items[idDictionary][item.idCategory] = [];\n          }\n          this.items[idDictionary][item.idCategory][item.id] = new DictionaryEntry(item);\n          if (force) {\n            this.setHasAll(idDictionary, item.idCategory);\n          }\n        }\n      }\n    }\n  }\n  has(params: { idDictionary: number, idCategory: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]\n             && this.items[params.idDictionary][params.idCategory][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, idCategory: number, id: number }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      if (this.items[params.idDictionary]\n        && this.items[params.idDictionary][params.idCategory]\n        && this.items[params.idDictionary][params.idCategory][params.id] ) {\n        resolve(this.items[params.idDictionary][params.idCategory][params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: DictionaryEntry) => {\n            if (item) {\n              this.set(params.idDictionary, params.idCategory, [item]);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryEntry ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, idCategory: number, search?: number }): Promise<DictionaryEntry[]> {\n    return new Promise<DictionaryEntry[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]\n        && this.hasAll[params.idDictionary][params.idCategory]) {\n        resolve(this.items[params.idDictionary][params.idCategory]);\n      } else {\n        this._get(this.route + [params.idDictionary, params.idCategory].join('/'))\n          .subscribe((items: DictionaryEntry[]) => {\n            if (items.length >= 0) {\n              this.set(params.idDictionary, params.idCategory, items);\n              this.setHasAll(params.idDictionary, params.idCategory);\n              resolve(items);\n            } else {\n              reject('No DictionaryEntrys');\n            }\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, idCategory: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._post(this.route, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting entry ' + params.entry.entryTranslation);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, idCategory: number, id: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._put(this.route + params.id, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating entry ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, idCategory: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idDictionary][params.idCategory][params.id] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting entry ' + params.id);\n          }\n        });\n    });\n  }\n\n  saveByCategory(params: { idDictionary: number, idCategory: number, entries: EntryForm[]}): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put(this.route + [params.idDictionary, 'updatebycategory', params.idCategory].join('/'), params.entries)\n        .subscribe((items: {categories: DictionaryCategory[], entries: DictionaryEntry[]}) => {\n          if (items) {\n            /**\n             * Because multiple categories may have been changed, the backend returns all affected categories\n             */\n            if (items.categories) {\n              items.categories.map((category) => {\n                this.setHasAll(category.idDictionary, category.id, false);\n                this.api.Category.set([category], category.idDictionary);\n              });\n            }\n            this.setHasAll(params.idDictionary, params.idCategory);\n            this.set(params.idDictionary, params.idCategory, items.entries, true);\n            resolve(true);\n          } else {\n            reject('Error on updating entry ' + params.idCategory);\n          }\n        });\n      return true;\n    });\n  }\n}\n","export * from './api.service';\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Meta } from '../_models/formField';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService extends AjaxService {\n  route = 'meta';\n  items = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n\n  set(type: string, value: []): void {\n    this.items[type] = value;\n  }\n  has(type: string) {\n    return !!(this.items[type]);\n  }\n\n  get(...params: string[]): Promise<Meta> {\n    return new Promise<Meta>((resolve, reject) => {\n      this._post(this.route, { meta: params })\n        .subscribe((items: Meta) => {\n          resolve(items);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\nimport { ApiService } from '.';\nimport { NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NovelsService extends AjaxService {\n  route = 'novel/';\n  items: Novel[] = [];\n  hasAll = false;\n  hasAllDictionaries = [];\n  pivots = []; // pivots[idDictionary] = idNovel[]\n\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Novel[], idDictionary?: number): void {\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the atached dictionaries too\n    if (idDictionary) {\n      this.pivots[idDictionary] = [];\n    }\n    for (const item of items) {\n      if (typeof item.dictionary !== 'undefined') {\n        this.api.Dictionary.set(item.dictionary, item.id);\n        delete(item.dictionary);\n      }\n      this.items[item.id] = item;\n      if (idDictionary) {\n        this.pivots[idDictionary].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idDictionary) {\n      this.hasAllDictionaries[idDictionary] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: {id: number} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      if (this.items[params.id]) {\n        resolve(this.items[params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: Novel) => {\n            if (item) {\n              this.set([item]);\n              resolve(item);\n            } else {\n              reject('Invalid Novel ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params?: { idDictionary?: number, search?: string } ): Promise<Novel[]> {\n    return new Promise<Novel[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idDictionary = params && params.idDictionary ? params.idDictionary : null;\n      if (idDictionary && this.hasAllDictionaries[idDictionary]) {\n        resolve(this.getNovelPivots(idDictionary));\n      } else\n      if (this.hasAll && !idDictionary) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idDictionary ? 'dictionary/' + idDictionary : ''))\n          .subscribe((items: Novel[]) => {\n            this.set(items, idDictionary);\n              // Here we also set the different paths\n            if (!idDictionary) {\n              this.hasAll = true;\n              resolve(this.items);\n            } else {\n              resolve(this.getNovelPivots(idDictionary));\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { novel: Novel, dictionaries?: number[] } } ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting novel ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: {novel: Novel, dictionaries?: number[]}} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating novel ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting novel ' + params.id);\n          }\n        });\n    });\n  }\n\n  getNovelPivots(idDictionary: number): Novel[] {\n    if (!this.pivots[idDictionary]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idNov of this.pivots[idDictionary]) {\n        arr.push(this.items[idNov]);\n      }\n      return arr;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovelModule } from './novel';\nimport { DictionaryModule } from './dictionary';\nimport { DashboardModule } from './dashboard';\n\nconst routes: Routes = [\n  {\n     path: 'dashboard'\n    , loadChildren: () => import('./dashboard').then(m => m.DashboardModule)\n    , data: { title: 'Dashboard', breadcrumb: 'Dashboard' }\n  },\n  {\n     path: 'novel'\n    , loadChildren: () => import('./novel').then(m => m.NovelModule)\n    , data: { title: 'List Novels', breadcrumb: 'Novels' }\n  },\n  {\n    path: 'dictionary'\n    , loadChildren: () => import('./dictionary').then(m => m.DictionaryModule)\n    , data: { title: 'List Dictionaries', breadcrumb: 'Dictionaries' }\n  },\n  {\n     path: '**'\n    , redirectTo: 'dashboard'\n  },\n];\n\n@NgModule({\n    imports: [\n    RouterModule.forRoot(\n       routes\n       , { enableTracing: false  }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.scss',\n        './_services/modal/modal.component.scss',\n  ]\n})\nexport class AppComponent {\n    title = 'frontend';\n    base = environment.currentUrl;\n  constructor(\n    private router: Router\n  ) {\n    this.title = 'false';\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Papa } from 'ngx-papaparse';\n\nimport { HeaderComponent } from './header/header.component';\nimport { ModalComponent } from './_services/modal/modal.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { KeyboardShortcutsModule } from 'ng-keyboard-shortcuts';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { SafeHtmlPipe } from './_pipes/safe-html.pipe';\n\n\nlibrary.add(fas);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SafeHtmlPipe,\n    //Papa,    // Necessary for CSV\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule, \t// Necessary for API Services\n    FormsModule,\t\t// Necessary for Dynamic Forms\n    ReactiveFormsModule, // Necessary for Dynamic Forms\n    FontAwesomeModule,\t// Necessary for SVG\n    //Papa,    // Necessary for CSV\n    KeyboardShortcutsModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  exports: [\n    //Papa,    // Necessary for CSV\n  ],\n  providers: [\n        ModalComponent,\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Event as RouterEvent } from '@angular/router';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\nimport { ApiService } from '../api';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    public breadcrumbs: IBreadCrumb[];\n\n    constructor(\n          private router: Router\n        , private activatedRoute: ActivatedRoute\n        , private api: ApiService\n        ) {\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n        }\n\n    ngOnInit() {\n        this.router.events.pipe(\n            filter((event: RouterEvent) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((next) => {\n            //console.log('ROUTER', next, this.activatedRoute.root);\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n            this.renameLabels();\n            //console.log('ROUTER END');\n        });\n  }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n        // If no routeConfig is avalailable we are on the root path\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        if (path === 'dashboard' ) {\n            return [];\n        }\n\n        // If the route is dynamic route such as ':id', remove it\n        // Nota that here, the id appears before the actions, thus, using \"shift\" instead of \"pop\"\n        const lastRoutePart = path.split('/').shift();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n        let type = null;\n        if (isDynamicRoute && !!route.snapshot) {\n            const paramName = lastRoutePart.split(':')[1];\n            path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n            label = route.snapshot.params[paramName]; // '_' + paramName + ':' + route.snapshot.params[paramName];\n            type = paramName;\n        }\n\n        // In the routeConfig the complete path is not available,\n        // so we rebuild it each time\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const breadcrumb: IBreadCrumb = {\n            label,\n            url: nextUrl,\n            type\n        };\n        // Only adding route with non-empty label\n        const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [...breadcrumbs];\n        if (route.firstChild) {\n            // If we are not on our current path yet,\n            // there will be more children to look after, to build our breadcumb\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n        return newBreadcrumbs;\n    }\n\n    private renameLabels() {\n        const rememberVariables = {\n            idNovel: null,\n            idDictionary: null,\n            idCategory: null,\n            noChapter: null\n        };\n        //console.log('header calls');\n        this.breadcrumbs.forEach(el => {\n            if (el.type) {\n                rememberVariables[el.type] = parseInt(el.label, 10);\n                el.label = '';\n                switch (el.type) {\n                    case 'idNovel':\n                        this.api.Novel.get({ id: rememberVariables.idNovel})\n                            .then(novel => {\n                                el.label = 'Chapters: ' + novel.nameCustom;\n                            });\n                        break;\n                    case 'idDictionary':\n                        this.api.Dictionary.get({ id: rememberVariables.idDictionary })\n                            .then(dictionary => {\n                                el.label = 'Cat: ' + dictionary.name;\n                            });\n                        break;\n                    case 'idCategory':\n                        this.api.Category.get({ idDictionary: rememberVariables.idDictionary, id: rememberVariables.idCategory })\n                            .then(category => {\n                                el.label = 'Entries: ' + category.name;\n                            });\n                        break;\n                    case 'noChapter':\n                        this.api.Chapter.get({ idNovel: rememberVariables.idNovel, no: rememberVariables.noChapter })\n                            .then(chapter => {\n                                el.label = 'Chapter: ' + chapter.title;\n                            });\n                        break;\n                }\n            }\n        });\n        //console.log('header calls end');\n    }\n}\n","<header>\n\t<img src=\"assets/mtl_tools.png\" class='appName'  routerLink=\"/\" />\n\t<ul>\n        <li routerLink=\"/dashboard\" routerLinkActive=\"router-link-active\">\n            <a>Dashboard</a>\n        </li>\n        <ng-container  *ngFor=\"let breadcrumb of breadcrumbs\">\n            <li [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n                <a>/ {{ breadcrumb.label }}</a>\n            </li>\n        </ng-container>\n\t</ul>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    currentUrl: 'http://api.mtltools.docker:800',\n    backendServer: 'http://api.mtltools.docker:800',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Chapter","constructor","init","Object","assign","Dictionary","countCategories","count_categories","CacheDictionary","returnFullSave","DictionaryCategory","idDictionary","DictionaryEntry","EntryForm","idCategory","sufix","prefix","Novel","NovelDictionary","SafeHtmlPipe","sanitizer","transform","html","bypassSecurityTrustHtml","i0","pure","ModalComponent","modalService","el","element","nativeElement","ngOnInit","modal","id","console","error","document","body","appendChild","addEventListener","e","target","className","close","add","ngOnDestroy","remove","open","style","display","classList","selectors","inputs","ngContentSelectors","decls","vars","consts","template","ModalService","modals","push","filter","x","factory","providedIn","of","HttpHeaders","catchError","tap","environment","httpOptions","headers","apiUrl","backendServer","AjaxService","http","handleError","operation","result","_call","params","type","toLowerCase","HTTP","url","content","pipe","err","caught","_get","_post","_put","_delete","DEBUG","args","log","ApiService","Category","Entry","Meta","setApi","CategoriesService","api","set","items","force","item","entries","hasAll","has","get","Promise","resolve","reject","route","subscribe","getAll","category","name","update","delete","t","ChaptersService","idNovel","length","no","text","textOriginal","chapter","autoUpdate","novel","then","novelCurrent","numberChapters","_","DictionariesService","pivots","hasAllNovels","getDictionaryPivots","values","arr","idDic","getCache","hasCache","cache","reworkCache","rebuildCache","dictionary_category","dictionary_entry","fullSave","categories","returnFS","changes","dateRevision","EntriesService","setHasAll","join","entry","entryTranslation","saveByCategory","map","MetaService","value","meta","NovelsService","dictionary","hasAllDictionaries","getNovelPivots","idNov","RouterModule","routes","path","loadChildren","m","DashboardModule","data","title","breadcrumb","NovelModule","DictionaryModule","redirectTo","AppRoutingModule","forRoot","enableTracing","imports","exports","AppComponent","router","currentUrl","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","HeaderComponent","FontAwesomeModule","library","fas","KeyboardShortcutsModule","BrowserAnimationsModule","AppModule","bootstrap","declarations","i1","NavigationEnd","distinctUntilChanged","activatedRoute","breadcrumbs","buildBreadCrumb","root","events","event","next","renameLabels","label","routeConfig","lastRoutePart","split","shift","isDynamicRoute","startsWith","snapshot","paramName","replace","nextUrl","newBreadcrumbs","firstChild","rememberVariables","noChapter","forEach","parseInt","nameCustom","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///"}