{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_models/chapter.ts","./src/app/_models/dictionary.ts","./src/app/_models/dictionarycategory.ts","./src/app/_models/dictionaryentry.ts","./src/app/_models/index.ts","./src/app/_models/novel.ts","./src/app/_models/noveldictionary.ts","./src/app/_services/modal/modal.component.ts","./src/app/_services/modal/modal.component.html","./src/app/_services/modal/modal.service.ts","./src/app/api/ajax.service.ts","./src/app/api/api.service.ts","./src/app/api/categories.service.ts","./src/app/api/chapters.service.ts","./src/app/api/dictionaries.service.ts","./src/app/api/entries.service.ts","./src/app/api/index.ts","./src/app/api/meta.service.ts","./src/app/api/novels.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export class Chapter {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  no: number;\n  idNovel: number;\n  title: string;\n  hasText: boolean;\n  textOriginal: string;\n  textRevision: string;\n  textCustom: string;\n  dateOriginalPost: Date;\n  dateOriginalRevision: Date;\n  dateCreated: Date;\n  dateRevision: Date;\n}\n","import { Optional } from '@angular/core';\nimport { Novel } from './';\nimport { DictionaryCategory } from './dictionarycategory';\nimport { DictionaryEntry } from './dictionaryentry';\n\nexport class Dictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  name: string;\n  language: string;\n  dateCreated: Date;\n  dateRevision: Date;\n  @Optional() changes?: boolean; // Use on FullSave, to learn if there is a need to get a new cache\n  @Optional() novel?: Novel[];\n  /*@Optional()*/ count_categories?: number;\n\n  countCategories(): number {\n    return this.count_categories ?? 0;\n  }\n}\n\nexport class CacheDictionary {\n  dateCreated: Date;\n  dateRevision: Date;\n  id: number;\n  name: string;\n  language: string;\n  dictionary_category: DictionaryCategory[];\n  dictionary_entry: DictionaryEntry[];\n}\n\nexport class returnFullSave {\n  changes: boolean\n  dateRevision: Date\n}","import { DictionaryEntry, EntryForm } from './dictionaryentry';\n\nexport class DictionaryCategory {\n  public constructor(init?: any, idDictionary?: number) {\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idDictionary) {\n      this.idDictionary = idDictionary;\n    }\n  }\n  id: number;\n  idDictionary: number;\n  name: string;\n  entries: (DictionaryEntry | EntryForm)[];\n  update: boolean;\n}\n","export class DictionaryEntry {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  length: number;\n}\nexport class EntryForm {\n  public constructor(init?: DictionaryEntry | EntryForm, idCategory?: number) {\n    if (init) {\n      Object.assign(this, init);\n    }\n    if (idCategory) {\n      this.idCategory = idCategory;\n    }\n  }\n  id: number;\n  idCategory: number;\n  entryOriginal: string;\n  entryTranslation: string;\n  description: string;\n  update: boolean;\n  delete: boolean;\n  reset: boolean;\n}\n","export * from './novel';\nexport * from './chapter';\nexport * from './dictionary';\nexport * from './dictionarycategory';\nexport * from './dictionaryentry';\nexport * from './noveldictionary';\n","import { Optional } from '@angular/core';\nimport { Dictionary } from './';\n\nexport class Novel {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  id: number;\n  code: string;\n  nameOriginal: string;\n  nameCustom: string;\n  numberChapters: number;\n  driver: string;\n  flagR18: boolean;\n  completed: boolean;\n  addedBy: Date;\n  show: boolean;\n  /*@Optional()*/ dictionary: Dictionary[];\n}\n","export class NovelDictionary {\n  public constructor(init?: any) {\n    Object.assign(this, init);\n  }\n  idNovel: number;\n  idDictionary: number;\n}\n","import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalService } from './modal.service';\n\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\n\n@Component({\n\tselector: 'jw-modal',\n\ttemplateUrl: './modal.component.html',\n\tstyleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n\n    constructor(\n        private modalService: ModalService,\n        private el: ElementRef\n        ) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit(): void {\n        let modal = this;\n\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', function (e: any) {\n            if (e.target.className === 'jw-modal') {\n                modal.close();\n            }\n        });\n\n        // add self (this modal instance) to the modal service so it's accessible from controllers\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        this.element.style.display = 'block';\n        document.body.classList.add('jw-modal-open');\n    }\n\n    // close modal\n    close(): void {\n        this.element.style.display = 'none';\n        document.body.classList.remove('jw-modal-open');\n    }\n}\n","<div class=\"jw-modal\">\n    <div class=\"jw-modal-body\">\n        <ng-content></ng-content>\n    </div>\n</div>\n<div class=\"jw-modal-background\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ModalService {\n\tprivate modals: any[] = [];\n\n\tconstructor() { }\n\n\tadd(modal: any) {\n\t\t// add modal to array of active modals\n\t\tthis.modals.push(modal);\n\t}\n\n\tremove(id: string) {\n\t\t// remove modal from array of active modals\n\t\tthis.modals = this.modals.filter(x => x.id !== id);\n\t}\n\n\topen(id: string) {\n\t\t// open modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.open();\n\t}\n\n\tclose(id: string) {\n\t\t// close modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.close();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, VirtualTimeScheduler } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst apiUrl = environment.backendServer + '/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AjaxService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  public _call(params: {\n    type: string;\n    url: string;\n    content?: any;\n  }): Observable<any> {\n    const type = params.type.toLowerCase();\n    let HTTP = null;\n\n    switch (type) {\n      case 'get':\n      case 'delete':\n        HTTP = this.http[type](apiUrl + params.url);\n        break;\n      case 'post':\n      case 'put':\n        HTTP = this.http[type](apiUrl + params.url, params.content, httpOptions);\n        break;\n    }\n    HTTP.pipe(\n      tap()\n      , catchError((err: any, caught: Observable<any>) => {\n        console.error(err, caught);\n        this.handleError(err);\n        return of(caught as any);\n      })\n    );\n    return HTTP;\n  }\n  public _get(url: string): Observable<any> {\n    return this._call({ type: 'get', url });\n  }\n  public _post(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'post', url, content });\n  }\n  public _put(url: string, content?: any): Observable<any> {\n    return this._call({ type: 'put', url, content });\n  }\n  public _delete(url: string): Observable<any> {\n    return this._call({ type: 'delete', url });\n  }\n  public DEBUG(...args: any): void {\n    console.log(args);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NovelsService } from './novels.service';\nimport { ChaptersService } from './chapters.service';\nimport { DictionariesService } from './dictionaries.service';\nimport { CategoriesService } from './categories.service';\nimport { EntriesService } from './entries.service';\nimport { MetaService } from './meta.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    // private cacheService: CacheService\n    public Novel: NovelsService,\n    public Chapter: ChaptersService,\n    public Dictionary: DictionariesService,\n    public Category: CategoriesService,\n    public Entry: EntriesService,\n    public Meta: MetaService,\n  ) {\n    this.Novel.setApi(this);\n    this.Chapter.setApi(this);\n    this.Dictionary.setApi(this);\n    this.Category.setApi(this);\n    this.Entry.setApi(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory } from '../_models/dictionarycategory';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService extends AjaxService {\n  route = 'category/';\n  items: DictionaryCategory[][] = [];\n  hasAll: boolean[] = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: DictionaryCategory[], idDictionary: number, force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [];\n    }\n    for (const item of items) {\n      this.items[idDictionary][item.id] = item;\n      if (!this.items[idDictionary][item.id].entries) {\n        this.items[idDictionary][item.id].entries = [];\n      }\n    }\n    if (force) {\n      this.hasAll[idDictionary] = true;\n    }\n  }\n  has(params: { idDictionary: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, id: number }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      if (this.items[params.idDictionary] && this.items[params.idDictionary][params.id]) {\n        resolve(this.items[params.idDictionary][params.id]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' + params.id)\n          .subscribe((item: DictionaryCategory) => {\n            if (item) {\n              this.set([item], params.idDictionary);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryCategory ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, search?: number }): Promise<DictionaryCategory[]> {\n    return new Promise<DictionaryCategory[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]) {\n        resolve(this.items[params.idDictionary]);\n      } else {\n        this._get(this.route + params.idDictionary + '/' )\n          .subscribe((items: DictionaryCategory[]) => {\n            this.hasAll[params.idDictionary] = true;\n            this.set(items, params.idDictionary);\n            resolve(this.items[params.idDictionary]);\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._post(this.route + params.idDictionary + '/' , params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on inserting category ' + params.category.name);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, id: number, category: DictionaryCategory }): Promise<DictionaryCategory> {\n    return new Promise<DictionaryCategory>((resolve, reject) => {\n      this._put(this.route + params.idDictionary + '/'  + params.id, params.category)\n        .subscribe((item: DictionaryCategory) => {\n          if (item) {\n            this.set([item], params.idDictionary);\n            resolve(item);\n          } else {\n            reject('Error on updating category ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idDictionary + '/'  + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.idDictionary][params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting category ' + params.id);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Chapter } from '../_models/chapter';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChaptersService extends AjaxService {\n  route = 'chapter/';\n  items: [Chapter[]] = [[]];\n  hasAll: [boolean] = [false];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(idNovel: number, items: Chapter[]): void {\n    if (!this.items[idNovel]) {\n      this.items[idNovel] = [];\n    }\n    if (items.length > 0) {\n      for (const item of items) {\n        this.items[idNovel][item.no] = item;\n      }\n    }\n  }\n  has(params: { idNovel: number, no?: number, text?: boolean }): boolean {\n    if (!params.no ) {\n      return !!(this.items[params.idNovel]);\n    } else {\n      if (!params.text) {\n        return !!(this.items[params.idNovel] && this.items[params.idNovel][params.no]);\n      } else {\n        return !!(this.items[params.idNovel]\n              && this.items[params.idNovel][params.no]\n              && this.items[params.idNovel][params.no].textOriginal);\n      }\n    }\n  }\n  /**\n   * Basic CRUD stuff here. <params.text> is for when I need the texts available (Only used in Detail View)\n   */\n  get(params: { idNovel: number, no: number, text?: boolean } ): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      if (this.has({idNovel: params.idNovel, no: params.no, text: params.text})) {\n        resolve(this.items[params.idNovel][params.no]);\n      } else {\n        this._get(this.route + params.idNovel + '/' + params.no)\n          .subscribe((item: Chapter) => {\n            if (item) {\n              this.set(params.idNovel, [item]);\n              resolve(this.items[params.idNovel][params.no]);\n            } else {\n              reject('Invalid Chapter on Novel ' + params.idNovel + ' / ' + params.no);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idNovel: number, search?: string } ): Promise<Chapter[]> {\n    return new Promise<Chapter[]>((resolve, reject) => {\n      if (this.hasAll[params.idNovel]) {\n        resolve(this.items[params.idNovel]);\n      } else {\n        this._get(this.route + params.idNovel)\n          .subscribe((items: Chapter[]) => {\n            if (items.length > 0) {\n              this.set(params.idNovel, items);\n\n              this.hasAll[params.idNovel] = true;\n              resolve(items);\n            } else {\n              reject('No Chapters for Novel ' + params.idNovel);\n            }\n          });\n      }\n    });\n  }\n  add(params: { idNovel: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._post(this.route, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting chapter ' + params.idNovel);\n          }\n        });\n    });\n  }\n  update(params: { idNovel: number, no: number, chapter: Chapter }): Promise<Chapter> {\n    return new Promise<Chapter>((resolve, reject) => {\n      this._put(this.route + params.idNovel + '/' + params.no, params.chapter)\n        .subscribe((item: Chapter) => {\n          if (item) {\n            this.set(params.idNovel, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating chapter ' + params.no);\n          }\n        });\n    });\n  }\n  delete(params: { idNovel: number, no: number } ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.idNovel + '/' + params.no)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idNovel][params.no] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting chapter ' + params.no);\n          }\n        });\n    });\n  }\n  /**\n   * More complex stuff starting here\n   */\n\n  // Lots of automated services here\n  autoUpdate(params: { idNovel: number }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this._get(this.route + 'autoUpdate/' + params.idNovel)\n        .subscribe((novel: Novel) => {\n          // If we already have a register, we should check if anything relevant was updated.\n          if (this.api.Novel.has({ id: params.idNovel })) {\n            this.api.Novel\n                  .get({id: params.idNovel})\n                  .then((novelCurrent) => {\n                    // If there are more chapters, we update the novel folder, and point we don't have everything anymore\n                    if (novel.numberChapters !== novelCurrent.numberChapters ) {\n                      this.api.Novel.set([novel]);\n                      this.hasAll[params.idNovel] = false;\n                      //  Then if we already have chapters in, we reload, otherwise, no need to do that.\n                      if (this.has({ idNovel : params.idNovel })) {\n                        this.getAll({ idNovel : params.idNovel })\n                            .then(_ => {\n                              resolve(true);\n                            });\n                      } else {\n                        resolve(true);\n                      }\n                    } else {\n                      resolve(false);\n                    }\n                  });\n          } else {\n            this.api.Novel.set([novel]);\n            resolve(true);\n          }\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { CacheDictionary, Dictionary, DictionaryCategory, returnFullSave } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionariesService extends AjaxService {\n  route = 'dictionary/';\n  items: Dictionary[] = [];\n  hasAll = false;\n  hasAllNovels = [];\n  pivots = []; // pivots[idNovel] = idDictionary[]\n\n  api: ApiService = null;\n  hasCache: boolean[] = [];\n\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Dictionary[], idNovel?: number): void {\n    // If idNovel is being sent, I'm considering that it's sending all Dictionaries from one novel\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the detached dictionaries too\n    if (idNovel) {\n      this.pivots[idNovel] = [];\n    }\n    for (const item of items) {\n      if (typeof item.novel !== 'undefined') {\n        this.api.Novel.set(item.novel, item.id);\n        delete (item.novel);\n      }\n      this.items[item.id] = new Dictionary(item);\n      if (idNovel) {\n        this.pivots[idNovel].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idNovel) {\n      this.hasAllNovels[idNovel] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { id?: number } ): Promise<Dictionary> {\n    if (params.id) {\n      return new Promise<Dictionary>((resolve, reject) => {\n        if (this.items[params.id]) {\n          resolve(this.items[params.id]);\n        } else {\n          this._get(this.route + params.id)\n            .subscribe((item: Dictionary) => {\n              if (item) {\n                this.set([item]);\n                resolve(item);\n              } else {\n                reject('Invalid Dictionary ' + params.id);\n              }\n            });\n        }\n      });\n    }\n  }\n  getAll(params?: { idNovel?: number, search?: number } ): Promise<Dictionary[]> {\n    return new Promise<Dictionary[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idNovel = params && params.idNovel ? params.idNovel : null;\n      if (idNovel && this.hasAllNovels[idNovel]) {\n        resolve(this.getDictionaryPivots(idNovel));\n      } else\n      // If we are looking only for all Dictionaries, we do it here\n      if (this.hasAll && !idNovel) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idNovel ? 'novel/' + idNovel : ''))\n          .subscribe((items: Dictionary[]) => {\n            if (items.length > 0) {\n              this.set(items, idNovel);\n              // Here we also set the different paths\n              if (!idNovel) {\n                this.hasAll = true;\n                resolve(this.items);\n              } else {\n                resolve(this.getDictionaryPivots(idNovel));\n              }\n            } else {\n              reject('No Dictionaries');\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { dictionary: Dictionary, novels?: number[] } } ): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting dictionary ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: { dictionary: Dictionary, novels?: number[] } }): Promise<Dictionary> {\n    return new Promise<Dictionary>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Dictionary) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating dictionary ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting dictionary ' + params.id);\n          }\n        });\n    });\n  }\n\n  getDictionaryPivots(idNovel: number): Dictionary[] {\n    if (!this.pivots[idNovel]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idDic of this.pivots[idNovel]) {\n        arr.push(this.items[idDic]);\n      }\n      return arr;\n    }\n  }\n  getCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.hasCache[idDictionary]) {\n        resolve (true);\n      } else {\n        this._get('cache/dictionary/' + idDictionary)\n          .subscribe((cache: CacheDictionary) => {\n            this.hasCache[idDictionary] = true;\n            this.reworkCache(cache);\n            resolve(true);\n          });\n      }\n    });\n  }\n  rebuildCache(idDictionary: number): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('cache/dictionary/' + idDictionary)\n        .subscribe((cache: CacheDictionary) => {\n          this.hasCache[idDictionary] = true;\n          this.reworkCache(cache);\n          resolve(true);\n        });\n    });\n  }\n  reworkCache(cache: CacheDictionary): void {\n    if (cache.dictionary_category) {\n      this.api.Category.set(cache.dictionary_category, cache.id, true);\n    }\n    if (cache.dictionary_entry.length >= 0) {\n      this.api.Entry.set(cache.id, null, cache.dictionary_entry, true);\n    }\n  }\n  fullSave(idDictionary: number, categories: DictionaryCategory[]): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put('dictionary/fullSave/' + idDictionary, categories)\n        .subscribe((returnFS: returnFullSave) => {\n          if (returnFS.changes) {\n            this.hasCache[idDictionary] = false;\n            console.log('full Save Dictionary.Service', this.items[idDictionary]);\n            this.items[idDictionary].dateRevision = returnFS.dateRevision;\n          }\n          resolve(true);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { DictionaryCategory, DictionaryEntry, EntryForm } from '../_models';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntriesService extends AjaxService {\n  route = 'entry/';\n  items: [[DictionaryEntry[]]] = [[[]]];\n  hasAll: boolean[][] = [[]];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  setHasAll(idDictionary: number, idCategory: number, set: boolean = true): void {\n    if (!this.hasAll[idDictionary]) {\n      this.hasAll[idDictionary] = [];\n    }\n    this.hasAll[idDictionary][idCategory] = set;\n  }\n  set(idDictionary: number, idCategory: number, items: DictionaryEntry[] | EntryForm[], force: boolean = false): void {\n    if (!this.items[idDictionary] || force) {\n      this.items[idDictionary] = [[]];\n    }\n    if (idCategory) {\n      if (!this.items[idDictionary][idCategory]) {\n        this.items[idDictionary][idCategory] = [];\n      }\n      if (items.length > 0) {\n        for (const item of items) {\n          this.items[idDictionary][idCategory][item.id] = new DictionaryEntry(item);\n        }\n      }\n      if (force) {\n        this.setHasAll(idDictionary, idCategory);\n      }\n    } else {\n      if (items.length > 0) {\n        for (const item of items) {\n          if (!this.items[idDictionary][item.idCategory]) {\n            this.items[idDictionary][item.idCategory] = [];\n          }\n          this.items[idDictionary][item.idCategory][item.id] = new DictionaryEntry(item);\n          if (force) {\n            this.setHasAll(idDictionary, item.idCategory);\n          }\n        }\n      }\n    }\n  }\n  has(params: { idDictionary: number, idCategory: number, id?: number }): boolean {\n    if (!params.id) {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]);\n    } else {\n      return !!(this.items[params.idDictionary] && this.items[params.idDictionary][params.idCategory]\n             && this.items[params.idDictionary][params.idCategory][params.id]);\n    }\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: { idDictionary: number, idCategory: number, id: number }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      if (this.items[params.idDictionary]\n        && this.items[params.idDictionary][params.idCategory]\n        && this.items[params.idDictionary][params.idCategory][params.id] ) {\n        resolve(this.items[params.idDictionary][params.idCategory][params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: DictionaryEntry) => {\n            if (item) {\n              this.set(params.idDictionary, params.idCategory, [item]);\n              resolve(item);\n            } else {\n              reject('Invalid DictionaryEntry ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params: { idDictionary: number, idCategory: number, search?: number }): Promise<DictionaryEntry[]> {\n    return new Promise<DictionaryEntry[]>((resolve, reject) => {\n      if (this.hasAll[params.idDictionary]\n        && this.hasAll[params.idDictionary][params.idCategory]) {\n        resolve(this.items[params.idDictionary][params.idCategory]);\n      } else {\n        this._get(this.route + [params.idDictionary, params.idCategory].join('/'))\n          .subscribe((items: DictionaryEntry[]) => {\n            if (items.length >= 0) {\n              this.set(params.idDictionary, params.idCategory, items);\n              this.setHasAll(params.idDictionary, params.idCategory);\n              resolve(items);\n            } else {\n              reject('No DictionaryEntrys');\n            }\n          });\n      }\n    });\n  }\n  add(params: { idDictionary: number, idCategory: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._post(this.route, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting entry ' + params.entry.entryTranslation);\n          }\n        });\n    });\n  }\n  update(params: { idDictionary: number, idCategory: number, id: number, entry: DictionaryEntry }): Promise<DictionaryEntry> {\n    return new Promise<DictionaryEntry>((resolve, reject) => {\n      this._put(this.route + params.id, params.entry)\n        .subscribe((item: DictionaryEntry) => {\n          if (item) {\n            this.set(params.idDictionary, params.idCategory, [item]);\n            resolve(item);\n          } else {\n            reject('Error on updating entry ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { idDictionary: number, idCategory: number, id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            this.items[params.idDictionary][params.idCategory][params.id] = null;\n            resolve(true);\n          } else {\n            reject('Error on deleting entry ' + params.id);\n          }\n        });\n    });\n  }\n\n  saveByCategory(params: { idDictionary: number, idCategory: number, entries: EntryForm[]}): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._put(this.route + [params.idDictionary, 'updatebycategory', params.idCategory].join('/'), params.entries)\n        .subscribe((items: {categories: DictionaryCategory[], entries: DictionaryEntry[]}) => {\n          if (items) {\n            /**\n             * Because multiple categories may have been changed, the backend returns all affected categories\n             */\n            if (items.categories) {\n              items.categories.map((category) => {\n                this.setHasAll(category.idDictionary, category.id, false);\n                this.api.Category.set([category], category.idDictionary);\n              });\n            }\n            this.setHasAll(params.idDictionary, params.idCategory);\n            this.set(params.idDictionary, params.idCategory, items.entries, true);\n            resolve(true);\n          } else {\n            reject('Error on updating entry ' + params.idCategory);\n          }\n        });\n      return true;\n    });\n  }\n}\n","export * from './api.service';\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '.';\nimport { Meta } from '../_models/formField';\nimport { AjaxService } from './ajax.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService extends AjaxService {\n  route = 'meta';\n  items = [];\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n\n  set(type: string, value: []): void {\n    this.items[type] = value;\n  }\n  has(type: string) {\n    return !!(this.items[type]);\n  }\n\n  get(...params: string[]): Promise<Meta> {\n    return new Promise<Meta>((resolve, reject) => {\n      this._post(this.route, { meta: params })\n        .subscribe((items: Meta) => {\n          resolve(items);\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Novel } from '../_models/novel';\nimport { AjaxService } from './ajax.service';\nimport { ApiService } from '.';\nimport { NgForm } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NovelsService extends AjaxService {\n  route = 'novel/';\n  items: Novel[] = [];\n  hasAll = false;\n  hasAllDictionaries = [];\n  pivots = []; // pivots[idDictionary] = idNovel[]\n\n  api: ApiService = null;\n  setApi(api: ApiService): void {\n    this.api = api;\n  }\n  set(items: Novel[], idDictionary?: number): void {\n    // Because there may be updates on a Novel, and the rule above, everytime idNovel is being sent\n    // I will erase the pivots so that they are done again, releasing the atached dictionaries too\n    if (idDictionary) {\n      this.pivots[idDictionary] = [];\n    }\n    for (const item of items) {\n      if (typeof item.dictionary !== 'undefined') {\n        this.api.Dictionary.set(item.dictionary, item.id);\n        delete(item.dictionary);\n      }\n      this.items[item.id] = item;\n      if (idDictionary) {\n        this.pivots[idDictionary].push(item.id);\n      }\n    }\n    // As mentioned on the first comment, this way, if getAll by Novel is used, it just gets from cache\n    if (idDictionary) {\n      this.hasAllDictionaries[idDictionary] = true;\n    }\n  }\n  has(params: { id: number }): boolean {\n    return !!(this.items[params.id]);\n  }\n\n  /**\n   * Basic CRUD stuff here\n   */\n  get(params: {id: number} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      if (this.items[params.id]) {\n        resolve(this.items[params.id]);\n      } else {\n        this._get(this.route + params.id)\n          .subscribe((item: Novel) => {\n            if (item) {\n              this.set([item]);\n              resolve(item);\n            } else {\n              reject('Invalid Novel ' + params.id);\n            }\n          });\n      }\n    });\n  }\n  getAll(params?: { idDictionary?: number, search?: string } ): Promise<Novel[]> {\n    return new Promise<Novel[]>((resolve, reject) => {\n      // If we are looking only for all Dictionaries on one Novel, we don't need all\n      const idDictionary = params && params.idDictionary ? params.idDictionary : null;\n      if (idDictionary && this.hasAllDictionaries[idDictionary]) {\n        resolve(this.getNovelPivots(idDictionary));\n      } else\n      if (this.hasAll && !idDictionary) {\n        resolve(this.items);\n      } else {\n        this._get(this.route + (idDictionary ? 'dictionary/' + idDictionary : ''))\n          .subscribe((items: Novel[]) => {\n            this.set(items, idDictionary);\n              // Here we also set the different paths\n            if (!idDictionary) {\n              this.hasAll = true;\n              resolve(this.items);\n            } else {\n              resolve(this.getNovelPivots(idDictionary));\n            }\n          });\n      }\n    });\n  }\n  add(params: { values: { novel: Novel, dictionaries?: number[] } } ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._post(this.route, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on inserting novel ' + params.values);\n          }\n        });\n    });\n  }\n  update(params: { id: number, values: {novel: Novel, dictionaries?: number[]}} ): Promise<Novel> {\n    return new Promise<Novel>((resolve, reject) => {\n      this._put(this.route + params.id, params.values)\n        .subscribe((item: Novel) => {\n          if (item) {\n            this.set([item]);\n            resolve(item);\n          } else {\n            reject('Error on updating novel ' + params.id);\n          }\n        });\n    });\n  }\n  delete(params: { id: number }): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this._delete(this.route + params.id)\n        .subscribe((item) => {\n          if (item) {\n            delete this.items[params.id];\n            resolve(true);\n          } else {\n            reject('Error on deleting novel ' + params.id);\n          }\n        });\n    });\n  }\n\n  getNovelPivots(idDictionary: number): Novel[] {\n    if (!this.pivots[idDictionary]) {\n      return [];\n    } else {\n      const arr = [];\n      for (const idNov of this.pivots[idDictionary]) {\n        arr.push(this.items[idNov]);\n      }\n      return arr;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovelModule } from './novel';\nimport { DictionaryModule } from './dictionary';\nimport { DashboardModule } from './dashboard';\n\nconst routes: Routes = [\n  {\n     path: 'dashboard'\n    , loadChildren: () => import('./dashboard').then(m => m.DashboardModule)\n    , data: { title: 'Dashboard', breadcrumb: 'Dashboard' }\n  },\n  {\n     path: 'novel'\n    , loadChildren: () => import('./novel').then(m => m.NovelModule)\n    , data: { title: 'List Novels', breadcrumb: 'Novels' }\n  },\n  {\n    path: 'dictionary'\n    , loadChildren: () => import('./dictionary').then(m => m.DictionaryModule)\n    , data: { title: 'List Dictionaries', breadcrumb: 'Dictionaries' }\n  },\n  {\n     path: '**'\n    , redirectTo: 'dashboard'\n  },\n];\n\n@NgModule({\n    imports: [\n    RouterModule.forRoot(\n       routes\n       , { enableTracing: false  }\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.scss',\n        './_services/modal/modal.component.scss',\n  ]\n})\nexport class AppComponent {\n    title = 'frontend';\n    base = environment.currentUrl;\n  constructor(\n    private router: Router\n  ) {\n    this.title = 'false';\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Papa } from 'ngx-papaparse';\n\nimport { HeaderComponent } from './header/header.component';\nimport { ModalComponent } from './_services/modal/modal.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    //Papa,    // Necessary for CSV\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule, \t// Necessary for API Services\n    FormsModule,\t\t// Necessary for Dynamic Forms\n    ReactiveFormsModule, // Necessary for Dynamic Forms\n        FontAwesomeModule,\t// Necessary for SVG\n        //Papa,    // Necessary for CSV\n    ],\n  exports: [\n    //Papa,    // Necessary for CSV\n  ],\n  providers: [\n        ModalComponent,\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Event as RouterEvent } from '@angular/router';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\nimport { ApiService } from '../api';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    public breadcrumbs: IBreadCrumb[];\n\n    constructor(\n          private router: Router\n        , private activatedRoute: ActivatedRoute\n        , private api: ApiService\n        ) {\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n        }\n\n    ngOnInit() {\n        this.router.events.pipe(\n            filter((event: RouterEvent) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe((next) => {\n            console.log('ROUTER', next, this.activatedRoute.root);\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n            this.renameLabels();\n            console.log('ROUTER END');\n        });\n  }\n\n    buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[] {\n        // If no routeConfig is avalailable we are on the root path\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        if (path === 'dashboard' ) {\n            return [];\n        }\n\n        // If the route is dynamic route such as ':id', remove it\n        // Nota that here, the id appears before the actions, thus, using \"shift\" instead of \"pop\"\n        const lastRoutePart = path.split('/').shift();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n        let type = null;\n        if (isDynamicRoute && !!route.snapshot) {\n            const paramName = lastRoutePart.split(':')[1];\n            path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n            label = route.snapshot.params[paramName]; // '_' + paramName + ':' + route.snapshot.params[paramName];\n            type = paramName;\n        }\n\n        // In the routeConfig the complete path is not available,\n        // so we rebuild it each time\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const breadcrumb: IBreadCrumb = {\n            label,\n            url: nextUrl,\n            type\n        };\n        // Only adding route with non-empty label\n        const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [...breadcrumbs];\n        if (route.firstChild) {\n            // If we are not on our current path yet,\n            // there will be more children to look after, to build our breadcumb\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n        return newBreadcrumbs;\n    }\n\n    private renameLabels() {\n        const rememberVariables = {\n            idNovel: null,\n            idDictionary: null,\n            idCategory: null,\n            noChapter: null\n        };\n        console.log('header calls');\n        this.breadcrumbs.forEach(el => {\n            if (el.type) {\n                rememberVariables[el.type] = parseInt(el.label, 10);\n                el.label = '';\n                switch (el.type) {\n                    case 'idNovel':\n                        this.api.Novel.get({ id: rememberVariables.idNovel})\n                            .then(novel => {\n                                el.label = 'Chapters: ' + novel.nameCustom;\n                            });\n                        break;\n                    case 'idDictionary':\n                        this.api.Dictionary.get({ id: rememberVariables.idDictionary })\n                            .then(dictionary => {\n                                el.label = 'Cat: ' + dictionary.name;\n                            });\n                        break;\n                    case 'idCategory':\n                        this.api.Category.get({ idDictionary: rememberVariables.idDictionary, id: rememberVariables.idCategory })\n                            .then(category => {\n                                el.label = 'Entries: ' + category.name;\n                            });\n                        break;\n                    case 'noChapter':\n                        this.api.Chapter.get({ idNovel: rememberVariables.idNovel, no: rememberVariables.noChapter })\n                            .then(chapter => {\n                                el.label = 'Chapter: ' + chapter.title;\n                            });\n                        break;\n                }\n            }\n        });\n        console.log('header calls end');\n    }\n}\n","<header>\n\t<img src=\"assets/mtl_tools.png\" class='appName'  routerLink=\"/\" />\n\t<ul>\n        <li routerLink=\"/dashboard\" routerLinkActive=\"router-link-active\">\n            <a>Dashboard</a>\n        </li>\n        <ng-container  *ngFor=\"let breadcrumb of breadcrumbs\">\n            <li [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n                <a>/ {{ breadcrumb.label }}</a>\n            </li>\n        </ng-container>\n\t</ul>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    currentUrl: 'http://api.mtltools.docker:800',\n    backendServer: 'http://api.mtltools.docker:800',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}