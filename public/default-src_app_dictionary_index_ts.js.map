{"version":3,"file":"default-src_app_dictionary_index_ts.js","mappings":"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","sources":["./src/app/api.service.ts","./src/app/dictionary/add/add.component.ts","./src/app/_views/form/form.component.html","./src/app/dictionary/dictionary-routing.module.ts","./src/app/dictionary/dictionary.module.ts","./src/app/dictionary/diff/diff.component.ts","./src/app/dictionary/diff/diff.component.html","./src/app/dictionary/edit/edit.component.ts","./src/app/dictionary/form.service.ts","./src/app/dictionary/index.ts","./src/app/dictionary/list/list.component.ts","./src/app/dictionary/list/list.component.html"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { Observable, of, throwError, VirtualTimeScheduler } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { CacheService } from './cache.service';\n\nimport { Chapter } from './_models/chapter';\nimport { Novel } from './_models/novel';\nimport { Dictionary } from './_models/dictionary';\nimport { DictionaryCategory } from './_models/dictionarycategory';\nimport { DictionaryEntry } from './_models/dictionaryentry';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst apiUrl = environment.backendServer + '/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient,\n    private cacheService: CacheService\n  ) { }\n\n\n\n\n\n  _novels: object = {};\n\n\n\n\n\n\n\n  _chapters: object = {};\n  /*\n\t\tupdateChapter(idNovel,noChapter,chapter): Observable<any> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n\t\t\treturn this.http.put<Chapter>(url, chapter, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap((chapter: Chapter) => console.log(`Updated Chapter id=${chapter.no}`))\n\t\t\t\t\t,catchError(this.handleError<Chapter>('updateChapter'))\n\t\t\t\t);\n\t\t}\n\n\t\tdeleteChapter(idNovel,noChapter): Observable<Chapter> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n\n\t\t\treturn this.http.delete<Chapter>(url, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap(_ => console.log(`Deleted Chapter id=${noChapter}`))\n\t\t\t\t\t,catchError(this.handleError<Chapter>('deleteChapter'))\n\t\t\t\t);\n\t\t}\n\t*/\n\n\n\n\n\n\n  _dictionaries: object = {};\n\n  _categories: object = {};\n\n  _entries: object = {};\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  Novels(): object {\n    return this._novels;\n  }\n  Novel(id: number): Novel {\n    if (this._novels[id]) {\n      return this._novels[id];\n    } else {\n      return null;\n    }\n  }\n  getNovels(): Observable<{}> {\n    const url = `${apiUrl}novel`;\n\n    return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(novels => {\n               console.log('Fetched Novels');\n\n              for (const i in novels) {\n                this._novels[ novels[i].id ] = novels[i];\n              }\n             })\n            , catchError(this.handleError('getNovels', []))\n      )\n    );\n  }\n\n  addNovel(novel): Observable<Novel> {\n    const url = `${apiUrl}novel/`;\n    return this.http.post<Novel>(url, novel, httpOptions)\n      .pipe(\n         tap((novel: Novel) => {\n           console.log(`Registered Novel id=${novel.id}`);\n           this._novels[ novel.id ] = novel;\n         })\n        , catchError(this.handleError<Novel>('addNovel'))\n      );\n  }\n\n  getNovel(id: number): Observable<Novel> {\n    const url = `${apiUrl}novel/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<Novel>(url)\n          .pipe(\n             tap(novel => {\n               console.log(`Fetched Novel id=${id}`);\n               this._novels[ novel.id ] = novel;\n             })\n            , catchError(this.handleError<Novel>(`getNovel id=${id}`))\n          )\n    );\n  }\n\n  updateNovel(id, novel): Observable<any> {\n    const url = `${apiUrl}novel/${id}`;\n    return this.http.put<Novel>(url, novel, httpOptions)\n      .pipe(\n         tap((novel: Novel) => {\n           console.log(`Updated Novel id=${novel.id}`);\n           this._novels[ novel.id ] = novel;\n         })\n        , catchError(this.handleError<Novel>('updateNovel'))\n      );\n  }\n\n  deleteNovel(id): Observable<Novel> {\n    const url = `${apiUrl}novel/${id}`;\n\n    return this.http.delete<Novel>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Novel id=${id}`);\n           delete this._novels[id];\n         })\n        , catchError(this.handleError<Novel>('deleteNovel'))\n      );\n    }\n\n    updateIndexNovel(id): Observable<Novel> {\n        const url = `${apiUrl}chapter/autoUpdate/${id}`;\n        return this.http.get<Novel>(url)\n            .pipe(\n                tap((novel: Novel) => {\n                    console.log(`Updated All Chapters id=${novel.id}`);\n                    this._novels[novel.id] = novel;\n\n                    this.cacheService.delete(`${apiUrl}chapter/${novel.id}`);\n                    if (this._chapters[novel.id]) {\n                        delete this._chapters[novel.id];\n                    }\n                })\n                , catchError(this.handleError<Novel>('updateIndexNovel'))\n            );\n    }\n\n  Chapters(idNovel): object {\n    if (this._chapters[idNovel]) {\n      return this._chapters[idNovel];\n    } else {\n      return [];\n    }\n  }\n  Chapter(idNovel, noChapter: number): Chapter {\n    if (this._chapters[idNovel]) {\n      if (this._chapters[idNovel][noChapter]) {\n        return this._chapters[idNovel][noChapter];\n      }\n    }\n    return null;\n    }\n    getChapters(idNovel, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}chapter/${idNovel}`;\n        if (force) { this.cacheService.delete(url); }\n\n        return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(chapters => {\n               console.log('Fetched chapters');\n               if (chapters && chapters[0]) {\n                 if (!this._chapters[ idNovel ]) {\n                   this._chapters[ idNovel ] = {};\n                  }\n\n                for (const i in chapters) {\n                  // No need to rewrite entries with filled chapters\n                  if (this._chapters[ idNovel ][ chapters[i].no ]) {\n                    if (this._chapters[ idNovel ][ chapters[i].no ].textOriginal) {\n                                            if (this._chapters[idNovel][chapters[i].no].dateOriginalRevision == chapters[i].dateOriginalRevision) {\n                                                continue;\n                                            }\n                                        }\n                                    }\n                  this._chapters[ idNovel ][ chapters[i].no ] = chapters[i];\n                }\n               }\n             })\n            , catchError(this.handleError('getchapters', []))\n      )\n    );\n  }\n  /*\n\t\taddChapter(idNovel,chapter): Observable<Chapter> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}`;\n\t\t\treturn this.http.post<Chapter>(url, chapter, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap((chapter: Chapter) => {\n\t\t\t\t\t \tconsole.log(`Registered Chapter id=${chapter.no}`);\n\t\t\t\t \t\tif(!this._chapters[ idNovel ])\n\t\t\t\t \t\t\tthis._chapters[ idNovel ] = {};\n\t\t\t\t\t \tthis._chapters[ idNovel ][ chapter.no ] = chapter;\n\t\t\t\t\t })\n\t\t\t\t\t,catchError(this.handleError<Chapter>('addChapter'))\n\t\t\t\t);\n\t\t}\n\t*/\n  getAutoChapter(idNovel): Observable<any> {\n    const url = `${apiUrl}chapter/auto/${idNovel}`;\n    return this.http.get(url)\n      .pipe(\n         tap((pack: any) => {\n           this._novels[ idNovel ] = pack.novel;\n\n           if (!this._chapters[ idNovel ]) {\n             this._chapters[ idNovel ] = {};\n            }\n           this._chapters[ idNovel ][ pack.chapter.no ] = pack.chapter;\n         })\n        , catchError(this.handleError<Chapter>('addChapter'))\n      );\n  }\n    autoUpdateChapters(idNovel): Observable<any> {\n        const url = `${apiUrl}chapter/autoUpdate/${idNovel}`;\n        return this.http.get(url)\n            .pipe(\n                tap((novel: Novel) => {\n                    this._novels[idNovel] = novel;\n                })\n                , catchError(this.handleError<Chapter>('addChapter'))\n            );\n    }\n  getChapter(idNovel, noChapter: number): Observable<Chapter> {\n    const url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n    return this.http.get<Chapter>(url)\n      .pipe(\n         tap((chapter: Chapter) => {\n           console.log(`Fetched Chapter id=${chapter.no}`);\n           if (!this._chapters[ idNovel ]) {\n             this._chapters[ idNovel ] = {};\n            }\n           this._chapters[ idNovel ][ chapter.no ] = chapter;\n         })\n        , catchError(this.handleError<Chapter>(`getChapter id=${noChapter}`))\n      );\n  }\n\n  Dictionaries(): object {\n    if (this._dictionaries) {\n      return this._dictionaries;\n    } else {\n      return [];\n    }\n  }\n  Dictionary(language: number): Dictionary {\n    if (this._dictionaries) {\n      if (this._dictionaries[language]) {\n        return this._dictionaries[language];\n      }\n    }\n    return null;\n  }\n  getDictionaries(): Observable<{}> {\n    const url = `${apiUrl}dictionary/`;\n\n    return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(dictionaries => {\n               console.log('Fetched Dictionaries');\n               if (dictionaries && dictionaries[0]) {\n                 this._dictionaries = {};\n\n                for (const i in dictionaries) {\n                  this._dictionaries[ dictionaries[i].id ] = dictionaries[i];\n                }\n               }\n             })\n            , catchError(this.handleError('getDictionaries', []))\n      )\n    );\n  }\n\n  getDictionary(id: number): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<Dictionary>(url)\n          .pipe(\n             tap(dictionary => {\n               console.log(`Fetched Dictionary id=${id}`);\n               console.log(dictionary);\n               if (!this._dictionaries) {\n                 this._dictionaries = {};\n                }\n               this._dictionaries[ dictionary.id ] = dictionary;\n             })\n            , catchError(this.handleError<Dictionary>(`getDictionary id=${id}`))\n          )\n    );\n  }\n\n  addDictionary(dictionary): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/`;\n    return this.http.post<Dictionary>(url, dictionary, httpOptions)\n      .pipe(\n         tap((dictionary: Dictionary) => {\n           console.log(`Registered Dictionary id=${dictionary.id}`);\n           if (!this._dictionaries) {\n             this._dictionaries = {};\n            }\n           this._dictionaries[ dictionary.id ] = dictionary;\n         })\n        , catchError(this.handleError<Dictionary>('addDictionary'))\n      );\n  }\n\n  updateDictionary(id: number, dictionary): Observable<any> {\n    const url = `${apiUrl}dictionary/${id}`;\n    return this.http.put<Dictionary>(url, dictionary, httpOptions)\n      .pipe(\n         tap((dictionary: Dictionary) => {\n           console.log(`Updated Dictionary id=${dictionary.id}`);\n           if (!this._dictionaries) {\n                         this._dictionaries = {};\n            }\n           console.log(this._dictionaries[dictionary.id]);\n                    for (const i in dictionary) {\n                        console.log(i);\n                        this._dictionaries[ dictionary.id ][i] = dictionary[i];\n                    }\n         })\n        , catchError(this.handleError<Dictionary>('updateDictionary'))\n      );\n  }\n\n  deleteDictionary(id): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/${id}`;\n\n    return this.http.delete<Dictionary>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Dictionary id=${id}`);\n           delete this._dictionaries[id];\n         })\n        , catchError(this.handleError<Dictionary>('deleteNovel'))\n      );\n    }\n\n    dictionaryCreateCache(idDictionary: number): Observable<any> {\n        const url = `${apiUrl}cache/dictionary/${idDictionary}`;\n\n        return this.http.put<any>(url, httpOptions)\n            .pipe(\n                tap(_ => {\n                    console.log(`Cached Dictionary id=${idDictionary}`);\n                    console.log(_);\n                })\n                , catchError(this.handleError<Dictionary>('deleteNovel'))\n            );\n    }\n  setDictionaries(dictionaries: Dictionary[]): void {\n    if (!this._dictionaries) {\n      this._dictionaries = {};\n    }\n    const self = this;\n    dictionaries.forEach((dictionary) => {\n      self._dictionaries[dictionary.id] = dictionary;\n    });\n  }\n    dictionaryCache(idDictionary: number): Observable<{}> {\n        const url = `${apiUrl}cache/dictionary/${idDictionary}?${this._dictionaries[idDictionary].dateRevision}`;\n\n        return this.cacheService.get(\n            url,\n            this.http.get<any>(url)\n                .pipe(\n                    tap(cache => {\n                        console.log('Fetched Cache');\n\n                        if (cache.length == 1) {\n                            cache = cache[0];\n                            if (cache.dictionary_entry.length > 0) {\n                                cache.dictionary_entry.forEach(entry => {\n                                    if (!this._entries[entry.idCategory]) {\n                                        this._entries[entry.idCategory] = [];\n                                    }\n                                    this._entries[entry.idCategory][entry.id] = entry;\n                                });\n                            }\n                            if (cache.dictionary_category.length > 0) {\n                                if (!this._categories[idDictionary]) {\n                                    this._categories[idDictionary] = [];\n                                }\n                                cache.dictionary_category.forEach(category => {\n                                    if (!this._categories[category.idDictionary][category.id]) {\n                                        this._categories[category.idDictionary][category.id] = {};\n                                    }\n                                    for (const i in category) {\n                                        this._categories[category.idDictionary][category.id][i] = category[i];\n                                    }\n                                    this._categories[category.idDictionary][category.id].count_entries = [];\n                                    this._categories[category.idDictionary][category.id].count_entries[0] = {};\n                                    this._categories[category.idDictionary][category.id].count_entries[0].count = this._entries[category.id] ?\n                                                                                                                    Object.keys(this._entries[category.id]).length\n                                                                                                                    : 0;\n                                });\n                            }\n                        }\n                    })\n                    , catchError(this.handleError('getCategory', []))\n                )\n        );\n    }\n    saveFullDictionary(idDictionary: number, dictionary: any): Observable<any> {\n        const url = `${apiUrl}dictionary/fullSave/${idDictionary}`;\n        return this.http.put<any>(url, dictionary, httpOptions)\n            .pipe(\n                tap(res => {\n                    if (res.changes) {\n                        this._dictionaries[idDictionary].dateRevision = res.dateRevision;\n                        this.cacheService.delete(`${apiUrl}dictionary/cache/${idDictionary}?${this._dictionaries[idDictionary].dateRevision}`);\n                    }\n                })\n                , catchError(this.handleError<any>('getCategory'))\n            );\n    }\n\n\n\n\n    updateCounterCategory(no: any, idDictionary: number): void {\n        switch (no) {\n            case '+':\n                ++this._dictionaries[idDictionary].count_categories[0].count;\n                break;\n            case '-':\n                --this._dictionaries[idDictionary].count_categories[0].count;\n                break;\n            default:\n                this._dictionaries[idDictionary].count_categories[0].count = no;\n        }\n    }\n\n  Categories(idDictionary): object {\n    if (this._categories[idDictionary]) {\n      return this._categories[idDictionary];\n    } else {\n      return [];\n    }\n  }\n  Category(idDictionary, id: number): DictionaryCategory {\n    if (this._categories[idDictionary]) {\n      if (this._categories[idDictionary][id]) {\n        return this._categories[idDictionary][id];\n      }\n    }\n    return null;\n    }\n  getCategories(idDictionary, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}category/${idDictionary}`;\n        if (force) { this.cacheService.delete(url); }\n\n        return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(categories => {\n               console.log('Fetched Category');\n               if (categories && categories[0]) {\n                 this._categories[ idDictionary ] = {};\n\n                 let counter = 0;\n                for (const i in categories) {\n          ++counter;\n          this._categories[ idDictionary ][ categories[i].id ] = categories[i];\n        }\n                 this.updateCounterCategory(counter, idDictionary);\n               }\n             })\n            , catchError(this.handleError('getCategory', []))\n      )\n    );\n  }\n\n    getCategory(idDictionary: number, id: number): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<DictionaryCategory>(url)\n          .pipe(\n             tap(categories => {\n               console.log(`Fetched Category id=${id}`);\n               console.log(categories);\n               if (!this._categories[ categories.idDictionary ]) {\n                 this._categories[ categories.idDictionary ] = {};\n                }\n               this._categories[ categories.idDictionary ][ categories.id ] = categories;\n             })\n            , catchError(this.handleError<DictionaryCategory>(`getCategory id=${id}`))\n          )\n    );\n  }\n\n  addCategory(idDictionary: number, category): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}`;\n    return this.http.post<DictionaryCategory>(url, category, httpOptions)\n      .pipe(\n         tap((category: DictionaryCategory) => {\n           console.log(`Registered Category id=${category.id}`);\n           if (!this._categories[ category.idDictionary ]) {\n             this._categories[ category.idDictionary ] = {};\n            }\n           this._categories[category.idDictionary][category.id] = category;\n           this.updateCounterCategory('+', idDictionary);\n         })\n        , catchError(this.handleError<DictionaryCategory>('addCategory'))\n      );\n  }\n\n    updateCategory(idDictionary: number, id: number, category): Observable<any> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n    return this.http.put<DictionaryCategory>(url, category, httpOptions)\n      .pipe(\n         tap((category: DictionaryCategory) => {\n           console.log(`Updated Category id=${category.id}`);\n           if (!this._categories[ category.idDictionary ]) {\n             this._categories[ category.idDictionary ] = {};\n            }\n           this._categories[ category.idDictionary ][ category.id ] = category;\n         })\n        , catchError(this.handleError<DictionaryCategory>('updateCategory'))\n      );\n  }\n\n  deleteCategory(idDictionary: number, id): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n\n    return this.http.delete<DictionaryCategory>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Category id=${id}`);\n           delete this._categories[idDictionary][id];\n           this.updateCounterCategory('-', idDictionary);\n         })\n        , catchError(this.handleError<DictionaryCategory>('deleteNovel'))\n      );\n  }\n\n\n\n\n\n    updateCounterEntry(no: any, idDictionary: number, idCategory: number): void {\n        if (this._categories[idDictionary][idCategory].count_entries) {\n            switch (no) {\n                case '+':\n                    ++this._categories[ idDictionary ][ idCategory ].count_entries[0].count;\n                    break;\n                case '-':\n                    --this._categories[ idDictionary ][ idCategory ].count_entries[0].count;\n                    break;\n                default:\n                    if (this._categories[idDictionary][idCategory].count_entries) {\n                        this._categories[idDictionary][idCategory].count_entries = [];\n                    }\n                    this._categories[ idDictionary ][ idCategory ].count_entries[0].count = no;\n            }\n        }\n    }\n\n  Entries(idCategory): object {\n    if (this._entries[idCategory]) {\n      return this._entries[idCategory];\n    } else {\n      return [];\n    }\n  }\n  Entry(idCategory, id: number): DictionaryEntry {\n    if (this._entries[idCategory]) {\n      if (this._entries[idCategory][id]) {\n        return this._entries[idCategory][id];\n      }\n    }\n    return null;\n  }\n    getEntries(idDictionary: number, idCategory, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}entry/${idCategory}`;\n        return this.http.get<DictionaryEntry[]>(url)\n                .pipe(\n                        tap(entries => {\n                        console.log('Fetched Entries');\n                        if (entries && entries[0]) {\n                            this._entries[ idCategory ] = {};\n\n                            for (const i in entries) {\n                                this._entries[ idCategory ][ entries[i].id ] = entries[i];\n                            }\n                            }\n                        if (force) {\n                            this.updateCounterEntry(entries.length, idDictionary, idCategory);\n                            }\n\n                        })\n                    , catchError(this.handleError('getCategory', []))\n        );\n  }\n\n    addEntries(idDictionary: number, idCategory: number, entries): Observable<any> {\n        const url = `${apiUrl}entry/updatecategory/${idCategory}`;\n        return this.http.post<DictionaryEntry>(url, entries, httpOptions)\n      .pipe(\n         tap(_ => {\n                    // this.getEntries(idDictionary, idCategory, true);\n                 })\n        , catchError(this.handleError<DictionaryEntry>('addCategory'))\n      );\n  }\n\n  updateEntry(idCategory: number, id: number, category): Observable<any> {\n    const url = `${apiUrl}entry/${idCategory}/${id}`;\n    return this.http.put<DictionaryEntry>(url, category, httpOptions)\n      .pipe(\n         tap((entry: DictionaryEntry) => {\n           console.log(`Updated entry id=${entry.id}`);\n           if (!this._entries[ entry.idCategory ]) {\n                            this._entries[entry.idCategory ] = {};\n            }\n           this._entries[entry.idCategory][entry.id] = entry;\n         })\n        , catchError(this.handleError<DictionaryEntry>('updateCategory'))\n      );\n  }\n\n  deleteEntry(idCategory: number, id): Observable<DictionaryEntry> {\n    const url = `${apiUrl}entry/${idCategory}/${id}`;\n\n    return this.http.delete<DictionaryEntry>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Category id=${id}`);\n           delete this._entries[idCategory][id];\n         })\n        , catchError(this.handleError<DictionaryEntry>('deleteNovel'))\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Dictionary } from '../../_models/dictionary';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\nimport { Novel } from 'src/app/_models';\n\n@Component({\n  selector: 'app-dictionary-add',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class AddComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n  idNovel: number;\n  dictionary: Dictionary;\n  novels: Novel[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.formTitle = 'Edit Dictionary';\n\n    Promise.all([\n      this.api.Meta.get('languages'),\n      this.api.Dictionary.get({ id: this.idDictionary }),\n      this.api.Novel.getAll(),\n    ]).then((values: [Meta, Dictionary, Novel[]]) => {\n        this.dictionary = values[1];\n        this.novels = values[2];\n        this.loadMeta(values[0], values[2]);\n        if (this.idNovel) {\n          this.api.Novel.get({id: this.idNovel})\n              .then(novel => {\n                this.setValues(null, [novel]);\n              });\n        }\n        this.getForm(true);\n    });\n  }\n\n\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.novels);\n    this.api.Dictionary.add({ values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  LINK(idDictionary?: number, action?: string) {\n    const base = [];\n    if (this.idNovel) {\n      base.push('novel');\n      base.push(this.idNovel);\n    }\n    base.push('dictionary');\n    if (action) {\n      base.push(action);\n    }\n    if (idDictionary) {\n      base.push(idDictionary);\n    }\n    this.router.navigate(base);\n  }\n\n  goBack() {\n    this.LINK();\n  }\n}\n","<div class=\"form-content\">\n    <h1 class=\"title\">{{ formTitle }}</h1>\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm(formGroup.value)\">\n        <div *ngFor=\"let field of form\" class='field'>\n\n            <ng-container [ngSwitch]=\"field.type\">\n\n                <ng-container #tempHidden *ngSwitchCase=\"'hidden'\">\n                    <input type=\"hidden\" formControlName=\"{{ field.name }}\">\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'checkbox'\">\n                    <label class='checkbox'>\n                        <input type=\"checkbox\" formControlName=\"{{ field.name }}\">\n                        {{ field.label }}\n                    </label>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'select'\">\n                    <label>{{ field.label }}</label>\n                    <div class=\"control\">\n                        <select formControlName=\"{{ field.name }}\">\n                            <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                        </select>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'multiselect'\">\n                    <label>{{ field.label }} - {{ field.name }}</label>\n                    <div class=\"control\">\n                        <!--p *ngFor=\"let option of field.options; let i = index\"-->\n                        <p *ngFor=\"let option of field.options; let i = index\">\n                            <label>\n                                <!--<input type=\"checkbox\" value=\"{{option.value}}\" (change)=\"option.setChecked(!this.checked);\" [checked]=\"option.checked\" />-->\n                                <!--{{option.label}}-->\n                                <input type=\"checkbox\" [formControl]=\"option.control\" /> {{ option.label}}\n                            </label>\n                            <!--select multiple='multiple' formControlName=\"{{ field.name }}\" (change)=\"onDebug(this.value)\">\n                                <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                            </select-->\n                        </p>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempText *ngSwitchDefault>\n                    <label class='label' for=\"{{ field.name }}\">{{ field.label }}</label>\n                    <div class=\"control\">\n                        <input type=\"{{ field.type }}\" id=\"{{ field.name }}\" formControlName=\"{{ field.name }}\" class=\"input\">\n                    </div>\n                    <!--p class=\"help is-success\"></p-->\n                    <!--p class=\"help is-danger\"></p-->\n                </ng-container>\n\n            </ng-container>\n        </div>\n\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <input type=\"submit\" class=\"button is-link\" value=\"Submit\" />\n            </div>\n            <div class=\"control\">\n                <input (click)=\"goBack()\" class=\"button is-danger\" value=\"Cancel\" />\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoryModule } from '../category';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DiffComponent } from './diff/diff.component';\n\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Dictionaries' }\n  },\n  {\n     path: 'add'\n    , component: AddComponent\n    , data: { title: 'Add Dictionaries', breadcrumb: 'Add Dictionary' }\n  },\n  {\n    path: 'edit/:idDictionary'\n    , component: EditComponent\n    , data: { title: 'Edit Dictionary', breadcrumb: 'Edit Dictionary' }\n  },\n  {\n    path: 'diff/:idDictionary'\n        , component: DiffComponent\n    , data: { title: 'Diff Dictionary', breadcrumb: 'Diff' }\n  },\n  {\n     path: ':idDictionary'\n        , loadChildren: () => import('../category').then(m => m.CategoryModule)\n    , data: { title: 'View categories', breadcrumb: 'View Categories' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(\n      routes\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class DictionaryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DictionaryRoutingModule } from './dictionary-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DiffComponent } from './diff/diff.component';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\n@NgModule({\n  declarations: [ListComponent, AddComponent, EditComponent, DiffComponent, ],\n  imports: [\n    CommonModule,\n    DictionaryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class DictionaryModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Dictionary } from 'src/app/_models/dictionary';\nimport { DictionaryCategory } from 'src/app/_models/dictionarycategory';\nimport { ApiService } from 'src/app/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DictionaryEntry } from 'src/app/_models/dictionaryentry';\n\n@Component({\n  selector: 'app-diff',\n  templateUrl: './diff.component.html',\n  styleUrls: ['./diff.component.scss']\n})\nexport class DiffComponent implements OnInit, OnDestroy {\n\n    dictionaries: Dictionary[] = [];\n\n    categories: DictionaryCategory[] = [];\n    categoriesHash: {} = {};\n    entries: DictionaryEntry[] = [];\n    idDictionary: number;\n    entriesOriginalValues: {} = {};\n\n    entry2SelectHash: {} = {};\n    entry2SelectHashKeys: string[] = [];\n\n    categoriesSelected: DictionaryCategory[] = [];\n    categoriesSelectedHash: {} = {};\n    entriesSelected: DictionaryEntry[] = [];\n    idDictionarySelected: number;\n\n    idNovel: number;\n\n    constructor(\n          private api: ApiService\n        , private route: ActivatedRoute\n        , private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.idNovel = this.route.snapshot.params.idNovel;\n        this.idDictionary = this.route.snapshot.params.idDictionary;\n        this.dictionaries = Object.values(this.api.Dictionaries());\n\n        if (this.dictionaries.length == 0) {\n            this.api.getDictionaries()\n                .subscribe(res => {\n                    const dictionaries = this.api.Dictionaries();\n                    if (dictionaries) {\n                        this.dictionaries = Object.values(dictionaries);\n                    }\n                    this.getCache();\n\n                }, err => {\n                    console.log(err);\n                });\n        } else {\n            this.getCache();\n        }\n    }\n    ngOnDestroy(): void {\n        delete this.dictionaries;\n        delete this.categories;\n        delete this.categoriesHash;\n        delete this.entries;\n        delete this.idDictionary;\n\n        delete this.entry2SelectHash;\n        delete this.entry2SelectHashKeys;\n\n        delete this.categoriesSelected;\n        delete this.categoriesSelectedHash;\n        delete this.entriesSelected;\n        delete this.idDictionarySelected;\n    }\n    loadSelectedDictionary() {\n        this.getSelectedCache();\n    }\n    changeEntry(entry) {\n        if (entry.id > 0) {\n            console.log(entry.id);\n            console.log(entry.idCategory);\n            entry.update =\n                    entry.entryOriginal != this.entriesOriginalValues[entry.id].entryOriginal\n                || entry.entryTranslation != this.entriesOriginalValues[entry.id].entryTranslation\n                || (!!entry.description && (entry.description != this.entriesOriginalValues[entry.id].description))\n                || entry.idCategory != this.entriesOriginalValues[entry.id].idCategory\n                ;\n            console.log(entry);\n        }\n    }\n    addEntry($event, i) {\n        const idCategory = $event.target.value,\n            selectedValues = this.entry2SelectHash[this.entry2SelectHashKeys[i]],\n            selectedEntry = this.entriesSelected[selectedValues.selected],\n            newEntry = new DictionaryEntry();\n\n        newEntry.id = 0;\n        newEntry.idCategory = idCategory;\n        newEntry.entryOriginal = selectedEntry.entryOriginal;\n        newEntry.entryTranslation = selectedEntry.entryTranslation;\n        newEntry.description = selectedEntry.description;\n\n        selectedValues.entry = this.entries.length;\n        this.entries.push(newEntry);\n    }\n    saveList() {\n        const tmpEntries = {},\n            send = [];\n\n        this.categories.forEach(category => {\n            send.push(category);\n            tmpEntries[category.id] = [];\n        });\n        this.entries.forEach(entry => {\n            tmpEntries[entry.idCategory].push(entry);\n        });\n        send.forEach(sen => {\n            sen.entries = tmpEntries[sen.id];\n        });\n\n        this.api.saveFullDictionary(this.idDictionary, send)\n            .subscribe(res => {\n                if (res.changes) {\n                    this.dictionaries = Object.values(this.api.Dictionaries());\n                    this.categories = [];\n                    this.router.navigate(['/novel/dictionary/', ]);\n                }\n                console.log(res);\n            }, err => {\n                console.log(err);\n            });\n    }\n    private getCache() {\n        if (this.categories.length == 0) {\n            this.api.dictionaryCache(this.idDictionary)\n                .subscribe(res => {\n                    this.categories = [];\n                    this.entries = [];\n\n                    this.categories = Object.values(this.api.Categories(this.idDictionary));\n                    this.categories.forEach(category => {\n                        this.categoriesHash[category.id] = {\n                            name: category.name\n                        };\n                        const entries = this.api.Entries(category.id);\n                        for (const i in entries) {\n                            this.entry2SelectHash[entries[i].entryOriginal] = {\n                                entry : this.entries.length,\n                                selected : null\n                            };\n                            this.entries.push(entries[i]);\n                            this.entriesOriginalValues[entries[i].id] = {\n                                  entryOriginal: '' + entries[i].entryOriginal\n                                , entryTranslation: '' + entries[i].entryTranslation\n                                , description: '' + entries[i].description\n                                , idCategory: '' + entries[i].idCategory\n                            };\n                        }\n                    });\n                    this.entry2SelectHashKeys = Object.keys(this.entry2SelectHash);\n                }, err => {\n                    console.log(err);\n                });\n        }\n    }\n    getSelectedCache() {\n        this.api.dictionaryCache(this.idDictionarySelected)\n            .subscribe(res => {\n                this.categoriesSelected = [];\n                this.entriesSelected = [];\n\n                this.categoriesSelected = Object.values(this.api.Categories(this.idDictionarySelected));\n                this.categoriesSelected.forEach(category => {\n                    this.categoriesSelectedHash[category.id] = {\n                        name: category.name\n                    };\n                    const entries = this.api.Entries(category.id);\n                    for (const i in entries) {\n\n                        if (!this.entry2SelectHash[entries[i].entryOriginal]) {\n                            this.entry2SelectHash[entries[i].entryOriginal] = {\n                                entry: null,\n                                selected: this.entriesSelected.length\n                            };\n                        } else {\n                            this.entry2SelectHash[entries[i].entryOriginal].selected = this.entriesSelected.length;\n                        }\n                        this.entriesSelected.push(entries[i]);\n                    }\n                });\n                this.entry2SelectHashKeys = Object.keys(this.entry2SelectHash);\n            }, err => {\n                console.log(err);\n            });\n    }\n\n}\n","\n<ng-template #actionButtons>\n    <div class=\"columns actionButtons\">\n        <div class=\"column\">\n            <a class=\"button is-info\" (click)=\"saveList()\">Save List</a>\n        </div>\n    </div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n\n<div>\n    <table class='table is-stripede is-fullwidth tableContent'>\n        <thead>\n            <tr>\n                <th colspan=\"4\">\n                    <select [(ngModel)]=\"idDictionarySelected\" (change)=\"loadSelectedDictionary();\">\n                        <option value=\"\" selected='selected'>Select a Dictionary</option>\n                        <option *ngFor=\"let dictionary of dictionaries\" value=\"{{ dictionary.id }}\">{{ dictionary.language }}</option>\n                    </select>\n                </th>\n            </tr>\n            <tr>\n                <th>Original</th>\n                <th>Translated</th>\n                <th>Description</th>\n                <th>Category</th>\n                <th>|</th>\n                <th>Category</th>\n                <th>Original</th>\n                <th>Translated</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody class=\"tableContent\">\n            <ng-container *ngFor=\"let entry2select of entry2SelectHashKeys; let i = index\">\n                <tr [ngClass]=\"{\n                            'new': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].id == 0,\n                            'deleted': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].delete == true,\n                            'changed': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].update == true }\" >\n                    <ng-container *ngIf=\"entry2SelectHash[entry2select] && entry2SelectHash[entry2select].selected; else selectedEmpty\">\n                        <td>\n                            {{ categoriesSelectedHash [entriesSelected[ entry2SelectHash[entry2select].selected ].idCategory].name }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].entryTranslation }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].entryOriginal }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].description }}\n                        </td>\n                    </ng-container>\n\n                    <ng-template #selectedEmpty>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                    </ng-template>\n\n                    <td>|</td>\n\n                    <ng-container *ngIf=\"entry2SelectHash[entry2select] && entry2SelectHash[entry2select].entry != null; else nonAnEntry\">\n                        <td>\n                            <select [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].idCategory\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\">\n                                <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{ category.name }}</option>\n                            </select>\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].entryTranslation\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].entryOriginal\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].description\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                    </ng-container>\n\n                    <ng-template #nonAnEntry>\n                        <td>\n                            <select (change)=\"addEntry($event,i);\">\n                                <option value=\"\">Select a category to copy</option>\n                                <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{ category.name }}</option>\n                            </select>\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                    </ng-template>\n                </tr>\n            </ng-container>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel, Dictionary } from 'src/app/_models';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-dictionary-edit',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class EditComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n  idNovel: number;\n  dictionary: Dictionary;\n  novels: Novel[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.formTitle = 'Edit Dictionary';\n\n    Promise.all([\n      this.api.Meta.get('languages'),\n      this.api.Dictionary.get({ id: this.idDictionary }),\n      this.api.Novel.getAll(),\n    ]).then((values: [Meta, Dictionary, Novel[]]) => {\n\n      this.api.Novel.getAll({ idDictionary: this.idDictionary })\n          .then((selectedNovels: Novel[]) => {\n            console.log('SELECTED NOVELS', selectedNovels);\n            this.dictionary = values[1];\n            this.novels = values[2];\n            this.loadMeta(values[0], values[2]);\n            this.setValues(values[1], selectedNovels);\n            this.getForm(false);\n          });\n    });\n  }\n\n\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.novels);\n    console.log(values);\n    this.api.Dictionary.update({ id: this.idDictionary, values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  goBack() {\n    this.router.navigate(['/dictionary']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor(\n      public formBuilder: FormBuilder\n  ) {\n    this.formGroup = formBuilder.group({\n        id: [null]\n      , name: [null]\n      , language: [null]\n      , novel: [null]\n    });\n  }\n\n  formGroup: FormGroup;\n  form: FormField[];\n\n  selectNovels: Option[] = [];\n  selectLanguages: Option[] = [];\n  indexes: string[] = [];\n\n  loadMeta(meta: Meta, novels: Novel[]): void {\n    this.selectLanguages = [];\n    for (const value of Object.keys(meta.languages)) {\n      this.selectLanguages.push(new Option(value, meta.languages[value]));\n    }\n    this.selectNovels = [];\n    for (const value of Object.keys(novels)) {\n      this.selectNovels.push(new Option(novels[value].id + '', novels[value].nameCustom, false));\n    }\n  }\n  addForm(name?: string, label?: string, type?: string, options?: Option[]): void {\n    this.indexes.push(name);\n    this.form.push(new FormField(name, label, type, options));\n  }\n  getForm(insert: boolean): void {\n    this.form = [];\n    if (insert) { this.addForm('id', '', 'hidden'); }\n    this.addForm('name', 'Name', 'text');\n    this.addForm('language', 'Language', 'select', this.selectLanguages);\n    this.addForm('novel', 'Novels', 'multiselect', this.selectNovels);\n  }\n\n  setValues(dictionary: Dictionary, novels: Novel[]): void {\n    const novValues = novels.map((nove: Novel) => nove.id + '');\n    const nov = new FormArray(this.selectNovels.map((option) => {\n      if (novValues.includes(option.value)) {\n        option.setChecked(true);\n      }\n      return option.control;\n    }));\n    if (dictionary) {\n      this.formGroup.setValue({\n          id: dictionary.id\n        , name: dictionary.name\n        , language: dictionary.language\n        , novel: nov\n      });\n    }\n  }\n\n  getValues(novelsAlreadyThere?:Novel[]): {dictionary: Dictionary, novels: number[]} {\n    const values2return = { dictionary: null, novels: null};\n    values2return.dictionary = new Dictionary(this.formGroup.value);\n    console.log(values2return.dictionary);\n    delete (values2return.dictionary.novel);\n\n    const novIndex = this.indexes.indexOf('novel');\n    values2return.novels = this.form[novIndex].getValues().map(item => parseInt(item, 10));\n    if (novelsAlreadyThere && novelsAlreadyThere.length === values2return.novels.length) {\n      const dictValues = novelsAlreadyThere.map(item => item.id);\n      if (JSON.stringify(dictValues) === JSON.stringify(values2return.novels)) {\n        delete values2return.novels;\n      }\n    }\n\n    return values2return;\n  }\n}\n","export * from './dictionary.module';","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { Dictionary } from '../../_models/dictionary';\n\n@Component({\n  selector: 'app-dictionary-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  dictionaries: Dictionary[] = [];\n  idNovel: number = null;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    ) { }\n\n  ngOnInit() {\n    this.loadList();\n  }\n  loadList() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.api.Dictionary.getAll({idNovel: this.idNovel})\n      .then((dictionaries) => {\n        // this.novels = [novels];\n        this.dictionaries = Object.values(dictionaries);\n      }, (error) => {\n        console.log(error);\n      });\n  }\n  LINK(idDictionary?: number, action?: string) {\n    const base = [];\n    if (this.idNovel) {\n      base.push('novel');\n      base.push(this.idNovel);\n    }\n    base.push('dictionary');\n    if (action) {\n      base.push(action);\n    }\n    if (idDictionary) {\n      base.push(idDictionary);\n    }\n    console.log(base);\n    this.router.navigate(base);\n  }\n  delete(idDictionary: number) {\n    if (confirm('Are you sure?')) {\n      this.api.Dictionary.delete({ id: idDictionary })\n        .then((_) => {\n          // this.novels = [novels];\n          this.loadList();\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    return true;\n  }\n}\n","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n\t\t<div class=\"column\">\n\t\t\t<a  (click)=\"LINK(null,'add');\" class=\"button is-info\">Add Dictionary</a>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Language</th>\n\t\t\t\t<th style=\"width: 200px;\"># of Categories</th>\n\t\t\t\t<th style=\"width: 200px;\">Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let dictionary of dictionaries\" >\n\t\t\t\t<tr>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.name }}</td>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.language }}</td>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.countCategories() }}</td>\n\t\t\t\t\t<td>\n                        <!--a [routerLink]=\"['/dictionary/diff/', dictionary.id]\">\n                            Diff\n                        </a>\n                        /-->\n                        <a (click)=\"LINK(dictionary.id, 'edit');\" class=\"icon has-text-success\">\n                               <i class=\"fas fa-info-circle\"></i>\n                        </a>\n\t\t\t\t\t\t/\n                        <a [routerLink]=\"[]\" (click)=\"delete(dictionary.id);\" class=\"icon has-text-danger\">\n                            <i class=\"fas fa-ban\"></i>\n                        </a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}