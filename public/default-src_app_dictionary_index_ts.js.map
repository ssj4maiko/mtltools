{"version":3,"file":"default-src_app_dictionary_index_ts.js","mappings":"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","sources":["./src/app/api.service.ts","./src/app/dictionary/add/add.component.ts","./src/app/_views/form/form.component.html","./src/app/dictionary/dictionary-routing.module.ts","./src/app/dictionary/dictionary.module.ts","./src/app/dictionary/diff/diff.component.ts","./src/app/dictionary/diff/diff.component.html","./src/app/dictionary/edit/edit.component.ts","./src/app/dictionary/form.service.ts","./src/app/dictionary/index.ts","./src/app/dictionary/list/list.component.html","./src/app/dictionary/list/list.component.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { Observable, of, throwError, VirtualTimeScheduler } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { CacheService } from './cache.service';\n\nimport { Chapter } from './_models/chapter';\nimport { Novel } from './_models/novel';\nimport { Dictionary } from './_models/dictionary';\nimport { DictionaryCategory } from './_models/dictionarycategory';\nimport { DictionaryEntry } from './_models/dictionaryentry';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nconst apiUrl = environment.backendServer + '/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient,\n    private cacheService: CacheService\n  ) { }\n\n\n\n\n\n  _novels: object = {};\n\n\n\n\n\n\n\n  _chapters: object = {};\n  /*\n\t\tupdateChapter(idNovel,noChapter,chapter): Observable<any> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n\t\t\treturn this.http.put<Chapter>(url, chapter, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap((chapter: Chapter) => console.log(`Updated Chapter id=${chapter.no}`))\n\t\t\t\t\t,catchError(this.handleError<Chapter>('updateChapter'))\n\t\t\t\t);\n\t\t}\n\n\t\tdeleteChapter(idNovel,noChapter): Observable<Chapter> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n\n\t\t\treturn this.http.delete<Chapter>(url, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap(_ => console.log(`Deleted Chapter id=${noChapter}`))\n\t\t\t\t\t,catchError(this.handleError<Chapter>('deleteChapter'))\n\t\t\t\t);\n\t\t}\n\t*/\n\n\n\n\n\n\n  _dictionaries: object = {};\n\n  _categories: object = {};\n\n  _entries: object = {};\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  Novels(): object {\n    return this._novels;\n  }\n  Novel(id: number): Novel {\n    if (this._novels[id]) {\n      return this._novels[id];\n    } else {\n      return null;\n    }\n  }\n  getNovels(): Observable<{}> {\n    const url = `${apiUrl}novel`;\n\n    return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(novels => {\n               console.log('Fetched Novels');\n\n              for (const i in novels) {\n                this._novels[ novels[i].id ] = novels[i];\n              }\n             })\n            , catchError(this.handleError('getNovels', []))\n      )\n    );\n  }\n\n  addNovel(novel): Observable<Novel> {\n    const url = `${apiUrl}novel/`;\n    return this.http.post<Novel>(url, novel, httpOptions)\n      .pipe(\n         tap((novel: Novel) => {\n           console.log(`Registered Novel id=${novel.id}`);\n           this._novels[ novel.id ] = novel;\n         })\n        , catchError(this.handleError<Novel>('addNovel'))\n      );\n  }\n\n  getNovel(id: number): Observable<Novel> {\n    const url = `${apiUrl}novel/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<Novel>(url)\n          .pipe(\n             tap(novel => {\n               console.log(`Fetched Novel id=${id}`);\n               this._novels[ novel.id ] = novel;\n             })\n            , catchError(this.handleError<Novel>(`getNovel id=${id}`))\n          )\n    );\n  }\n\n  updateNovel(id, novel): Observable<any> {\n    const url = `${apiUrl}novel/${id}`;\n    return this.http.put<Novel>(url, novel, httpOptions)\n      .pipe(\n         tap((novel: Novel) => {\n           console.log(`Updated Novel id=${novel.id}`);\n           this._novels[ novel.id ] = novel;\n         })\n        , catchError(this.handleError<Novel>('updateNovel'))\n      );\n  }\n\n  deleteNovel(id): Observable<Novel> {\n    const url = `${apiUrl}novel/${id}`;\n\n    return this.http.delete<Novel>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Novel id=${id}`);\n           delete this._novels[id];\n         })\n        , catchError(this.handleError<Novel>('deleteNovel'))\n      );\n    }\n\n    updateIndexNovel(id): Observable<Novel> {\n        const url = `${apiUrl}chapter/autoUpdate/${id}`;\n        return this.http.get<Novel>(url)\n            .pipe(\n                tap((novel: Novel) => {\n                    console.log(`Updated All Chapters id=${novel.id}`);\n                    this._novels[novel.id] = novel;\n\n                    this.cacheService.delete(`${apiUrl}chapter/${novel.id}`);\n                    if (this._chapters[novel.id]) {\n                        delete this._chapters[novel.id];\n                    }\n                })\n                , catchError(this.handleError<Novel>('updateIndexNovel'))\n            );\n    }\n\n  Chapters(idNovel): object {\n    if (this._chapters[idNovel]) {\n      return this._chapters[idNovel];\n    } else {\n      return [];\n    }\n  }\n  Chapter(idNovel, noChapter: number): Chapter {\n    if (this._chapters[idNovel]) {\n      if (this._chapters[idNovel][noChapter]) {\n        return this._chapters[idNovel][noChapter];\n      }\n    }\n    return null;\n    }\n    getChapters(idNovel, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}chapter/${idNovel}`;\n        if (force) { this.cacheService.delete(url); }\n\n        return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(chapters => {\n               console.log('Fetched chapters');\n               if (chapters && chapters[0]) {\n                 if (!this._chapters[ idNovel ]) {\n                   this._chapters[ idNovel ] = {};\n                  }\n\n                for (const i in chapters) {\n                  // No need to rewrite entries with filled chapters\n                  if (this._chapters[ idNovel ][ chapters[i].no ]) {\n                    if (this._chapters[ idNovel ][ chapters[i].no ].textOriginal) {\n                                            if (this._chapters[idNovel][chapters[i].no].dateOriginalRevision == chapters[i].dateOriginalRevision) {\n                                                continue;\n                                            }\n                                        }\n                                    }\n                  this._chapters[ idNovel ][ chapters[i].no ] = chapters[i];\n                }\n               }\n             })\n            , catchError(this.handleError('getchapters', []))\n      )\n    );\n  }\n  /*\n\t\taddChapter(idNovel,chapter): Observable<Chapter> {\n\t\t\tconst url = `${apiUrl}chapter/${idNovel}`;\n\t\t\treturn this.http.post<Chapter>(url, chapter, httpOptions)\n\t\t\t\t.pipe(\n\t\t\t\t\t tap((chapter: Chapter) => {\n\t\t\t\t\t \tconsole.log(`Registered Chapter id=${chapter.no}`);\n\t\t\t\t \t\tif(!this._chapters[ idNovel ])\n\t\t\t\t \t\t\tthis._chapters[ idNovel ] = {};\n\t\t\t\t\t \tthis._chapters[ idNovel ][ chapter.no ] = chapter;\n\t\t\t\t\t })\n\t\t\t\t\t,catchError(this.handleError<Chapter>('addChapter'))\n\t\t\t\t);\n\t\t}\n\t*/\n  getAutoChapter(idNovel): Observable<any> {\n    const url = `${apiUrl}chapter/auto/${idNovel}`;\n    return this.http.get(url)\n      .pipe(\n         tap((pack: any) => {\n           this._novels[ idNovel ] = pack.novel;\n\n           if (!this._chapters[ idNovel ]) {\n             this._chapters[ idNovel ] = {};\n            }\n           this._chapters[ idNovel ][ pack.chapter.no ] = pack.chapter;\n         })\n        , catchError(this.handleError<Chapter>('addChapter'))\n      );\n  }\n    autoUpdateChapters(idNovel): Observable<any> {\n        const url = `${apiUrl}chapter/autoUpdate/${idNovel}`;\n        return this.http.get(url)\n            .pipe(\n                tap((novel: Novel) => {\n                    this._novels[idNovel] = novel;\n                })\n                , catchError(this.handleError<Chapter>('addChapter'))\n            );\n    }\n  getChapter(idNovel, noChapter: number): Observable<Chapter> {\n    const url = `${apiUrl}chapter/${idNovel}/${noChapter}`;\n    return this.http.get<Chapter>(url)\n      .pipe(\n         tap((chapter: Chapter) => {\n           console.log(`Fetched Chapter id=${chapter.no}`);\n           if (!this._chapters[ idNovel ]) {\n             this._chapters[ idNovel ] = {};\n            }\n           this._chapters[ idNovel ][ chapter.no ] = chapter;\n         })\n        , catchError(this.handleError<Chapter>(`getChapter id=${noChapter}`))\n      );\n  }\n\n  Dictionaries(): object {\n    if (this._dictionaries) {\n      return this._dictionaries;\n    } else {\n      return [];\n    }\n  }\n  Dictionary(language: number): Dictionary {\n    if (this._dictionaries) {\n      if (this._dictionaries[language]) {\n        return this._dictionaries[language];\n      }\n    }\n    return null;\n  }\n  getDictionaries(): Observable<{}> {\n    const url = `${apiUrl}dictionary/`;\n\n    return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(dictionaries => {\n               console.log('Fetched Dictionaries');\n               if (dictionaries && dictionaries[0]) {\n                 this._dictionaries = {};\n\n                for (const i in dictionaries) {\n                  this._dictionaries[ dictionaries[i].id ] = dictionaries[i];\n                }\n               }\n             })\n            , catchError(this.handleError('getDictionaries', []))\n      )\n    );\n  }\n\n  getDictionary(id: number): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<Dictionary>(url)\n          .pipe(\n             tap(dictionary => {\n               console.log(`Fetched Dictionary id=${id}`);\n               console.log(dictionary);\n               if (!this._dictionaries) {\n                 this._dictionaries = {};\n                }\n               this._dictionaries[ dictionary.id ] = dictionary;\n             })\n            , catchError(this.handleError<Dictionary>(`getDictionary id=${id}`))\n          )\n    );\n  }\n\n  addDictionary(dictionary): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/`;\n    return this.http.post<Dictionary>(url, dictionary, httpOptions)\n      .pipe(\n         tap((dictionary: Dictionary) => {\n           console.log(`Registered Dictionary id=${dictionary.id}`);\n           if (!this._dictionaries) {\n             this._dictionaries = {};\n            }\n           this._dictionaries[ dictionary.id ] = dictionary;\n         })\n        , catchError(this.handleError<Dictionary>('addDictionary'))\n      );\n  }\n\n  updateDictionary(id: number, dictionary): Observable<any> {\n    const url = `${apiUrl}dictionary/${id}`;\n    return this.http.put<Dictionary>(url, dictionary, httpOptions)\n      .pipe(\n         tap((dictionary: Dictionary) => {\n           console.log(`Updated Dictionary id=${dictionary.id}`);\n           if (!this._dictionaries) {\n                         this._dictionaries = {};\n            }\n           console.log(this._dictionaries[dictionary.id]);\n                    for (const i in dictionary) {\n                        console.log(i);\n                        this._dictionaries[ dictionary.id ][i] = dictionary[i];\n                    }\n         })\n        , catchError(this.handleError<Dictionary>('updateDictionary'))\n      );\n  }\n\n  deleteDictionary(id): Observable<Dictionary> {\n    const url = `${apiUrl}dictionary/${id}`;\n\n    return this.http.delete<Dictionary>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Dictionary id=${id}`);\n           delete this._dictionaries[id];\n         })\n        , catchError(this.handleError<Dictionary>('deleteNovel'))\n      );\n    }\n\n    dictionaryCreateCache(idDictionary: number): Observable<any> {\n        const url = `${apiUrl}cache/dictionary/${idDictionary}`;\n\n        return this.http.put<any>(url, httpOptions)\n            .pipe(\n                tap(_ => {\n                    console.log(`Cached Dictionary id=${idDictionary}`);\n                    console.log(_);\n                })\n                , catchError(this.handleError<Dictionary>('deleteNovel'))\n            );\n    }\n  setDictionaries(dictionaries: Dictionary[]): void {\n    if (!this._dictionaries) {\n      this._dictionaries = {};\n    }\n    const self = this;\n    dictionaries.forEach((dictionary) => {\n      self._dictionaries[dictionary.id] = dictionary;\n    });\n  }\n    dictionaryCache(idDictionary: number): Observable<{}> {\n        const url = `${apiUrl}cache/dictionary/${idDictionary}?${this._dictionaries[idDictionary].dateRevision}`;\n\n        return this.cacheService.get(\n            url,\n            this.http.get<any>(url)\n                .pipe(\n                    tap(cache => {\n                        console.log('Fetched Cache');\n\n                        if (cache.length == 1) {\n                            cache = cache[0];\n                            if (cache.dictionary_entry.length > 0) {\n                                cache.dictionary_entry.forEach(entry => {\n                                    if (!this._entries[entry.idCategory]) {\n                                        this._entries[entry.idCategory] = [];\n                                    }\n                                    this._entries[entry.idCategory][entry.id] = entry;\n                                });\n                            }\n                            if (cache.dictionary_category.length > 0) {\n                                if (!this._categories[idDictionary]) {\n                                    this._categories[idDictionary] = [];\n                                }\n                                cache.dictionary_category.forEach(category => {\n                                    if (!this._categories[category.idDictionary][category.id]) {\n                                        this._categories[category.idDictionary][category.id] = {};\n                                    }\n                                    for (const i in category) {\n                                        this._categories[category.idDictionary][category.id][i] = category[i];\n                                    }\n                                    this._categories[category.idDictionary][category.id].count_entries = [];\n                                    this._categories[category.idDictionary][category.id].count_entries[0] = {};\n                                    this._categories[category.idDictionary][category.id].count_entries[0].count = this._entries[category.id] ?\n                                                                                                                    Object.keys(this._entries[category.id]).length\n                                                                                                                    : 0;\n                                });\n                            }\n                        }\n                    })\n                    , catchError(this.handleError('getCategory', []))\n                )\n        );\n    }\n    saveFullDictionary(idDictionary: number, dictionary: any): Observable<any> {\n        const url = `${apiUrl}dictionary/fullSave/${idDictionary}`;\n        return this.http.put<any>(url, dictionary, httpOptions)\n            .pipe(\n                tap(res => {\n                    if (res.changes) {\n                        this._dictionaries[idDictionary].dateRevision = res.dateRevision;\n                        this.cacheService.delete(`${apiUrl}dictionary/cache/${idDictionary}?${this._dictionaries[idDictionary].dateRevision}`);\n                    }\n                })\n                , catchError(this.handleError<any>('getCategory'))\n            );\n    }\n\n\n\n\n    updateCounterCategory(no: any, idDictionary: number): void {\n        switch (no) {\n            case '+':\n                ++this._dictionaries[idDictionary].count_categories[0].count;\n                break;\n            case '-':\n                --this._dictionaries[idDictionary].count_categories[0].count;\n                break;\n            default:\n                this._dictionaries[idDictionary].count_categories[0].count = no;\n        }\n    }\n\n  Categories(idDictionary): object {\n    if (this._categories[idDictionary]) {\n      return this._categories[idDictionary];\n    } else {\n      return [];\n    }\n  }\n  Category(idDictionary, id: number): DictionaryCategory {\n    if (this._categories[idDictionary]) {\n      if (this._categories[idDictionary][id]) {\n        return this._categories[idDictionary][id];\n      }\n    }\n    return null;\n    }\n  getCategories(idDictionary, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}category/${idDictionary}`;\n        if (force) { this.cacheService.delete(url); }\n\n        return this.cacheService.get(\n      url,\n      this.http.get<{}>(url)\n          .pipe(\n             tap(categories => {\n               console.log('Fetched Category');\n               if (categories && categories[0]) {\n                 this._categories[ idDictionary ] = {};\n\n                 let counter = 0;\n                for (const i in categories) {\n          ++counter;\n          this._categories[ idDictionary ][ categories[i].id ] = categories[i];\n        }\n                 this.updateCounterCategory(counter, idDictionary);\n               }\n             })\n            , catchError(this.handleError('getCategory', []))\n      )\n    );\n  }\n\n    getCategory(idDictionary: number, id: number): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n    return this.cacheService.get(\n      url,\n      this.http.get<DictionaryCategory>(url)\n          .pipe(\n             tap(categories => {\n               console.log(`Fetched Category id=${id}`);\n               console.log(categories);\n               if (!this._categories[ categories.idDictionary ]) {\n                 this._categories[ categories.idDictionary ] = {};\n                }\n               this._categories[ categories.idDictionary ][ categories.id ] = categories;\n             })\n            , catchError(this.handleError<DictionaryCategory>(`getCategory id=${id}`))\n          )\n    );\n  }\n\n  addCategory(idDictionary: number, category): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}`;\n    return this.http.post<DictionaryCategory>(url, category, httpOptions)\n      .pipe(\n         tap((category: DictionaryCategory) => {\n           console.log(`Registered Category id=${category.id}`);\n           if (!this._categories[ category.idDictionary ]) {\n             this._categories[ category.idDictionary ] = {};\n            }\n           this._categories[category.idDictionary][category.id] = category;\n           this.updateCounterCategory('+', idDictionary);\n         })\n        , catchError(this.handleError<DictionaryCategory>('addCategory'))\n      );\n  }\n\n    updateCategory(idDictionary: number, id: number, category): Observable<any> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n    return this.http.put<DictionaryCategory>(url, category, httpOptions)\n      .pipe(\n         tap((category: DictionaryCategory) => {\n           console.log(`Updated Category id=${category.id}`);\n           if (!this._categories[ category.idDictionary ]) {\n             this._categories[ category.idDictionary ] = {};\n            }\n           this._categories[ category.idDictionary ][ category.id ] = category;\n         })\n        , catchError(this.handleError<DictionaryCategory>('updateCategory'))\n      );\n  }\n\n  deleteCategory(idDictionary: number, id): Observable<DictionaryCategory> {\n    const url = `${apiUrl}category/${idDictionary}/${id}`;\n\n    return this.http.delete<DictionaryCategory>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Category id=${id}`);\n           delete this._categories[idDictionary][id];\n           this.updateCounterCategory('-', idDictionary);\n         })\n        , catchError(this.handleError<DictionaryCategory>('deleteNovel'))\n      );\n  }\n\n\n\n\n\n    updateCounterEntry(no: any, idDictionary: number, idCategory: number): void {\n        if (this._categories[idDictionary][idCategory].count_entries) {\n            switch (no) {\n                case '+':\n                    ++this._categories[ idDictionary ][ idCategory ].count_entries[0].count;\n                    break;\n                case '-':\n                    --this._categories[ idDictionary ][ idCategory ].count_entries[0].count;\n                    break;\n                default:\n                    if (this._categories[idDictionary][idCategory].count_entries) {\n                        this._categories[idDictionary][idCategory].count_entries = [];\n                    }\n                    this._categories[ idDictionary ][ idCategory ].count_entries[0].count = no;\n            }\n        }\n    }\n\n  Entries(idCategory): object {\n    if (this._entries[idCategory]) {\n      return this._entries[idCategory];\n    } else {\n      return [];\n    }\n  }\n  Entry(idCategory, id: number): DictionaryEntry {\n    if (this._entries[idCategory]) {\n      if (this._entries[idCategory][id]) {\n        return this._entries[idCategory][id];\n      }\n    }\n    return null;\n  }\n    getEntries(idDictionary: number, idCategory, force?: boolean): Observable<{}> {\n        const url = `${apiUrl}entry/${idCategory}`;\n        return this.http.get<DictionaryEntry[]>(url)\n                .pipe(\n                        tap(entries => {\n                        console.log('Fetched Entries');\n                        if (entries && entries[0]) {\n                            this._entries[ idCategory ] = {};\n\n                            for (const i in entries) {\n                                this._entries[ idCategory ][ entries[i].id ] = entries[i];\n                            }\n                            }\n                        if (force) {\n                            this.updateCounterEntry(entries.length, idDictionary, idCategory);\n                            }\n\n                        })\n                    , catchError(this.handleError('getCategory', []))\n        );\n  }\n\n    addEntries(idDictionary: number, idCategory: number, entries): Observable<any> {\n        const url = `${apiUrl}entry/updatecategory/${idCategory}`;\n        return this.http.post<DictionaryEntry>(url, entries, httpOptions)\n      .pipe(\n         tap(_ => {\n                    // this.getEntries(idDictionary, idCategory, true);\n                 })\n        , catchError(this.handleError<DictionaryEntry>('addCategory'))\n      );\n  }\n\n  updateEntry(idCategory: number, id: number, category): Observable<any> {\n    const url = `${apiUrl}entry/${idCategory}/${id}`;\n    return this.http.put<DictionaryEntry>(url, category, httpOptions)\n      .pipe(\n         tap((entry: DictionaryEntry) => {\n           console.log(`Updated entry id=${entry.id}`);\n           if (!this._entries[ entry.idCategory ]) {\n                            this._entries[entry.idCategory ] = {};\n            }\n           this._entries[entry.idCategory][entry.id] = entry;\n         })\n        , catchError(this.handleError<DictionaryEntry>('updateCategory'))\n      );\n  }\n\n  deleteEntry(idCategory: number, id): Observable<DictionaryEntry> {\n    const url = `${apiUrl}entry/${idCategory}/${id}`;\n\n    return this.http.delete<DictionaryEntry>(url, httpOptions)\n      .pipe(\n         tap(_ => {\n           console.log(`Deleted Category id=${id}`);\n           delete this._entries[idCategory][id];\n         })\n        , catchError(this.handleError<DictionaryEntry>('deleteNovel'))\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Dictionary } from '../../_models/dictionary';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\nimport { Novel } from 'src/app/_models';\n\n@Component({\n  selector: 'app-dictionary-add',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class AddComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n  idNovel: number;\n  dictionary: Dictionary;\n  novels: Novel[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.formTitle = 'Edit Dictionary';\n\n    Promise.all([\n      this.api.Meta.get('languages'),\n      this.api.Dictionary.get({ id: this.idDictionary }),\n      this.api.Novel.getAll(),\n    ]).then((values: [Meta, Dictionary, Novel[]]) => {\n        this.dictionary = values[1];\n        this.novels = values[2];\n        this.loadMeta(values[0], values[2]);\n        if (this.idNovel) {\n          this.api.Novel.get({id: this.idNovel})\n              .then(novel => {\n                this.setValues(null, [novel]);\n              });\n        }\n        this.getForm(true);\n    });\n  }\n\n\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.novels);\n    this.api.Dictionary.add({ values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  LINK(idDictionary?: number, action?: string) {\n    const base = [];\n    if (this.idNovel) {\n      base.push('novel');\n      base.push(this.idNovel);\n    }\n    base.push('dictionary');\n    if (action) {\n      base.push(action);\n    }\n    if (idDictionary) {\n      base.push(idDictionary);\n    }\n    this.router.navigate(base);\n  }\n\n  goBack() {\n    this.LINK();\n  }\n}\n","<div class=\"form-content\">\n    <h1 class=\"title\">{{ formTitle }}</h1>\n    <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm(formGroup.value)\">\n        <div *ngFor=\"let field of form\" class='field'>\n\n            <ng-container [ngSwitch]=\"field.type\">\n\n                <ng-container #tempHidden *ngSwitchCase=\"'hidden'\">\n                    <input type=\"hidden\" formControlName=\"{{ field.name }}\">\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'checkbox'\">\n                    <label class='checkbox'>\n                        <input type=\"checkbox\" formControlName=\"{{ field.name }}\">\n                        {{ field.label }}\n                    </label>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'select'\">\n                    <label>{{ field.label }}</label>\n                    <div class=\"control\">\n                        <select formControlName=\"{{ field.name }}\">\n                            <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                        </select>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempCheck *ngSwitchCase=\"'multiselect'\">\n                    <label>{{ field.label }} - {{ field.name }}</label>\n                    <div class=\"control\">\n                        <!--p *ngFor=\"let option of field.options; let i = index\"-->\n                        <p *ngFor=\"let option of field.options; let i = index\">\n                            <label>\n                                <!--<input type=\"checkbox\" value=\"{{option.value}}\" (change)=\"option.setChecked(!this.checked);\" [checked]=\"option.checked\" />-->\n                                <!--{{option.label}}-->\n                                <input type=\"checkbox\" [formControl]=\"option.control\" /> {{ option.label}}\n                            </label>\n                            <!--select multiple='multiple' formControlName=\"{{ field.name }}\" (change)=\"onDebug(this.value)\">\n                                <option *ngFor=\"let option of field.options\" value=\"{{option.value}}\">{{ option.label }}</option>\n                            </select-->\n                        </p>\n                    </div>\n                </ng-container>\n\n                <ng-container #tempText *ngSwitchDefault>\n                    <label class='label' for=\"{{ field.name }}\">{{ field.label }}</label>\n                    <div class=\"control\">\n                        <input type=\"{{ field.type }}\" id=\"{{ field.name }}\" formControlName=\"{{ field.name }}\" class=\"input\">\n                    </div>\n                    <!--p class=\"help is-success\"></p-->\n                    <!--p class=\"help is-danger\"></p-->\n                </ng-container>\n\n            </ng-container>\n        </div>\n\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <input type=\"submit\" class=\"button is-link\" value=\"Submit\" />\n            </div>\n            <div class=\"control\">\n                <input (click)=\"goBack()\" class=\"button is-danger\" value=\"Cancel\" />\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoryModule } from '../category';\n\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DiffComponent } from './diff/diff.component';\n\n\nconst routes: Routes = [\n  {\n     path: ''\n    , component: ListComponent\n    , data: { title: 'List Dictionaries' }\n  },\n  {\n     path: 'add'\n    , component: AddComponent\n    , data: { title: 'Add Dictionaries', breadcrumb: 'Add Dictionary' }\n  },\n  {\n    path: 'edit/:idDictionary'\n    , component: EditComponent\n    , data: { title: 'Edit Dictionary', breadcrumb: 'Edit Dictionary' }\n  },\n  {\n    path: 'diff/:idDictionary'\n        , component: DiffComponent\n    , data: { title: 'Diff Dictionary', breadcrumb: 'Diff' }\n  },\n  {\n     path: ':idDictionary'\n        , loadChildren: () => import('../category').then(m => m.CategoryModule)\n    , data: { title: 'View categories', breadcrumb: 'View Categories' }\n  },\n  {\n     path: '**'\n    , redirectTo: ''\n  }\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(\n      routes\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class DictionaryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DictionaryRoutingModule } from './dictionary-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DiffComponent } from './diff/diff.component';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\n@NgModule({\n  declarations: [ListComponent, AddComponent, EditComponent, DiffComponent, ],\n  imports: [\n    CommonModule,\n    DictionaryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class DictionaryModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Dictionary } from 'src/app/_models/dictionary';\nimport { DictionaryCategory } from 'src/app/_models/dictionarycategory';\nimport { ApiService } from 'src/app/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DictionaryEntry } from 'src/app/_models/dictionaryentry';\n\n@Component({\n  selector: 'app-diff',\n  templateUrl: './diff.component.html',\n  styleUrls: ['./diff.component.scss']\n})\nexport class DiffComponent implements OnInit, OnDestroy {\n\n    dictionaries: Dictionary[] = [];\n\n    categories: DictionaryCategory[] = [];\n    categoriesHash: {} = {};\n    entries: DictionaryEntry[] = [];\n    idDictionary: number;\n    entriesOriginalValues: {} = {};\n\n    entry2SelectHash: {} = {};\n    entry2SelectHashKeys: string[] = [];\n\n    categoriesSelected: DictionaryCategory[] = [];\n    categoriesSelectedHash: {} = {};\n    entriesSelected: DictionaryEntry[] = [];\n    idDictionarySelected: number;\n\n    idNovel: number;\n\n    constructor(\n          private api: ApiService\n        , private route: ActivatedRoute\n        , private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.idNovel = this.route.snapshot.params.idNovel;\n        this.idDictionary = this.route.snapshot.params.idDictionary;\n        this.dictionaries = Object.values(this.api.Dictionaries());\n\n        if (this.dictionaries.length == 0) {\n            this.api.getDictionaries()\n                .subscribe(res => {\n                    const dictionaries = this.api.Dictionaries();\n                    if (dictionaries) {\n                        this.dictionaries = Object.values(dictionaries);\n                    }\n                    this.getCache();\n\n                }, err => {\n                    console.log(err);\n                });\n        } else {\n            this.getCache();\n        }\n    }\n    ngOnDestroy(): void {\n        delete this.dictionaries;\n        delete this.categories;\n        delete this.categoriesHash;\n        delete this.entries;\n        delete this.idDictionary;\n\n        delete this.entry2SelectHash;\n        delete this.entry2SelectHashKeys;\n\n        delete this.categoriesSelected;\n        delete this.categoriesSelectedHash;\n        delete this.entriesSelected;\n        delete this.idDictionarySelected;\n    }\n    loadSelectedDictionary() {\n        this.getSelectedCache();\n    }\n    changeEntry(entry) {\n        if (entry.id > 0) {\n            console.log(entry.id);\n            console.log(entry.idCategory);\n            entry.update =\n                    entry.entryOriginal != this.entriesOriginalValues[entry.id].entryOriginal\n                || entry.entryTranslation != this.entriesOriginalValues[entry.id].entryTranslation\n                || (!!entry.description && (entry.description != this.entriesOriginalValues[entry.id].description))\n                || entry.idCategory != this.entriesOriginalValues[entry.id].idCategory\n                ;\n            console.log(entry);\n        }\n    }\n    addEntry($event, i) {\n        const idCategory = $event.target.value,\n            selectedValues = this.entry2SelectHash[this.entry2SelectHashKeys[i]],\n            selectedEntry = this.entriesSelected[selectedValues.selected],\n            newEntry = new DictionaryEntry();\n\n        newEntry.id = 0;\n        newEntry.idCategory = idCategory;\n        newEntry.entryOriginal = selectedEntry.entryOriginal;\n        newEntry.entryTranslation = selectedEntry.entryTranslation;\n        newEntry.description = selectedEntry.description;\n\n        selectedValues.entry = this.entries.length;\n        this.entries.push(newEntry);\n    }\n    saveList() {\n        const tmpEntries = {},\n            send = [];\n\n        this.categories.forEach(category => {\n            send.push(category);\n            tmpEntries[category.id] = [];\n        });\n        this.entries.forEach(entry => {\n            tmpEntries[entry.idCategory].push(entry);\n        });\n        send.forEach(sen => {\n            sen.entries = tmpEntries[sen.id];\n        });\n\n        this.api.saveFullDictionary(this.idDictionary, send)\n            .subscribe(res => {\n                if (res.changes) {\n                    this.dictionaries = Object.values(this.api.Dictionaries());\n                    this.categories = [];\n                    this.router.navigate(['/novel/dictionary/', ]);\n                }\n                console.log(res);\n            }, err => {\n                console.log(err);\n            });\n    }\n    private getCache() {\n        if (this.categories.length == 0) {\n            this.api.dictionaryCache(this.idDictionary)\n                .subscribe(res => {\n                    this.categories = [];\n                    this.entries = [];\n\n                    this.categories = Object.values(this.api.Categories(this.idDictionary));\n                    this.categories.forEach(category => {\n                        this.categoriesHash[category.id] = {\n                            name: category.name\n                        };\n                        const entries = this.api.Entries(category.id);\n                        for (const i in entries) {\n                            this.entry2SelectHash[entries[i].entryOriginal] = {\n                                entry : this.entries.length,\n                                selected : null\n                            };\n                            this.entries.push(entries[i]);\n                            this.entriesOriginalValues[entries[i].id] = {\n                                  entryOriginal: '' + entries[i].entryOriginal\n                                , entryTranslation: '' + entries[i].entryTranslation\n                                , description: '' + entries[i].description\n                                , idCategory: '' + entries[i].idCategory\n                            };\n                        }\n                    });\n                    this.entry2SelectHashKeys = Object.keys(this.entry2SelectHash);\n                }, err => {\n                    console.log(err);\n                });\n        }\n    }\n    getSelectedCache() {\n        this.api.dictionaryCache(this.idDictionarySelected)\n            .subscribe(res => {\n                this.categoriesSelected = [];\n                this.entriesSelected = [];\n\n                this.categoriesSelected = Object.values(this.api.Categories(this.idDictionarySelected));\n                this.categoriesSelected.forEach(category => {\n                    this.categoriesSelectedHash[category.id] = {\n                        name: category.name\n                    };\n                    const entries = this.api.Entries(category.id);\n                    for (const i in entries) {\n\n                        if (!this.entry2SelectHash[entries[i].entryOriginal]) {\n                            this.entry2SelectHash[entries[i].entryOriginal] = {\n                                entry: null,\n                                selected: this.entriesSelected.length\n                            };\n                        } else {\n                            this.entry2SelectHash[entries[i].entryOriginal].selected = this.entriesSelected.length;\n                        }\n                        this.entriesSelected.push(entries[i]);\n                    }\n                });\n                this.entry2SelectHashKeys = Object.keys(this.entry2SelectHash);\n            }, err => {\n                console.log(err);\n            });\n    }\n\n}\n","\n<ng-template #actionButtons>\n    <div class=\"columns actionButtons\">\n        <div class=\"column\">\n            <a class=\"button is-info\" (click)=\"saveList()\">Save List</a>\n        </div>\n    </div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n\n<div>\n    <table class='table is-stripede is-fullwidth tableContent'>\n        <thead>\n            <tr>\n                <th colspan=\"4\">\n                    <select [(ngModel)]=\"idDictionarySelected\" (change)=\"loadSelectedDictionary();\">\n                        <option value=\"\" selected='selected'>Select a Dictionary</option>\n                        <option *ngFor=\"let dictionary of dictionaries\" value=\"{{ dictionary.id }}\">{{ dictionary.language }}</option>\n                    </select>\n                </th>\n            </tr>\n            <tr>\n                <th>Original</th>\n                <th>Translated</th>\n                <th>Description</th>\n                <th>Category</th>\n                <th>|</th>\n                <th>Category</th>\n                <th>Original</th>\n                <th>Translated</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody class=\"tableContent\">\n            <ng-container *ngFor=\"let entry2select of entry2SelectHashKeys; let i = index\">\n                <tr [ngClass]=\"{\n                            'new': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].id == 0,\n                            'deleted': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].delete == true,\n                            'changed': entry2SelectHash[entry2select].entry && entries[ entry2SelectHash[entry2select].entry ].update == true }\" >\n                    <ng-container *ngIf=\"entry2SelectHash[entry2select] && entry2SelectHash[entry2select].selected; else selectedEmpty\">\n                        <td>\n                            {{ categoriesSelectedHash [entriesSelected[ entry2SelectHash[entry2select].selected ].idCategory].name }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].entryTranslation }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].entryOriginal }}\n                        </td>\n                        <td>\n                            {{ entriesSelected[ entry2SelectHash[entry2select].selected ].description }}\n                        </td>\n                    </ng-container>\n\n                    <ng-template #selectedEmpty>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                    </ng-template>\n\n                    <td>|</td>\n\n                    <ng-container *ngIf=\"entry2SelectHash[entry2select] && entry2SelectHash[entry2select].entry != null; else nonAnEntry\">\n                        <td>\n                            <select [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].idCategory\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\">\n                                <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{ category.name }}</option>\n                            </select>\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].entryTranslation\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].entryOriginal\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                        <td>\n                            <input type=\"text\" [(ngModel)]=\"entries[ entry2SelectHash[entry2select].entry ].description\"\n                                    (ngModelChange)=\"changeEntry(entries[ entry2SelectHash[entry2select].entry ])\" />\n                        </td>\n                    </ng-container>\n\n                    <ng-template #nonAnEntry>\n                        <td>\n                            <select (change)=\"addEntry($event,i);\">\n                                <option value=\"\">Select a category to copy</option>\n                                <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{ category.name }}</option>\n                            </select>\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                        <td>\n                            -\n                        </td>\n                    </ng-template>\n                </tr>\n            </ng-container>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\nimport { Novel, Dictionary } from 'src/app/_models';\nimport { FormField, Meta, Option } from '../../_models/formField';\nimport { FormService } from '../form.service';\n\n@Component({\n  selector: 'app-dictionary-edit',\n  templateUrl: '../../_views/form/form.component.html',\n  styleUrls: ['../../_views/form/form.component.scss']\n})\nexport class EditComponent extends FormService implements OnInit {\n\n  formTitle: string;\n  idDictionary: number;\n  idNovel: number;\n  dictionary: Dictionary;\n  novels: Novel[];\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , public api: ApiService\n    , public formBuilder: FormBuilder\n  ) {\n    super(formBuilder);\n  }\n\n  ngOnInit() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.idDictionary = this.route.snapshot.params.idDictionary;\n    this.formTitle = 'Edit Dictionary';\n\n    Promise.all([\n      this.api.Meta.get('languages'),\n      this.api.Dictionary.get({ id: this.idDictionary }),\n      this.api.Novel.getAll(),\n    ]).then((values: [Meta, Dictionary, Novel[]]) => {\n\n      this.api.Novel.getAll({ idDictionary: this.idDictionary })\n          .then((selectedNovels: Novel[]) => {\n            console.log('SELECTED NOVELS', selectedNovels);\n            this.dictionary = values[1];\n            this.novels = values[2];\n            this.loadMeta(values[0], values[2]);\n            this.setValues(values[1], selectedNovels);\n            this.getForm(false);\n          });\n    });\n  }\n\n\n  submitForm(form: NgForm) {\n    const values = this.getValues(this.novels);\n    console.log(values);\n    this.api.Dictionary.update({ id: this.idDictionary, values })\n      .then(res => {\n        this.goBack();\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  goBack() {\n    this.router.navigate(['/dictionary']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Dictionary } from '../_models/dictionary';\nimport { FormField, Meta, Option } from '../_models/formField';\nimport { Novel } from '../_models/novel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor(\n      public formBuilder: FormBuilder\n  ) {\n    this.formGroup = formBuilder.group({\n        id: [null]\n      , name: [null]\n      , language: [null]\n      , novel: [null]\n    });\n  }\n\n  formGroup: FormGroup;\n  form: FormField[];\n\n  selectNovels: Option[] = [];\n  selectLanguages: Option[] = [];\n  indexes: string[] = [];\n\n  loadMeta(meta: Meta, novels: Novel[]): void {\n    this.selectLanguages = [];\n    for (const value of Object.keys(meta.languages)) {\n      this.selectLanguages.push(new Option(value, meta.languages[value]));\n    }\n    this.selectNovels = [];\n    for (const value of Object.keys(novels)) {\n      this.selectNovels.push(new Option(novels[value].id + '', novels[value].nameCustom, false));\n    }\n  }\n  addForm(name?: string, label?: string, type?: string, options?: Option[]): void {\n    this.indexes.push(name);\n    this.form.push(new FormField(name, label, type, options));\n  }\n  getForm(insert: boolean): void {\n    this.form = [];\n    if (insert) { this.addForm('id', '', 'hidden'); }\n    this.addForm('name', 'Name', 'text');\n    this.addForm('language', 'Language', 'select', this.selectLanguages);\n    this.addForm('novel', 'Novels', 'multiselect', this.selectNovels);\n  }\n\n  setValues(dictionary: Dictionary, novels: Novel[]): void {\n    const novValues = novels.map((nove: Novel) => nove.id + '');\n    const nov = new FormArray(this.selectNovels.map((option) => {\n      if (novValues.includes(option.value)) {\n        option.setChecked(true);\n      }\n      return option.control;\n    }));\n    if (dictionary) {\n      this.formGroup.setValue({\n          id: dictionary.id\n        , name: dictionary.name\n        , language: dictionary.language\n        , novel: nov\n      });\n    }\n  }\n\n  getValues(novelsAlreadyThere?:Novel[]): {dictionary: Dictionary, novels: number[]} {\n    const values2return = { dictionary: null, novels: null};\n    values2return.dictionary = new Dictionary(this.formGroup.value);\n    console.log(values2return.dictionary);\n    delete (values2return.dictionary.novel);\n\n    const novIndex = this.indexes.indexOf('novel');\n    values2return.novels = this.form[novIndex].getValues().map(item => parseInt(item, 10));\n    if (novelsAlreadyThere && novelsAlreadyThere.length === values2return.novels.length) {\n      const dictValues = novelsAlreadyThere.map(item => item.id);\n      if (JSON.stringify(dictValues) === JSON.stringify(values2return.novels)) {\n        delete values2return.novels;\n      }\n    }\n\n    return values2return;\n  }\n}\n","export * from './dictionary.module';","<ng-template #actionButtons>\n\t<div class=\"columns actionButtons\">\n\t\t<div class=\"column\">\n\t\t\t<a  (click)=\"LINK(null,'add');\" class=\"button is-info\">Add Dictionary</a>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n<div>\n\t<table class='table is-striped is-hoverable is-fullwidth'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Language</th>\n\t\t\t\t<th style=\"width: 200px;\"># of Categories</th>\n\t\t\t\t<th style=\"width: 200px;\">Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let dictionary of dictionaries\" >\n\t\t\t\t<tr>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.name }}</td>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.language }}</td>\n                    <td (click)=\"LINK(dictionary.id);\">{{ dictionary.countCategories() }}</td>\n\t\t\t\t\t<td>\n                        <!--a [routerLink]=\"['/dictionary/diff/', dictionary.id]\">\n                            Diff\n                        </a>\n                        /-->\n                        <a (click)=\"LINK(dictionary.id, 'edit');\" class=\"icon has-text-success\">\n                               <i class=\"fas fa-info-circle\"></i>\n                        </a>\n\t\t\t\t\t\t/\n                        <a [routerLink]=\"[]\" (click)=\"delete(dictionary.id);\" class=\"icon has-text-danger\">\n                            <i class=\"fas fa-ban\"></i>\n                        </a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../api';\n\nimport { Dictionary } from '../../_models/dictionary';\n\n@Component({\n  selector: 'app-dictionary-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  dictionaries: Dictionary[] = [];\n  idNovel: number = null;\n\n  constructor(\n      private router: Router\n    , private route: ActivatedRoute\n    , private api: ApiService\n    ) { }\n\n  ngOnInit() {\n    this.loadList();\n  }\n  loadList() {\n    this.idNovel = this.route.snapshot.params.idNovel;\n    this.api.Dictionary.getAll({idNovel: this.idNovel})\n      .then((dictionaries) => {\n        // this.novels = [novels];\n        this.dictionaries = Object.values(dictionaries);\n      }, (error) => {\n        console.log(error);\n      });\n  }\n  LINK(idDictionary?: number, action?: string) {\n    const base = [];\n    if (this.idNovel) {\n      base.push('novel');\n      base.push(this.idNovel);\n    }\n    base.push('dictionary');\n    if (action) {\n      base.push(action);\n    }\n    if (idDictionary) {\n      base.push(idDictionary);\n    }\n    console.log(base);\n    this.router.navigate(base);\n  }\n  delete(idDictionary: number) {\n    if (confirm('Are you sure?')) {\n      this.api.Dictionary.delete({ id: idDictionary })\n        .then((_) => {\n          // this.novels = [novels];\n          this.loadList();\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    return true;\n  }\n}\n"],"names":["of","HttpHeaders","catchError","tap","environment","httpOptions","headers","apiUrl","backendServer","ApiService","constructor","http","cacheService","handleError","operation","result","error","console","Novels","_novels","Novel","id","getNovels","url","get","pipe","novels","log","i","addNovel","novel","post","getNovel","updateNovel","put","deleteNovel","delete","_","updateIndexNovel","_chapters","Chapters","idNovel","Chapter","noChapter","getChapters","force","chapters","no","textOriginal","dateOriginalRevision","getAutoChapter","pack","chapter","autoUpdateChapters","getChapter","Dictionaries","_dictionaries","Dictionary","language","getDictionaries","dictionaries","getDictionary","dictionary","addDictionary","updateDictionary","deleteDictionary","dictionaryCreateCache","idDictionary","setDictionaries","self","forEach","dictionaryCache","dateRevision","cache","length","dictionary_entry","entry","_entries","idCategory","dictionary_category","_categories","category","count_entries","count","Object","keys","saveFullDictionary","res","changes","updateCounterCategory","count_categories","Categories","Category","getCategories","categories","counter","getCategory","addCategory","updateCategory","deleteCategory","updateCounterEntry","Entries","Entry","getEntries","entries","addEntries","updateEntry","deleteEntry","i0","factory","providedIn","FormService","AddComponent","router","route","api","formBuilder","ngOnInit","snapshot","params","formTitle","Promise","all","Meta","getAll","then","values","loadMeta","setValues","getForm","submitForm","form","getValues","add","goBack","err","LINK","action","base","push","navigate","selectors","features","decls","vars","consts","template","ctx","CommonModule","RouterModule","ListComponent","EditComponent","DiffComponent","routes","path","component","data","title","breadcrumb","loadChildren","m","CategoryModule","redirectTo","DictionaryRoutingModule","forChild","imports","i1","exports","FormsModule","ReactiveFormsModule","DictionaryModule","declarations","DictionaryEntry","ctx_r5","ctx_r22","ctx_r26","ctx_r30","ctx_r34","ctx_r39","_r11","_r14","subscribe","getCache","ngOnDestroy","categoriesHash","entry2SelectHash","entry2SelectHashKeys","categoriesSelected","categoriesSelectedHash","entriesSelected","idDictionarySelected","loadSelectedDictionary","getSelectedCache","changeEntry","update","entryOriginal","entriesOriginalValues","entryTranslation","description","addEntry","$event","target","value","selectedValues","selectedEntry","selected","newEntry","saveList","tmpEntries","send","sen","name","selectedNovels","FormArray","FormField","Option","formGroup","group","meta","selectLanguages","languages","selectNovels","nameCustom","addForm","label","type","options","indexes","insert","novValues","map","nove","nov","option","includes","setChecked","control","setValue","novelsAlreadyThere","values2return","novIndex","indexOf","item","parseInt","dictValues","JSON","stringify","ctx_r4","ctx_r7","ctx_r9","ctx_r10","ctx_r11","ctx_r12","loadList","confirm"],"sourceRoot":"webpack:///"}