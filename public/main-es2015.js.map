{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/modal/modal.component.ts","webpack:///./src/app/_services/modal/modal.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAgF;AAEjC;AAE/C,oFAAoF;AAO7E,MAAM,cAAc;IAIvB,YACY,YAA0B,EAC1B,EAAc;QADd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,OAAE,GAAF,EAAE,CAAY;QAEtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;IACpC,CAAC;IAED,QAAQ;QACJ,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,6BAA6B;QAC7B,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACvC,OAAO;SACV;QAED,oGAAoG;QACpG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAExC,kCAAkC;QAClC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAM;YACnD,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU,EAAE;gBACnC,KAAK,CAAC,KAAK,EAAE,CAAC;aACjB;QACL,CAAC,CAAC,CAAC;QAEH,0FAA0F;QAC1F,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,6DAA6D;IAC7D,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,aAAa;IACb,IAAI;QACA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACjD,CAAC;IAED,cAAc;IACd,KAAK;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;CACJ;;;;;;;;;;;;;;;;;ACzDM,MAAM,YAAY;IAGxB;QAFQ,WAAM,GAAU,EAAE,CAAC;IAEX,CAAC;IAEjB,GAAG,CAAC,KAAU;QACb,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,EAAU;QAChB,2CAA2C;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,CAAC,EAAU;QACd,6BAA6B;QAC7B,IAAI,KAAK,GAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,KAAK,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,KAAK,CAAC,EAAU;QACf,8BAA8B;QAC9B,IAAI,KAAK,GAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,KAAK,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;;;;;;;;;;;;;;;AC7BF;AAAA;AAAA;AAAuD;AAIvD,MAAM,MAAM,GAAW;IACtB;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,qBAAqB;KACpC;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,OAAO;KACpB;CACD,CAAC;AAWK,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCzBjC,qkBAAY,IAEZ,6IAAuB,KACrB,yjBAAe,yBAHjB,YAAY,GAGV,YAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjB;AAAA;AAAA;AAAyC;AAUlC,MAAM,YAAY;IAExB,YACS,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFvB,UAAK,GAAG,UAAU,CAAC;QAIlB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACtB,CAAC;CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA4D;AACJ;AACxD,yEAAO,CAAC,GAAG,CAAC,qEAAG,CAAC,CAAC;AAqBV,MAAM,SAAS;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGC9BlB,wHAAsD,KAClD;;;qmCAAwE,MACpE,2KAAqD,gFAAsB,2BAD3E,kBAA6B,wBAAjC,YAAwE,EAApE,SAA6B,GAAC,oCAAqC,EAAvE,YAAwE,EAAtC,SAAqC,2BACd,mEAAsB;qGAR3F,2HAAQ,KACP;;;mcAAkE,IAClE,sHAAI,KACG;;;qmCAAmE,MAC/D,2KAAqD,uFAAU,MAEnE,kdAAsD,iDALZ,mBAAc,EAA/D,YAAkE,EAAjB,SAAc,GAEpD,6BAAwB,EAA5B,YAAmE,EAA/D,SAAwB,GAAC,oCAAqC,EAAlE,YAAmE,EAAtC,SAAqC,GAGnD,mBAAsC,cAArD,aAAsD,EAAvC,SAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN7D;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC4C;AAEhC;AAOvD,MAAM,eAAe;IAIxB,YACa,MAAc,EACb,cAA8B;QAD/B,WAAM,GAAN,MAAM,CAAQ;QACb,mBAAc,GAAd,cAAc,CAAgB;QAEpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC;IAEL,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACnB,6DAAM,CAAC,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,EAC9D,2EAAoB,EAAE,CACzB,CAAC,SAAS,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,gCAAgC;QACpC,CAAC,CAAC;IACT,CAAC;IAEE,eAAe,CAAC,KAAoB,EAAE,MAAc,QAAQ,EAAE,cAA6B,EAAE;QACzF,0DAA0D;QAC1D,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QACjG,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAErF,yDAAyD;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5C,MAAM,cAAc,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,cAAc,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;YACpC,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,KAAK,GAAG,SAAS,CAAC,oCAAmC;SACxD;QAED,wDAAwD;QACxD,4BAA4B;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAE9C,MAAM,UAAU,GAAgB;YAC5B,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,OAAO;SACf,CAAC;QACF,yCAAyC;QACzC,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;QAC1F,IAAI,KAAK,CAAC,UAAU,EAAE;YAClB,wCAAwC;YACxC,mEAAmE;YACnE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;SAC1E;QACD,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEO,YAAY;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC1B,IAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,EAAC;gBAChC,QAAO,EAAE,CAAC,KAAK,EAAC;oBACZ,KAAK,SAAS;wBACV,EAAE,CAAC,KAAK,GAAG,qBAAqB,CAAC;wBACjC,MAAM;oBACV,KAAK,cAAc;wBACf,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;wBACxB,MAAM;oBACV,KAAK,YAAY;wBACb,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC;wBACrB,MAAM;iBACb;aACJ;iBAAM;gBACH,QAAQ,EAAE,CAAC,KAAK,EAAE;oBACd,KAAK,SAAS;wBACV,EAAE,CAAC,KAAK,GAAG,cAAc,CAAC;wBAC1B,MAAM;oBACV,KAAK,WAAW;wBACZ,EAAE,CAAC,KAAK,GAAG,iBAAiB,CAAC;wBAC7B,MAAM;iBACb;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;;;;;;;;;;;;AC1FD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,yBAAyB;IACrC,aAAa,EAAE,yBAAyB;CAC3C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./novel.ngfactory\": [\n\t\t\"./src/app/novel/novel.module.ngfactory.js\",\n\t\t\"novel-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalService } from './modal.service';\n\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\n\n@Component({\n\tselector: 'jw-modal',\n\ttemplateUrl: './modal.component.html',\n\tstyleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n\n    constructor(\n        private modalService: ModalService,\n        private el: ElementRef\n        ) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit(): void {\n        let modal = this;\n\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', function (e: any) {\n            if (e.target.className === 'jw-modal') {\n                modal.close();\n            }\n        });\n\n        // add self (this modal instance) to the modal service so it's accessible from controllers\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        this.element.style.display = 'block';\n        document.body.classList.add('jw-modal-open');\n    }\n\n    // close modal\n    close(): void {\n        this.element.style.display = 'none';\n        document.body.classList.remove('jw-modal-open');\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ModalService {\n\tprivate modals: any[] = [];\n\n\tconstructor() { }\n\n\tadd(modal: any) {\n\t\t// add modal to array of active modals\n\t\tthis.modals.push(modal);\n\t}\n\n\tremove(id: string) {\n\t\t// remove modal from array of active modals\n\t\tthis.modals = this.modals.filter(x => x.id !== id);\n\t}\n\n\topen(id: string) {\n\t\t// open modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.open();\n\t}\n\n\tclose(id: string) {\n\t\t// close modal specified by id\n\t\tlet modal: any = this.modals.filter(x => x.id === id)[0];\n\t\tmodal.close();\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NovelModule } from './novel';\n\nconst routes: Routes = [\n\t{\n\t\t path: 'novel'\n\t\t,loadChildren: './novel#NovelModule'\n\t},\n\t{\n\t\t path: '**'\n\t\t,redirectTo: 'novel'\n\t},\n];\n\n@NgModule({\n  \timports: [\n\t\tRouterModule.forRoot(\n\t\t \troutes\n\t\t \t//,{ enableTracing: true  }\n\t\t)\n\t],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-header></app-header>\n\n<div class='container'>\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: [\n\t\t'./app.component.scss',\n        './_services/modal/modal.component.scss',\n\t]\n})\nexport class AppComponent {\n\ttitle = 'frontend';\n\tconstructor(\n\t\tprivate router: Router\n\t){\n\t\tthis.title = 'false';\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PapaParseModule } from 'ngx-papaparse';\n\nimport { HeaderComponent } from './header/header.component';\nimport { ModalComponent } from './_services/modal/modal.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tHeaderComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tHttpClientModule, \t// Necessary for API Services\n\t\tFormsModule,\t\t// Necessary for Dynamic Forms\n\t\tReactiveFormsModule,// Necessary for Dynamic Forms\n        FontAwesomeModule,\t// Necessary for SVG\n        PapaParseModule,    // Necessary for CSV\n    ],\n\tproviders: [\n        ModalComponent,\n    ],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<header>\n\t<img src=\"assets/mtl_tools.png\" class='appName'  routerLink=\"/\" />\n\t<ul>\n        <li routerLink=\"/novel/list\" routerLinkActive=\"router-link-active\">\n            <a class='button is-primary is-inverted is-outlined'>Novel List</a>\n        </li>\n        <ng-container  *ngFor=\"let breadcrumb of breadcrumbs\">\n            <li [routerLink]=\"breadcrumb.url\" routerLinkActive=\"router-link-active\">\n                <a class='button is-primary is-inverted is-outlined'>{{ breadcrumb.label }}</a>\n            </li>\n        </ng-container>\n\t</ul>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Event as RouterEvent } from '@angular/router';\nimport { IBreadCrumb } from './breadcrumb.interface';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n\tselector: 'app-header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    public breadcrumbs: IBreadCrumb[];\n\n    constructor(\n         private router: Router\n        , private activatedRoute: ActivatedRoute\n        ) {\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n        }\n\n    ngOnInit() {\n        this.router.events.pipe(\n            filter((event: RouterEvent) => event instanceof NavigationEnd),\n            distinctUntilChanged(),\n        ).subscribe(() => {\n            this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n            this.renameLabels();\n            //console.log(this.breadcrumbs);\n        })\n\t}\n\n    buildBreadCrumb(route:ActivatedRoute, url: string = '/novel', breadcrumbs: IBreadCrumb[] = []): IBreadCrumb[]{\n        //If no routeConfig is avalailable we are on the root path\n        let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n        let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n        // If the route is dynamic route such as ':id', remove it\n        const lastRoutePart = path.split('/').pop();\n        const isDynamicRoute = lastRoutePart.startsWith(':');\n        if (isDynamicRoute && !!route.snapshot) {\n            const paramName = lastRoutePart.split(':')[1];\n            path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n            label = paramName;//route.snapshot.params[paramName];\n        }\n\n        //In the routeConfig the complete path is not available,\n        //so we rebuild it each time\n        const nextUrl = path ? `${url}/${path}` : url;\n\n        const breadcrumb: IBreadCrumb = {\n            label: label,\n            url: nextUrl,\n        };\n        // Only adding route with non-empty label\n        const newBreadcrumbs = breadcrumb.label ? [...breadcrumbs, breadcrumb] : [...breadcrumbs];\n        if (route.firstChild) {\n            //If we are not on our current path yet,\n            //there will be more children to look after, to build our breadcumb\n            return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n        }\n        return newBreadcrumbs;\n    }\n\n    private renameLabels(){\n        this.breadcrumbs.forEach(el => {\n            if(el.url.indexOf('dictionary') > 0){\n                switch(el.label){\n                    case 'idNovel':\n                        el.label = 'Dictionary Language';\n                        break;\n                    case 'idDictionary':\n                        el.label = 'Categories';\n                        break;\n                    case 'idCategory':\n                        el.label = 'Entries';\n                        break;\n                }\n            } else {\n                switch (el.label) {\n                    case 'idNovel':\n                        el.label = 'Chapter List';\n                        break;\n                    case 'noChapter':\n                        el.label = 'Current Chapter';\n                        break;\n                }\n            }\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    currentUrl: 'http://192.168.1.9:4200',\n    backendServer: 'http://192.168.1.9:4000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}